basePath: /spider
definitions:
  spider.DeletedResourceInfoList:
    properties:
      DeletedIIDList:
        description: List of deleted resource IDs
        items:
          $ref: '#/definitions/spider.IID'
        type: array
      IsAllDeleted:
        description: 'true: all deleted, false: some remained'
        example: true
        type: boolean
      RemainedErrorInfoList:
        description: List of resources that failed to delete
        items:
          $ref: '#/definitions/spider.RemainedErrorInfo'
        type: array
      ResourceType:
        description: Resource type
        example: VPC
        type: string
    required:
    - DeletedIIDList
    - IsAllDeleted
    - RemainedErrorInfoList
    - ResourceType
    type: object
  spider.DestroyedInfo:
    properties:
      DeletedAllListByResourceType:
        description: List of resources deleted by type
        items:
          $ref: '#/definitions/spider.DeletedResourceInfoList'
        type: array
      IsAllDestroyed:
        description: 'true: all destroyed, false: some remained'
        example: true
        type: boolean
    required:
    - DeletedAllListByResourceType
    - IsAllDestroyed
    type: object
  spider.RemainedErrorInfo:
    properties:
      ErrorMsg:
        description: Error message for the failed resource
        example: delete error
        type: string
      Name:
        description: Resource name that failed to delete
        example: vpc-01
        type: string
    required:
    - ErrorMsg
    - Name
    type: object
  spider.AccessInfo:
    description: Access Information for a Kubernetes Cluster. <br> Take some time
      to provide.
    properties:
      Endpoint:
        example: https://1.2.3.4
        type: string
      Kubeconfig:
        example: |-
          apiVersion: v1
          clusters:
          - cluster:
           ....
        type: string
    type: object
  spider.AddonsInfo:
    description: Addons Information for a Kubernetes Cluster
    properties:
      KeyValueList:
        items:
          $ref: '#/definitions/spider.KeyValue'
        type: array
    type: object
  spider.AnyCallInfo:
    description: This structure holds both the input and output parameters for the
      AnyCall API.
    properties:
      FID:
        description: 'Function ID, ex: countAll'
        example: countAll
        type: string
      IKeyValueList:
        description: 'Input Arguments List, ex:[{"Key": "rsType", "Value": "vpc"}]'
        items:
          $ref: '#/definitions/spider.KeyValue'
        type: array
      OKeyValueList:
        description: 'Output Results List, ex:[{"Key": "Count", "Value": "10"}]"'
        items:
          $ref: '#/definitions/spider.KeyValue'
        type: array
    required:
    - FID
    - IKeyValueList
    - OKeyValueList
    type: object
  spider.CloudPrice:
    properties:
      cloudName:
        description: Name of the cloud provider
        example: AWS
        type: string
      priceList:
        description: List of prices for different services/products
        items:
          $ref: '#/definitions/spider.Price'
        type: array
    required:
    - cloudName
    - priceList
    type: object
  spider.ClusterInfo:
    description: Kubernetes Cluster Information
    properties:
      AccessInfo:
        $ref: '#/definitions/spider.AccessInfo'
      Addons:
        $ref: '#/definitions/spider.AddonsInfo'
      CreatedTime:
        example: "2024-08-27T10:00:00Z"
        type: string
      IId:
        $ref: '#/definitions/spider.IID'
      KeyValueList:
        items:
          $ref: '#/definitions/spider.KeyValue'
        type: array
      Network:
        $ref: '#/definitions/spider.NetworkInfo'
      NodeGroupList:
        description: '---'
        items:
          $ref: '#/definitions/spider.NodeGroupInfo'
        type: array
      Status:
        allOf:
        - $ref: '#/definitions/spider.ClusterStatus'
        example: Active
      TagList:
        items:
          $ref: '#/definitions/spider.KeyValue'
        type: array
      Version:
        description: Kubernetes Version, ex) 1.30
        example: "1.30"
        type: string
    required:
    - IId
    - Network
    - Status
    - Version
    type: object
  spider.ClusterStatus:
    enum:
    - Creating
    - Active
    - Inactive
    - Updating
    - Deleting
    type: string
    x-enum-varnames:
    - ClusterCreating
    - ClusterActive
    - ClusterInactive
    - ClusterUpdating
    - ClusterDeleting
  spider.DiskInfo:
    properties:
      CreatedTime:
        description: The time when the disk was created
        type: string
      DiskSize:
        description: '"default", "50", "1000" (unit is GB)'
        example: "100"
        type: string
      DiskType:
        description: '"gp2", "Premium SSD", ...'
        example: gp2
        type: string
      IId:
        allOf:
        - $ref: '#/definitions/spider.IID'
        description: '{NameId, SystemId}'
      KeyValueList:
        description: Additional key-value pairs associated with this disk
        items:
          $ref: '#/definitions/spider.KeyValue'
        type: array
      OwnerVM:
        allOf:
        - $ref: '#/definitions/spider.IID'
        description: When the Status is DiskAttached
      Status:
        allOf:
        - $ref: '#/definitions/spider.DiskStatus'
        example: Available
      TagList:
        description: A list of tags associated with this disk
        items:
          $ref: '#/definitions/spider.KeyValue'
        type: array
      Zone:
        description: Target Zone Name
        example: us-east-1a
        type: string
    required:
    - CreatedTime
    - DiskSize
    - DiskType
    - IId
    - Status
    - Zone
    type: object
  spider.DiskStatus:
    enum:
    - Creating
    - Available
    - Attached
    - Deleting
    - Error
    type: string
    x-enum-varnames:
    - DiskCreating
    - DiskAvailable
    - DiskAttached
    - DiskDeleting
    - DiskError
  spider.GpuInfo:
    properties:
      Count:
        description: Number of GPUs, "-1" when not applicable
        example: "2"
        type: string
      MemSizeGB:
        description: Memory size of the GPU in GB, "-1" when not applicable
        example: "12"
        type: string
      Mfr:
        description: Manufacturer of the GPU, NA when not applicable
        example: NVIDIA
        type: string
      Model:
        description: Model of the GPU, NA when not applicable
        example: Tesla K80
        type: string
      TotalMemSizeGB:
        description: Total Memory size of the GPU in GB, "-1" when not applicable
        example: "24"
        type: string
    required:
    - Count
    type: object
  spider.HealthCheckerInfo:
    description: Health Checker Information for a Network Load Balancer (NLB)
    properties:
      CspID:
        type: string
      Interval:
        description: secs, Interval time between health checks.
        example: 30
        type: integer
      KeyValueList:
        items:
          $ref: '#/definitions/spider.KeyValue'
        type: array
      Port:
        description: Listener Port or 1-65535
        example: "80"
        type: string
      Protocol:
        description: TCP|HTTP
        example: TCP
        type: string
      Threshold:
        description: num, The number of continuous health checks to change the VM
          status.
        example: 3
        type: integer
      Timeout:
        description: secs, Waiting time to decide an unhealthy VM when no response.
        example: 5
        type: integer
    required:
    - Interval
    - Port
    - Protocol
    - Threshold
    - Timeout
    type: object
  spider.HealthInfo:
    description: Health Information for a Network Load Balancer (NLB)
    properties:
      AllVMs:
        items:
          $ref: '#/definitions/spider.IID'
        type: array
      HealthyVMs:
        items:
          $ref: '#/definitions/spider.IID'
        type: array
      UnHealthyVMs:
        items:
          $ref: '#/definitions/spider.IID'
        type: array
    required:
    - AllVMs
    - HealthyVMs
    - UnHealthyVMs
    type: object
  spider.IID:
    properties:
      NameId:
        example: user-defined-name
        type: string
      SystemId:
        example: csp-defined-id
        type: string
    required:
    - NameId
    - SystemId
    type: object
  spider.ImageInfo:
    properties:
      IId:
        allOf:
        - $ref: '#/definitions/spider.IID'
        description: '{NameId, SystemId}, {ami-00aa5a103ddf4509f, ami-00aa5a103ddf4509f}'
      ImageStatus:
        allOf:
        - $ref: '#/definitions/spider.ImageStatus'
        description: Available, Unavailable
        example: Available
      KeyValueList:
        items:
          $ref: '#/definitions/spider.KeyValue'
        type: array
      Name:
        description: ami-00aa5a103ddf4509f
        example: ami-00aa5a103ddf4509f
        type: string
      OSArchitecture:
        allOf:
        - $ref: '#/definitions/spider.OSArchitecture'
        description: arm64, x86_64 etc.
        example: x86_64
      OSDiskSizeGB:
        description: 10, 50, 100 etc.
        example: "50"
        type: string
      OSDiskType:
        description: ebs, HDD, etc.
        example: HDD
        type: string
      OSDistribution:
        description: Ubuntu 22.04~, CentOS 8 etc.
        example: Ubuntu 22.04~
        type: string
      OSPlatform:
        allOf:
        - $ref: '#/definitions/spider.OSPlatform'
        description: Linux/UNIX, Windows, NA
        example: Linux/UNIX
    required:
    - IId
    - ImageStatus
    - Name
    - OSArchitecture
    - OSDiskSizeGB
    - OSDiskType
    - OSDistribution
    - OSPlatform
    type: object
  spider.ImageStatus:
    enum:
    - Available
    - Unavailable
    - NA
    type: string
    x-enum-varnames:
    - ImageAvailable
    - ImageUnavailable
    - ImageNA
  spider.ImageType:
    enum:
    - PublicImage
    - MyImage
    type: string
    x-enum-varnames:
    - PublicImage
    - MyImage
  spider.KeyPairInfo:
    properties:
      Fingerprint:
        description: Unique identifier for the public key
        example: 3b:16:bf:1b:13:4b:b3:58:97:dc:72:19:45:bb:2c:8f
        type: string
      IId:
        allOf:
        - $ref: '#/definitions/spider.IID'
        description: '{NameId, SystemId}'
      KeyValueList:
        description: Additional metadata as key-value pairs
        items:
          $ref: '#/definitions/spider.KeyValue'
        type: array
      PrivateKey:
        description: Private part of the KeyPair
        example: '-----BEGIN PRIVATE KEY-----...'
        type: string
      PublicKey:
        description: Public part of the KeyPair
        example: ssh-rsa AAAAB3...
        type: string
      TagList:
        description: List of tags associated with this KeyPair
        items:
          $ref: '#/definitions/spider.KeyValue'
        type: array
      VMUserID:
        description: cb-user or Administrator
        example: cb-user
        type: string
    required:
    - IId
    type: object
  spider.KeyValue:
    properties:
      Key:
        example: key1
        type: string
      Value:
        example: value1
        type: string
    required:
    - Key
    type: object
  spider.ListenerInfo:
    description: Listener Information for a Network Load Balancer (NLB)
    properties:
      CspID:
        type: string
      DNSName:
        example: nlb.example.com
        type: string
      IP:
        example: 192.168.0.1
        type: string
      KeyValueList:
        items:
          $ref: '#/definitions/spider.KeyValue'
        type: array
      Port:
        description: 1-65535
        example: "80"
        type: string
      Protocol:
        description: TCP|UDP
        example: TCP
        type: string
    required:
    - Port
    - Protocol
    type: object
  spider.Meta:
    properties:
      description:
        description: Description of the pricing data
        example: Cloud price data
        type: string
      version:
        description: Version of the pricing data
        example: "1.0"
        type: string
    required:
    - version
    type: object
  spider.MyImageInfo:
    properties:
      CreatedTime:
        type: string
      IId:
        allOf:
        - $ref: '#/definitions/spider.IID'
        description: '{NameId, SystemId}'
      KeyValueList:
        items:
          $ref: '#/definitions/spider.KeyValue'
        type: array
      SourceVM:
        $ref: '#/definitions/spider.IID'
      Status:
        allOf:
        - $ref: '#/definitions/spider.MyImageStatus'
        description: Available | Unavailable
        example: Available
      TagList:
        items:
          $ref: '#/definitions/spider.KeyValue'
        type: array
    required:
    - CreatedTime
    - IId
    - Status
    type: object
  spider.MyImageStatus:
    enum:
    - Available
    - Unavailable
    type: string
    x-enum-varnames:
    - MyImageAvailable
    - MyImageUnavailable
  spider.NLBInfo:
    description: Network Load Balancer (NLB) Information
    properties:
      CreatedTime:
        example: "2024-08-27T10:00:00Z"
        type: string
      HealthChecker:
        $ref: '#/definitions/spider.HealthCheckerInfo'
      IId:
        $ref: '#/definitions/spider.IID'
      KeyValueList:
        items:
          $ref: '#/definitions/spider.KeyValue'
        type: array
      Listener:
        allOf:
        - $ref: '#/definitions/spider.ListenerInfo'
        description: '------ Frontend'
      Scope:
        description: REGION(V) | GLOBAL
        example: REGION
        type: string
      TagList:
        items:
          $ref: '#/definitions/spider.KeyValue'
        type: array
      Type:
        description: PUBLIC(V) | INTERNAL
        example: PUBLIC
        type: string
      VMGroup:
        allOf:
        - $ref: '#/definitions/spider.VMGroupInfo'
        description: '------ Backend'
      VpcIID:
        allOf:
        - $ref: '#/definitions/spider.IID'
        description: Owner VPC IID
    required:
    - CreatedTime
    - HealthChecker
    - IId
    - Listener
    - Scope
    - Type
    - VMGroup
    - VpcIID
    type: object
  spider.NetworkInfo:
    description: Network Information for a Kubernetes Cluster
    properties:
      KeyValueList:
        description: '---'
        items:
          $ref: '#/definitions/spider.KeyValue'
        type: array
      SecurityGroupIIDs:
        items:
          $ref: '#/definitions/spider.IID'
        type: array
      SubnetIIDs:
        items:
          $ref: '#/definitions/spider.IID'
        type: array
      VpcIID:
        $ref: '#/definitions/spider.IID'
    required:
    - SecurityGroupIIDs
    - SubnetIIDs
    - VpcIID
    type: object
  spider.NodeGroupInfo:
    description: Node Group Information for a Kubernetes Cluster
    properties:
      DesiredNodeSize:
        example: 2
        type: integer
      IId:
        $ref: '#/definitions/spider.IID'
      ImageIID:
        allOf:
        - $ref: '#/definitions/spider.IID'
        description: VM config.
      KeyPairIID:
        $ref: '#/definitions/spider.IID'
      KeyValueList:
        items:
          $ref: '#/definitions/spider.KeyValue'
        type: array
      MaxNodeSize:
        example: 3
        type: integer
      MinNodeSize:
        example: 1
        type: integer
      Nodes:
        items:
          $ref: '#/definitions/spider.IID'
        type: array
      OnAutoScaling:
        description: Scaling config.
        example: true
        type: boolean
      RootDiskSize:
        description: in GB
        example: "50"
        type: string
      RootDiskType:
        type: string
      Status:
        allOf:
        - $ref: '#/definitions/spider.NodeGroupStatus'
        description: '---'
        example: Active
      VMSpecName:
        example: t3.medium
        type: string
    required:
    - DesiredNodeSize
    - IId
    - ImageIID
    - KeyPairIID
    - MaxNodeSize
    - MinNodeSize
    - OnAutoScaling
    - Status
    - VMSpecName
    type: object
  spider.NodeGroupStatus:
    enum:
    - Creating
    - Active
    - Inactive
    - Updating
    - Deleting
    type: string
    x-enum-varnames:
    - NodeGroupCreating
    - NodeGroupActive
    - NodeGroupInactive
    - NodeGroupUpdating
    - NodeGroupDeleting
  spider.OSArchitecture:
    enum:
    - arm32
    - arm64
    - arm64_mac
    - x86_32
    - x86_64
    - x86_32_mac
    - x86_64_mac
    - NA
    type: string
    x-enum-varnames:
    - ARM32
    - ARM64
    - ARM64_MAC
    - X86_32
    - X86_64
    - X86_32_MAC
    - X86_64_MAC
    - ArchitectureNA
  spider.OSPlatform:
    enum:
    - Linux/UNIX
    - Windows
    - NA
    type: string
    x-enum-varnames:
    - Linux_UNIX
    - Windows
    - PlatformNA
  spider.Platform:
    enum:
    - LINUX/UNIX
    - WINDOWS
    type: string
    x-enum-varnames:
    - LINUX_UNIX
    - WINDOWS
  spider.Price:
    properties:
      priceInfo:
        allOf:
        - $ref: '#/definitions/spider.PriceInfo'
        description: Pricing details of the product
      productInfo:
        allOf:
        - $ref: '#/definitions/spider.ProductInfo'
        description: Information about the product
    required:
    - priceInfo
    - productInfo
    type: object
  spider.PriceInfo:
    properties:
      cspPriceInfo:
        description: Additional price information specific to CSP
      pricingPolicies:
        description: List of pricing policies
        items:
          $ref: '#/definitions/spider.PricingPolicies'
        type: array
    required:
    - cspPriceInfo
    - pricingPolicies
    type: object
  spider.PricingPolicies:
    properties:
      currency:
        description: Currency of the pricing
        example: USD
        type: string
      description:
        description: Description of the pricing policy
        example: Pricing for t2.micro
        type: string
      price:
        description: Price in the specified currency per unit
        example: "0.02"
        type: string
      pricingId:
        description: ID of the pricing policy
        example: price-123
        type: string
      pricingPolicy:
        description: Name of the pricing policy
        example: On-Demand
        type: string
      pricingPolicyInfo:
        allOf:
        - $ref: '#/definitions/spider.PricingPolicyInfo'
        description: Detail information about the pricing policy
      unit:
        description: Unit of the pricing (e.g., per hour)
        example: hour
        type: string
    required:
    - currency
    - price
    - pricingId
    - pricingPolicy
    - unit
    type: object
  spider.PricingPolicyInfo:
    properties:
      LeaseContractLength:
        description: Length of the lease contract
        example: 1 year
        type: string
      OfferingClass:
        description: Offering class (e.g., standard, convertible)
        example: standard
        type: string
      PurchaseOption:
        description: Purchase option (e.g., no upfront, partial upfront)
        example: No Upfront
        type: string
    type: object
  spider.ProductInfo:
    properties:
      cspProductInfo:
        description: Additional product information specific to CSP
      description:
        description: Description of the product
        example: General purpose instance
        type: string
      gpu:
        description: Number of GPUs
        example: "1"
        type: string
      gpuMemory:
        description: GPU memory size in MB
        example: "8192"
        type: string
      instanceType:
        description: '--------- Compute Instance Info'
        example: t2.micro
        type: string
      maxIopsvolume:
        description: Maximum IOPS for the volume
        example: "3000"
        type: string
      maxThroughputvolume:
        description: Maximum throughput for the volume in MB/s
        example: "250"
        type: string
      maxVolumeSize:
        description: Maximum volume size in GB
        example: "16384"
        type: string
      memory:
        description: Amount of memory in MB
        example: "4096"
        type: string
      operatingSystem:
        description: Operating system type
        example: Linux
        type: string
      preInstalledSw:
        description: Pre-installed software
        example: None
        type: string
      productId:
        description: ID of the product
        example: prod-123
        type: string
      regionName:
        description: Name of the region
        example: us-east-1
        type: string
      storage:
        description: Root-disk storage size in GB
        example: "100"
        type: string
      storageMedia:
        description: Storage media type
        example: SSD
        type: string
      vcpu:
        description: Number of vCPUs
        example: "2"
        type: string
      volumeType:
        description: '--------- Storage Info  // Data-Disk(AWS:EBS)'
        example: gp2
        type: string
      zoneName:
        description: Name of the zone
        example: us-east-1a
        type: string
    required:
    - cspProductInfo
    - productId
    - regionName
    type: object
  spider.RSType:
    enum:
    - all
    - image
    - vpc
    - subnet
    - sg
    - keypair
    - vm
    - nlb
    - disk
    - myimage
    - cluster
    - nodegroup
    type: string
    x-enum-varnames:
    - ALL
    - IMAGE
    - VPC
    - SUBNET
    - SG
    - KEY
    - VM
    - NLB
    - DISK
    - MYIMAGE
    - CLUSTER
    - NODEGROUP
  spider.RegionInfo:
    properties:
      Region:
        example: us-east-1
        type: string
      Zone:
        example: us-east-1a
        type: string
    required:
    - Region
    type: object
  spider.RegionZoneInfo:
    properties:
      CSPDisplayName:
        example: US East (N. Virginia)
        type: string
      DisplayName:
        example: United States, Ohio
        type: string
      KeyValueList:
        items:
          $ref: '#/definitions/spider.KeyValue'
        type: array
      Name:
        example: us-east
        type: string
      ZoneList:
        items:
          $ref: '#/definitions/spider.ZoneInfo'
        type: array
    required:
    - CSPDisplayName
    - DisplayName
    - Name
    type: object
  spider.SecurityInfo:
    properties:
      IId:
        allOf:
        - $ref: '#/definitions/spider.IID'
        description: '{NameId, SystemId}'
      KeyValueList:
        items:
          $ref: '#/definitions/spider.KeyValue'
        type: array
      SecurityRules:
        items:
          $ref: '#/definitions/spider.SecurityRuleInfo'
        type: array
      TagList:
        items:
          $ref: '#/definitions/spider.KeyValue'
        type: array
      VpcIID:
        allOf:
        - $ref: '#/definitions/spider.IID'
        description: '{NameId, SystemId}'
    required:
    - IId
    - SecurityRules
    - VpcIID
    type: object
  spider.SecurityRuleInfo:
    properties:
      CIDR:
        description: if not specified, defaults to 0.0.0.0/0
        example: 0.0.0.0/0
        type: string
      Direction:
        description: inbound or outbound
        example: inbound
        type: string
      FromPort:
        description: 'TCP, UDP: 1~65535, ICMP, ALL: -1'
        example: "22"
        type: string
      IPProtocol:
        description: TCP, UDP, ICMP, ALL
        example: TCP
        type: string
      ToPort:
        description: 'TCP, UDP: 1~65535, ICMP, ALL: -1'
        example: "22"
        type: string
    required:
    - Direction
    - FromPort
    - IPProtocol
    - ToPort
    type: object
  spider.SubnetInfo:
    properties:
      IId:
        allOf:
        - $ref: '#/definitions/spider.IID'
        description: '{NameId, SystemId}'
      IPv4_CIDR:
        example: 10.0.8.0/22
        type: string
      KeyValueList:
        items:
          $ref: '#/definitions/spider.KeyValue'
        type: array
      TagList:
        items:
          $ref: '#/definitions/spider.KeyValue'
        type: array
      Zone:
        example: us-east-1a
        type: string
    required:
    - IId
    - IPv4_CIDR
    - Zone
    type: object
  spider.VCpuInfo:
    properties:
      ClockGHz:
        description: Clock speed in GHz, "-1" when not applicable
        example: "2.5"
        type: string
      Count:
        description: Number of VCpu, "-1" when not applicable
        example: "2"
        type: string
    required:
    - Count
    type: object
  spider.VMGroupInfo:
    description: VM Group Information for a Network Load Balancer (NLB)
    properties:
      CspID:
        type: string
      KeyValueList:
        items:
          $ref: '#/definitions/spider.KeyValue'
        type: array
      Port:
        description: 1-65535
        example: "8080"
        type: string
      Protocol:
        description: TCP|UDP
        example: TCP
        type: string
      VMs:
        items:
          $ref: '#/definitions/spider.IID'
        type: array
    required:
    - Port
    - Protocol
    - VMs
    type: object
  spider.VMInfo:
    properties:
      AccessPoint:
        description: 10.2.3.2:22, 123.456.789.123:432
        example: 1.2.3.4:22
        type: string
      DataDiskIIDs:
        description: 'example:"[{NameId: ''datadisk-01'', SystemId: ''datadisk-12345678''}]"'
        items:
          $ref: '#/definitions/spider.IID'
        type: array
      IId:
        allOf:
        - $ref: '#/definitions/spider.IID'
        description: 'example:"{NameId: ''vm-01'', SystemId: ''i-12345678''}"'
      ImageIId:
        allOf:
        - $ref: '#/definitions/spider.IID'
        description: 'example:"{NameId: ''ami-12345678'', SystemId: ''ami-12345678''}"'
      ImageType:
        allOf:
        - $ref: '#/definitions/spider.ImageType'
        description: PublicImage | MyImage
        example: PublicImage
      KeyPairIId:
        allOf:
        - $ref: '#/definitions/spider.IID'
        description: 'example:"{NameId: ''keypair-01'', SystemId: ''keypair-12345678''}"'
      KeyValueList:
        description: 'example:"[{Key: ''Architecture'', Value: ''x86_64''}]"'
        items:
          $ref: '#/definitions/spider.KeyValue'
        type: array
      NetworkInterface:
        example: eni-12345678
        type: string
      Platform:
        allOf:
        - $ref: '#/definitions/spider.Platform'
        description: LINUX | WINDOWS
        example: LINUX
      PrivateDNS:
        example: ip-192-168-1-1.ec2.internal
        type: string
      PrivateIP:
        example: 192.168.1.1
        type: string
      PublicDNS:
        example: ec2-1-2-3-4.compute-1.amazonaws.com
        type: string
      PublicIP:
        example: 1.2.3.4
        type: string
      Region:
        allOf:
        - $ref: '#/definitions/spider.RegionInfo'
        description: 'example:"{Region: ''us-east-1'', Zone: ''us-east-1a''}"'
      RootDeviceName:
        description: '"/dev/sda1", ...'
        example: /dev/sda1
        type: string
      RootDiskSize:
        description: '"default", "50", "1000" (unit is GB)'
        example: "50"
        type: string
      RootDiskType:
        description: '"gp2", "Premium SSD", ...'
        example: gp2
        type: string
      SSHAccessPoint:
        description: Deprecated
        example: 10.2.3.2:22
        type: string
      SecurityGroupIIds:
        description: 'example:"[{NameId: ''sg-01'', SystemId: ''sg-12345678''}]"'
        items:
          $ref: '#/definitions/spider.IID'
        type: array
      StartTime:
        description: 'Timezone: based on cloud-barista server location.'
        example: "2024-08-27T10:00:00Z"
        type: string
      SubnetIID:
        allOf:
        - $ref: '#/definitions/spider.IID'
        description: 'example:"{NameId: ''subnet-01'', SystemId: ''subnet-12345678''}"'
      TagList:
        description: 'example:"[{Key: ''Name'', Value: ''MyVM''}]"'
        items:
          $ref: '#/definitions/spider.KeyValue'
        type: array
      VMBlockDisk:
        description: Deprecated soon
        example: /dev/sda2
        type: string
      VMBootDisk:
        description: Deprecated soon
        example: /dev/sda1
        type: string
      VMSpecName:
        description: instance type or flavour, etc... ex) t2.micro or f1.micro
        example: t2.micro
        type: string
      VMUserId:
        description: cb-user or Administrator
        example: cb-user
        type: string
      VMUserPasswd:
        description: Only for Windows
        example: password1234
        type: string
      VpcIID:
        allOf:
        - $ref: '#/definitions/spider.IID'
        description: 'example:"{NameId: ''vpc-01'', SystemId: ''vpc-12345678''}"'
    required:
    - AccessPoint
    - IId
    - ImageIId
    - ImageType
    - KeyPairIId
    - NetworkInterface
    - Platform
    - PrivateIP
    - PublicIP
    - Region
    - RootDeviceName
    - RootDiskSize
    - RootDiskType
    - SecurityGroupIIds
    - StartTime
    - SubnetIID
    - VMSpecName
    - VMUserId
    - VpcIID
    type: object
  spider.VMSpecInfo:
    properties:
      DiskSizeGB:
        description: Disk size in GB, "-1" when not applicable
        example: "8"
        type: string
      Gpu:
        description: GPU details if available
        items:
          $ref: '#/definitions/spider.GpuInfo'
        type: array
      KeyValueList:
        description: Additional key-value pairs for the VM spec
        items:
          $ref: '#/definitions/spider.KeyValue'
        type: array
      MemSizeMib:
        description: Memory size in MiB
        example: "1024"
        type: string
      Name:
        description: Name of the VM spec
        example: t2.micro
        type: string
      Region:
        description: Region where the VM spec is available
        example: us-east-1
        type: string
      VCpu:
        allOf:
        - $ref: '#/definitions/spider.VCpuInfo'
        description: CPU details of the VM spec
    required:
    - DiskSizeGB
    - MemSizeMib
    - Name
    - Region
    - VCpu
    type: object
  spider.VMStatus:
    description: The status of a Virtual Machine (VM).
    enum:
    - Creating
    - Running
    - Suspending
    - Suspended
    - Resuming
    - Rebooting
    - Terminating
    - Terminated
    - NotExist
    - Failed
    type: string
    x-enum-comments:
      Creating: from launch to running
      NotExist: VM does not exist
      Rebooting: from running to running
      Resuming: from suspended to running
      Suspending: from running to suspended
      Terminating: from running, suspended to terminated
    x-enum-varnames:
    - Creating
    - Running
    - Suspending
    - Suspended
    - Resuming
    - Rebooting
    - Terminating
    - Terminated
    - NotExist
    - Failed
  spider.VMStatusInfo:
    properties:
      IId:
        allOf:
        - $ref: '#/definitions/spider.IID'
        description: '{NameId: ''vm-01'', SystemId: ''i-12345678''}"'
      VmStatus:
        allOf:
        - $ref: '#/definitions/spider.VMStatus'
        example: Running
    required:
    - IId
    - VmStatus
    type: object
  spider.VPCInfo:
    properties:
      IId:
        allOf:
        - $ref: '#/definitions/spider.IID'
        description: '{NameId, SystemId}'
      IPv4_CIDR:
        example: 10.0.0.0/16
        type: string
      KeyValueList:
        items:
          $ref: '#/definitions/spider.KeyValue'
        type: array
      SubnetInfoList:
        items:
          $ref: '#/definitions/spider.SubnetInfo'
        type: array
      TagList:
        items:
          $ref: '#/definitions/spider.KeyValue'
        type: array
    required:
    - IId
    - IPv4_CIDR
    - SubnetInfoList
    type: object
  spider.ZoneInfo:
    properties:
      CSPDisplayName:
        example: US East (N. Virginia)
        type: string
      DisplayName:
        example: United States, Ohio
        type: string
      KeyValueList:
        items:
          $ref: '#/definitions/spider.KeyValue'
        type: array
      Name:
        example: us-east-1a
        type: string
      Status:
        allOf:
        - $ref: '#/definitions/spider.ZoneStatus'
        example: Available
    required:
    - CSPDisplayName
    - DisplayName
    - Name
    - Status
    type: object
  spider.ZoneStatus:
    enum:
    - Available
    - Unavailable
    - StatusNotSupported
    type: string
    x-enum-varnames:
    - ZoneAvailable
    - ZoneUnavailable
    - NotSupported
  spider.cim.CloudOSMetaInfo:
    description: Metadata information related to a Cloud OS, including supported regions,
      credentials, and disk configurations.
    properties:
      Credential:
        description: A list of required credential keys.
        items:
          type: string
        type: array
      CredentialCSP:
        description: A list of credentials required by the cloud service provider
          (CSP).
        items:
          type: string
        type: array
      DefaultRegionToQuery:
        description: Default region to use if none is specified for a query.
        items:
          type: string
        type: array
      DiskSize:
        description: Supported additional disk sizes (in GB).
        items:
          type: string
        type: array
      DiskType:
        description: Supported additional disk types.
        items:
          type: string
        type: array
      IdMaxLength:
        description: Maximum allowed length for IDs in the cloud provider.
        items:
          type: string
        type: array
      Region:
        description: A list of supported regions by the Cloud OS.
        items:
          type: string
        type: array
      RootDiskSize:
        description: Supported root disk sizes (in GB).
        items:
          type: string
        type: array
      RootDiskType:
        description: Supported root disk types (e.g., gp2, standard).
        items:
          type: string
        type: array
    required:
    - Credential
    - CredentialCSP
    - DefaultRegionToQuery
    - DiskSize
    - DiskType
    - IdMaxLength
    - Region
    - RootDiskSize
    - RootDiskType
    type: object
  spider.cim.ConnectionConfigInfo:
    description: Information about the connection configuration used to connect to
      a specific cloud provider.
    properties:
      ConfigName:
        description: The name of the connection configuration, used as a unique identifier.
        example: config01
        type: string
      CredentialName:
        description: The name of the credential used for cloud authentication.
        example: credential01
        type: string
      DriverName:
        description: The name of the cloud driver associated with this configuration.
        example: AWS-Test-Driver-V0.5
        type: string
      ProviderName:
        description: The name of the cloud provider (e.g., AWS, Azure, GCP).
        example: AWS
        type: string
      RegionName:
        description: The name of the region for the cloud connection.
        example: region01
        type: string
    required:
    - ConfigName
    - CredentialName
    - DriverName
    - ProviderName
    - RegionName
    type: object
  spider.cim.CredentialInfo:
    description: Information about a specific cloud credential used for authentication.
    properties:
      CredentialName:
        description: The name of the credential, used as a unique identifier.
        example: credential01
        type: string
      KeyValueInfoList:
        description: A list of key-value pairs, where each entry is a key and its
          associated value.
        items:
          $ref: '#/definitions/spider.KeyValue'
        type: array
      ProviderName:
        description: The name of the cloud provider (e.g., AWS, Azure, GCP).
        example: AWS
        type: string
    required:
    - CredentialName
    - KeyValueInfoList
    - ProviderName
    type: object
  spider.cim.CloudDriverInfo:
    description: Information about a specific cloud driver used in the system.
    properties:
      DriverLibFileName:
        description: The filename of the driver library, already present in the cloud-driver/libs
          directory.
        example: aws-test-driver-v0.5.so
        type: string
      DriverName:
        description: The name of the cloud driver, used as a unique identifier.
        example: AWS-Test-Driver-V0.5
        type: string
      ProviderName:
        description: The name of the cloud provider (e.g., AWS, Azure, GCP).
        example: AWS
        type: string
    required:
    - DriverLibFileName
    - DriverName
    - ProviderName
    type: object
  spider.cim.RegionInfo:
    description: Information about a specific cloud region and its associated zones.
    properties:
      AvailableZoneList:
        description: A list of availability zones within a region.
        items:
          type: string
        type: array
      KeyValueInfoList:
        description: A list of key-value pairs, where each entry is a key and its
          associated value.
        items:
          $ref: '#/definitions/spider.KeyValue'
        type: array
      ProviderName:
        description: The name of the cloud provider (e.g., AWS, Azure, GCP).
        example: GCP
        type: string
      RegionName:
        description: The name of the region, used as a unique identifier.
        example: region01
        type: string
    required:
    - AvailableZoneList
    - KeyValueInfoList
    - ProviderName
    - RegionName
    type: object
  spider.AllResourceInfoListResponse:
    properties:
      AllListInfo:
        properties:
          MappedInfoList:
            items: {}
            type: array
          OnlyCSPInfoList:
            items: {}
            type: array
          OnlySpiderList:
            items:
              $ref: '#/definitions/spider.IID'
            type: array
        required:
        - MappedInfoList
        - OnlyCSPInfoList
        - OnlySpiderList
        type: object
      ResourceType:
        allOf:
        - $ref: '#/definitions/spider.RSType'
        example: vpc
    required:
    - AllListInfo
    - ResourceType
    type: object
  spider.AllResourceListResponse:
    properties:
      AllList:
        properties:
          MappedList:
            items:
              $ref: '#/definitions/spider.IID'
            type: array
          OnlyCSPList:
            items:
              $ref: '#/definitions/spider.IID'
            type: array
          OnlySpiderList:
            items:
              $ref: '#/definitions/spider.IID'
            type: array
        required:
        - MappedList
        - OnlyCSPList
        - OnlySpiderList
        type: object
    required:
    - AllList
    type: object
  spider.AnyCallRequest:
    properties:
      ConnectionName:
        example: mock-config01
        type: string
      ReqInfo:
        properties:
          FID:
            description: 'Function ID (FID) to call, ex: countAll'
            example: countAll
            type: string
          IKeyValueList:
            description: 'Input key-value pairs, ex:[{"Key": "rsType", "Value": "vpc"}]'
            items:
              $ref: '#/definitions/spider.KeyValue'
            type: array
        required:
        - FID
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.BooleanInfo:
    properties:
      Result:
        description: true or false
        example: "true"
        type: string
    required:
    - Result
    type: object
  spider.ClusterAddNodeGroupRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      IDTransformMode:
        description: 'ON: transform CSP ID, OFF: no-transform CSP ID'
        example: "ON"
        type: string
      ReqInfo:
        $ref: '#/definitions/spider.ClusterNodeGroupRequest'
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.ClusterChangeNodeGroupScalingRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      ReqInfo:
        properties:
          DesiredNodeSize:
            example: "3"
            type: string
          MaxNodeSize:
            example: "5"
            type: string
          MinNodeSize:
            example: "1"
            type: string
        required:
        - DesiredNodeSize
        - MaxNodeSize
        - MinNodeSize
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.ClusterCreateRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      IDTransformMode:
        description: 'ON: transform CSP ID, OFF: no-transform CSP ID'
        example: "ON"
        type: string
      ReqInfo:
        properties:
          Name:
            example: cluster-01
            type: string
          NodeGroupList:
            items:
              $ref: '#/definitions/spider.ClusterNodeGroupRequest'
            type: array
          SecurityGroupNames:
            example:
            - sg-01
            - sg-02
            items:
              type: string
            type: array
          SubnetNames:
            example:
            - subnet-01
            - subnet-02
            items:
              type: string
            type: array
          TagList:
            items:
              $ref: '#/definitions/spider.KeyValue'
            type: array
          VPCName:
            example: vpc-01
            type: string
          Version:
            description: Some CSPs may not support or limit versions.
            example: "1.30"
            type: string
        required:
        - Name
        - SecurityGroupNames
        - SubnetNames
        - VPCName
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.ClusterGetOwnerVPCRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      ReqInfo:
        properties:
          CSPId:
            example: csp-cluster-1234
            type: string
        required:
        - CSPId
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.ClusterListResponse:
    properties:
      cluster:
        items:
          $ref: '#/definitions/spider.ClusterInfo'
        type: array
    required:
    - cluster
    type: object
  spider.ClusterNodeGroupRequest:
    properties:
      DesiredNodeSize:
        example: "2"
        type: string
      ImageName:
        description: Some CSPs may not support or limit images. [Ref](https://docs.google.com/spreadsheets/d/1mPmfnfmyszYimVzplZMzsqO3WsBmOdes/edit?usp=sharing&ouid=108635813398159139552&rtpof=true&sd=true)
        type: string
      KeyPairName:
        example: keypair-01
        type: string
      MaxNodeSize:
        example: "3"
        type: string
      MinNodeSize:
        example: "1"
        type: string
      Name:
        example: nodegroup-01
        type: string
      OnAutoScaling:
        example: "true"
        type: string
      RootDiskSize:
        description: Some CSPs may not support or limit sizes. [Ref](https://docs.google.com/spreadsheets/d/1mPmfnfmyszYimVzplZMzsqO3WsBmOdes/edit?usp=sharing&ouid=108635813398159139552&rtpof=true&sd=true)
        type: string
      RootDiskType:
        description: Some CSPs may not support or limit types. [Ref](https://docs.google.com/spreadsheets/d/1mPmfnfmyszYimVzplZMzsqO3WsBmOdes/edit?usp=sharing&ouid=108635813398159139552&rtpof=true&sd=true)
        type: string
      VMSpecName:
        description: Some CSPs may not support or limit specs. [Ref](https://docs.google.com/spreadsheets/d/1mPmfnfmyszYimVzplZMzsqO3WsBmOdes/edit?usp=sharing&ouid=108635813398159139552&rtpof=true&sd=true)
        type: string
    required:
    - DesiredNodeSize
    - KeyPairName
    - MaxNodeSize
    - MinNodeSize
    - Name
    - OnAutoScaling
    type: object
  spider.ClusterRegisterRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      ReqInfo:
        properties:
          CSPId:
            example: csp-cluster-1234
            type: string
          Name:
            example: cluster-01
            type: string
          VPCName:
            example: vpc-01
            type: string
        required:
        - CSPId
        - Name
        - VPCName
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.ClusterSetNodeGroupAutoScalingRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      ReqInfo:
        properties:
          OnAutoScaling:
            example: "true"
            type: string
        required:
        - OnAutoScaling
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.ClusterUpgradeRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      ReqInfo:
        properties:
          Version:
            example: "1.30"
            type: string
        required:
        - Version
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.ConnectionRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
    required:
    - ConnectionName
    type: object
  spider.CountResponse:
    properties:
      count:
        example: 5
        type: integer
    required:
    - count
    type: object
  spider.DiskAttachRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      ReqInfo:
        properties:
          VMName:
            example: vm-01
            type: string
        required:
        - VMName
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.DiskCreateRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      IDTransformMode:
        description: 'ON: transform CSP ID, OFF: no-transform CSP ID'
        example: "ON"
        type: string
      ReqInfo:
        properties:
          DiskSize:
            description: 100 or default, if not specified, default is used (unit is
              GB)
            example: "100"
            type: string
          DiskType:
            description: gp2 or default, if not specified, default is used
            example: gp2
            type: string
          Name:
            example: disk-01
            type: string
          TagList:
            items:
              $ref: '#/definitions/spider.KeyValue'
            type: array
          Zone:
            description: target zone for the disk, if not specified, it will be created
              in the same zone as the Connection.
            example: us-east-1b
            type: string
        required:
        - DiskSize
        - DiskType
        - Name
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.DiskDetachRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      ReqInfo:
        properties:
          VMName:
            example: vm-01
            type: string
        required:
        - VMName
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.DiskListResponse:
    properties:
      disk:
        items:
          $ref: '#/definitions/spider.DiskInfo'
        type: array
    required:
    - disk
    type: object
  spider.DiskRegisterRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      ReqInfo:
        properties:
          CSPId:
            example: csp-disk-1234
            type: string
          Name:
            example: disk-01
            type: string
          Zone:
            description: '(default: defaultZone)'
            example: us-east-1b
            type: string
        required:
        - CSPId
        - Name
        - Zone
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.DiskSizeIncreaseRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      ReqInfo:
        properties:
          Size:
            example: "150"
            type: string
        required:
        - Size
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.DriverCapabilityResponse:
    properties:
      clusterHandler:
        description: 'support: true, do not support: false'
        type: boolean
      diskHandler:
        description: 'support: true, do not support: false'
        type: boolean
      emulated_VPC:
        description: 'support: true, do not support: false'
        type: boolean
      imageHandler:
        description: 'support: true, do not support: false'
        type: boolean
      keyPairHandler:
        description: 'support: true, do not support: false'
        type: boolean
      myImageHandler:
        description: 'support: true, do not support: false'
        type: boolean
      nlbhandler:
        description: 'support: true, do not support: false'
        type: boolean
      priceInfoHandler:
        description: 'support: true, do not support: false'
        type: boolean
      regionZoneHandler:
        description: Metadata Handler
        type: boolean
      securityHandler:
        description: 'support: true, do not support: false'
        type: boolean
      single_VPC:
        description: 'support: true, do not support: false'
        type: boolean
      tagHandler:
        description: 'support: true, do not support: false'
        type: boolean
      tagSupportResourceType:
        description: ex) {ires.VPC, ires.SUBNET, ires.SG, ires.KEY, ires.VM, ires.NLB,
          ires.DISK, ires.MYIMAGE, ires.CLUSTER}
        items:
          $ref: '#/definitions/spider.RSType'
        type: array
      vmhandler:
        description: 'support: true, do not support: false'
        type: boolean
      vmspecHandler:
        description: 'support: true, do not support: false'
        type: boolean
      vpc_CIDR:
        description: etc.
        type: boolean
      vpchandler:
        description: Resource Handler
        type: boolean
      zoneBasedControl:
        description: Resource Control Scope
        type: boolean
    type: object
  spider.HealthCheckResponse:
    properties:
      message:
        example: CB-Spider is ready
        type: string
    required:
    - message
    type: object
  spider.ImageListResponse:
    properties:
      image:
        items:
          $ref: '#/definitions/spider.ImageInfo'
        type: array
    required:
    - image
    type: object
  spider.KeyPairCreateRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      IDTransformMode:
        description: 'ON: transform CSP ID, OFF: no-transform CSP ID'
        example: "ON"
        type: string
      ReqInfo:
        properties:
          Name:
            example: keypair-01
            type: string
          TagList:
            items:
              $ref: '#/definitions/spider.KeyValue'
            type: array
        required:
        - Name
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.KeyPairListResponse:
    properties:
      keypair:
        items:
          $ref: '#/definitions/spider.KeyPairInfo'
        type: array
    type: object
  spider.KeyPairRegisterRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      ReqInfo:
        properties:
          CSPId:
            example: csp-key-1234
            type: string
          Name:
            example: keypair-01
            type: string
        required:
        - CSPId
        - Name
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.ListCloudDriverResponse:
    properties:
      driver:
        items:
          $ref: '#/definitions/spider.cim.CloudDriverInfo'
        type: array
    required:
    - driver
    type: object
  spider.ListCloudOSResponse:
    properties:
      cloudos:
        example:
        - '["AWS"'
        - ' "GCP"]'
        items:
          type: string
        type: array
    required:
    - cloudos
    type: object
  spider.ListConnectionConfigResponse:
    properties:
      connectionconfig:
        items:
          $ref: '#/definitions/spider.cim.ConnectionConfigInfo'
        type: array
    required:
    - connectionconfig
    type: object
  spider.ListCredentialResponse:
    properties:
      credential:
        items:
          $ref: '#/definitions/spider.cim.CredentialInfo'
        type: array
    required:
    - credential
    type: object
  spider.ListRegionResponse:
    properties:
      region:
        items:
          $ref: '#/definitions/spider.cim.RegionInfo'
        type: array
    required:
    - region
    type: object
  spider.MyImageListResponse:
    properties:
      myImage:
        items:
          $ref: '#/definitions/spider.MyImageInfo'
        type: array
    required:
    - myImage
    type: object
  spider.MyImageRegisterRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      ReqInfo:
        properties:
          CSPId:
            example: csp-myimage-1234
            type: string
          Name:
            example: myimage-01
            type: string
        required:
        - CSPId
        - Name
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.MyImageSnapshotRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      IDTransformMode:
        description: 'ON: transform CSP ID, OFF: no-transform CSP ID'
        example: "ON"
        type: string
      ReqInfo:
        properties:
          Name:
            example: myimage-01
            type: string
          SourceVM:
            example: vm-01
            type: string
          TagList:
            items:
              $ref: '#/definitions/spider.KeyValue'
            type: array
        required:
        - Name
        - SourceVM
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.NLBAddVMsRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      ReqInfo:
        properties:
          VMs:
            example:
            - vm-01
            items:
              type: string
            type: array
        required:
        - VMs
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.NLBCreateRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      IDTransformMode:
        description: 'ON: transform CSP ID, OFF: no-transform CSP ID'
        example: "ON"
        type: string
      ReqInfo:
        properties:
          HealthChecker:
            $ref: '#/definitions/spider.NLBHealthCheckerRequest'
          Listener:
            $ref: '#/definitions/spider.NLBListenerCreateRequest'
          Name:
            example: nlb-01
            type: string
          Scope:
            description: REGION(V) | GLOBAL
            example: REGION
            type: string
          TagList:
            items:
              $ref: '#/definitions/spider.KeyValue'
            type: array
          Type:
            description: PUBLIC(V) | INTERNAL
            example: PUBLIC
            type: string
          VMGroup:
            $ref: '#/definitions/spider.NLBVMGroupRequest'
          VPCName:
            example: vpc-01
            type: string
        required:
        - HealthChecker
        - Listener
        - Name
        - Scope
        - Type
        - VMGroup
        - VPCName
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.NLBGetOwnerVPCRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      ReqInfo:
        properties:
          CSPId:
            example: csp-nlb-1234
            type: string
        required:
        - CSPId
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.NLBGetVMGroupHealthInfoResponse:
    properties:
      healthinfo:
        $ref: '#/definitions/spider.HealthInfo'
    required:
    - healthinfo
    type: object
  spider.NLBHealthCheckerRequest:
    properties:
      Interval:
        description: secs, if not specified, treated as "default", determined by CSP
        example: default
        type: string
      Port:
        description: Listener Port or 1-65535
        example: "22"
        type: string
      Protocol:
        description: TCP|HTTP
        example: TCP
        type: string
      Threshold:
        description: num, if not specified, treated as "default", determined by CSP
        example: default
        type: string
      Timeout:
        description: secs, if not specified, treated as "default", determined by CSP
        example: default
        type: string
    required:
    - Port
    - Protocol
    type: object
  spider.NLBListResponse:
    properties:
      nlb:
        items:
          $ref: '#/definitions/spider.NLBInfo'
        type: array
    required:
    - nlb
    type: object
  spider.NLBListenerCreateRequest:
    properties:
      Port:
        description: 1-65535
        example: "22"
        type: string
      Protocol:
        description: TCP|UDP
        example: TCP
        type: string
    required:
    - Port
    - Protocol
    type: object
  spider.NLBRegisterRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      ReqInfo:
        properties:
          CSPId:
            example: csp-nlb-1234
            type: string
          Name:
            example: nlb-01
            type: string
          VPCName:
            example: vpc-01
            type: string
        required:
        - CSPId
        - Name
        - VPCName
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.NLBRemoveVMsRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      ReqInfo:
        properties:
          VMs:
            example:
            - vm-01
            items:
              type: string
            type: array
        required:
        - VMs
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.NLBVMGroupRequest:
    properties:
      Port:
        description: Listener Port or 1-65535
        example: "22"
        type: string
      Protocol:
        description: TCP|UDP
        example: TCP
        type: string
      VMs:
        example:
        - vm-01
        items:
          type: string
        type: array
    required:
    - Port
    - Protocol
    - VMs
    type: object
  spider.OriginalRegionListResponse:
    properties:
      RegionInfo:
        additionalProperties: true
        description: CSP-specific JSON format
        type: object
    required:
    - RegionInfo
    type: object
  spider.OriginalVMSpecListResponse:
    properties:
      VMSpecInfo:
        additionalProperties: true
        description: CSP-specific JSON format
        type: object
    required:
    - VMSpecInfo
    type: object
  spider.OriginalZoneListResponse:
    properties:
      ZoneInfo:
        additionalProperties: true
        description: CSP-specific JSON format
        type: object
    required:
    - ZoneInfo
    type: object
  spider.PriceInfoRequest:
    properties:
      connectionName:
        type: string
      filterList:
        items:
          $ref: '#/definitions/spider.KeyValue'
        type: array
    required:
    - connectionName
    type: object
  spider.PriceInfoResponse:
    properties:
      cloudPriceList:
        items:
          $ref: '#/definitions/spider.CloudPrice'
        type: array
      meta:
        $ref: '#/definitions/spider.Meta'
    required:
    - cloudPriceList
    - meta
    type: object
  spider.ProductFamilyListResponse:
    properties:
      productfamily:
        items:
          type: string
        type: array
    required:
    - productfamily
    type: object
  spider.RegionZoneListResponse:
    properties:
      regionzone:
        items:
          $ref: '#/definitions/spider.RegionZoneInfo'
        type: array
    required:
    - regionzone
    type: object
  spider.RuleControlRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      ReqInfo:
        properties:
          RuleInfoList:
            items:
              properties:
                CIDR:
                  example: 0.0.0.0/0(default)
                  type: string
                Direction:
                  example: inbound
                  type: string
                FromPort:
                  example: "22"
                  type: string
                IPProtocol:
                  example: TCP
                  type: string
                ToPort:
                  example: "22"
                  type: string
              required:
              - Direction
              - FromPort
              - IPProtocol
              - ToPort
              type: object
            type: array
        required:
        - RuleInfoList
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.SecurityGroupCreateRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      IDTransformMode:
        description: 'ON: transform CSP ID, OFF: no-transform CSP ID'
        example: "ON"
        type: string
      ReqInfo:
        properties:
          Name:
            example: sg-01
            type: string
          SecurityRules:
            items:
              $ref: '#/definitions/spider.SecurityRuleInfo'
            type: array
          TagList:
            items:
              $ref: '#/definitions/spider.KeyValue'
            type: array
          VPCName:
            example: vpc-01
            type: string
        required:
        - Name
        - SecurityRules
        - VPCName
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.SecurityGroupListResponse:
    properties:
      securitygroup:
        items:
          $ref: '#/definitions/spider.SecurityInfo'
        type: array
    required:
    - securitygroup
    type: object
  spider.SecurityGroupRegisterRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      ReqInfo:
        properties:
          CSPId:
            example: csp-sg-1234
            type: string
          Name:
            example: sg-01
            type: string
          VPCName:
            example: vpc-01
            type: string
        required:
        - CSPId
        - Name
        - VPCName
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.SimpleMsg:
    properties:
      message:
        example: Any message
        type: string
    required:
    - message
    type: object
  spider.SubnetAddRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      IDTransformMode:
        description: 'ON: transform CSP ID, OFF: no-transform CSP ID'
        example: "ON"
        type: string
      ReqInfo:
        properties:
          IPv4_CIDR:
            example: 10.0.12.0/22
            type: string
          Name:
            example: subnet-01
            type: string
          TagList:
            items:
              $ref: '#/definitions/spider.KeyValue'
            type: array
          Zone:
            description: target zone for the subnet, if not specified, it will be
              created in the same zone as the Connection.
            example: us-east-1b
            type: string
        required:
        - IPv4_CIDR
        - Name
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.SubnetRegisterRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      ReqInfo:
        properties:
          CSPId:
            example: csp-subnet-1234
            type: string
          Name:
            example: subnet-01
            type: string
          VPCName:
            example: vpc-01
            type: string
          Zone:
            description: '(default: defaultZone)'
            example: us-east-1a
            type: string
        required:
        - CSPId
        - Name
        - VPCName
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.SubnetUnregisterRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      ReqInfo:
        properties:
          VPCName:
            example: vpc-01
            type: string
        required:
        - VPCName
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.TagAddRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      ReqInfo:
        properties:
          ResourceName:
            example: vpc-01
            type: string
          ResourceType:
            allOf:
            - $ref: '#/definitions/spider.RSType'
            example: VPC
          Tag:
            $ref: '#/definitions/spider.KeyValue'
        required:
        - ResourceName
        - ResourceType
        - Tag
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.TagRemoveRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      ReqInfo:
        properties:
          ResourceName:
            example: vpc-01
            type: string
          ResourceType:
            allOf:
            - $ref: '#/definitions/spider.RSType'
            example: VPC
        required:
        - ResourceName
        - ResourceType
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.VMListResponse:
    properties:
      vm:
        items:
          $ref: '#/definitions/spider.VMInfo'
        type: array
    required:
    - vm
    type: object
  spider.VMListStatusResponse:
    properties:
      vmstatus:
        items:
          $ref: '#/definitions/spider.VMStatusInfo'
        type: array
    required:
    - vmstatus
    type: object
  spider.VMRegisterRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      ReqInfo:
        properties:
          CSPId:
            example: csp-vm-1234
            type: string
          Name:
            example: vm-01
            type: string
        required:
        - CSPId
        - Name
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.VMSpecListResponse:
    properties:
      vmspec:
        items:
          $ref: '#/definitions/spider.VMSpecInfo'
        type: array
    required:
    - vmspec
    type: object
  spider.VMStartRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      IDTransformMode:
        description: 'ON: transform CSP ID, OFF: no-transform CSP ID'
        example: "ON"
        type: string
      ReqInfo:
        properties:
          DataDiskNames:
            description: Data disks in the same zone as this VM
            example:
            - data-disk-01
            - ' data-disk-02'
            items:
              type: string
            type: array
          ImageName:
            example: ami-12345678
            type: string
          ImageType:
            description: PublicImage or MyImage
            example: PublicImage
            type: string
          KeyPairName:
            example: keypair-01
            type: string
          Name:
            example: vm-01
            type: string
          RootDiskSize:
            description: 100 or default, if not specified, default is used (unit is
              GB)
            example: "30"
            type: string
          RootDiskType:
            description: gp2 or default, if not specified, default is used
            example: gp2
            type: string
          SecurityGroupNames:
            example:
            - sg-01
            - sg-02
            items:
              type: string
            type: array
          SubnetName:
            example: subnet-01
            type: string
          TagList:
            items:
              $ref: '#/definitions/spider.KeyValue'
            type: array
          VMSpecName:
            example: t2.micro
            type: string
          VMUserId:
            description: Administrator, Windows Only
            example: Administrator
            type: string
          VMUserPasswd:
            description: Windows Only
            example: password1234
            type: string
          VPCName:
            example: vpc-01
            type: string
        required:
        - ImageName
        - ImageType
        - KeyPairName
        - Name
        - SecurityGroupNames
        - SubnetName
        - VMSpecName
        - VPCName
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.VMStatusResponse:
    properties:
      Status:
        allOf:
        - $ref: '#/definitions/spider.VMStatus'
        example: Running
    required:
    - Status
    type: object
  spider.VMUsingResources:
    properties:
      Resources:
        properties:
          SGList:
            description: 'example:"[{NameId: ''sg-01'', SystemId: ''sg-12345678''}]"'
            items:
              $ref: '#/definitions/spider.IID'
            type: array
          VMKey:
            allOf:
            - $ref: '#/definitions/spider.IID'
            description: 'example:"{NameId: ''keypair-01'', SystemId: ''keypair-12345678''}"'
          VPC:
            allOf:
            - $ref: '#/definitions/spider.IID'
            description: 'example:"{NameId: ''vpc-01'', SystemId: ''vpc-12345678''}"'
        required:
        - SGList
        - VPC
        type: object
    required:
    - Resources
    type: object
  spider.VPCCreateRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      IDTransformMode:
        description: 'ON: transform CSP ID, OFF: no-transform CSP ID'
        example: "ON"
        type: string
      ReqInfo:
        properties:
          IPv4_CIDR:
            description: Some CSPs unsupported VPC CIDR
            example: 10.0.0.0/16
            type: string
          Name:
            example: vpc-01
            type: string
          SubnetInfoList:
            items:
              properties:
                IPv4_CIDR:
                  example: 10.0.8.0/22
                  type: string
                Name:
                  example: subnet-01
                  type: string
                TagList:
                  items:
                    $ref: '#/definitions/spider.KeyValue'
                  type: array
                Zone:
                  description: target zone for the subnet, if not specified, it will
                    be created in the same zone as the Connection.
                  example: us-east-1b
                  type: string
              required:
              - IPv4_CIDR
              - Name
              type: object
            type: array
          TagList:
            items:
              $ref: '#/definitions/spider.KeyValue'
            type: array
        required:
        - IPv4_CIDR
        - Name
        - SubnetInfoList
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.VPCGetSecurityGroupOwnerRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      ReqInfo:
        properties:
          CSPId:
            example: csp-sg-1234
            type: string
        required:
        - CSPId
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.VPCListResponse:
    properties:
      vpc:
        items:
          $ref: '#/definitions/spider.VPCInfo'
        type: array
    required:
    - vpc
    type: object
  spider.VPCRegisterRequest:
    properties:
      ConnectionName:
        example: aws-connection
        type: string
      ReqInfo:
        properties:
          CSPId:
            example: csp-vpc-1234
            type: string
          Name:
            example: vpc-01
            type: string
        required:
        - CSPId
        - Name
        type: object
    required:
    - ConnectionName
    - ReqInfo
    type: object
  spider.VersionInfoResponse:
    properties:
      Version:
        example: CB-Spider v0.10.2-22
        type: string
    type: object
host: localhost:1024
info:
  contact:
    email: contact-to-cloud-barista@googlegroups.com
    name: API Support
    url: http://cloud-barista.github.io
  description: "**\U0001F577️ [User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages)**
    \ **\U0001F577️ [API Guide](https://github.com/cloud-barista/cb-spider/wiki/REST-API-Examples)**"
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: CB-Spider REST API
  version: latest
paths:
  /allcluster:
    get:
      consumes:
      - application/json
      description: Retrieve a comprehensive list of all Clusters associated with a
        specific connection, <br> including those mapped between CB-Spider and the
        CSP, <br> only registered in CB-Spider's metadata, <br> and only existing
        in the CSP.
      operationId: list-all-cluster
      parameters:
      - description: The name of the Connection to list Clusters for
        in: query
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of all Clusters within the specified connection, including
            clusters in CB-Spider only, CSP only, and mapped between both.
          schema:
            $ref: '#/definitions/spider.AllResourceListResponse'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List All Clusters in a Connection
      tags:
      - '[Cluster Management]'
  /allclusterinfo:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all Cluster information associated with a specific
        connection.
      operationId: list-all-cluster-info
      parameters:
      - description: The name of the Connection to list Cluster information for
        in: query
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of all Cluster information within the specified connection
          schema:
            $ref: '#/definitions/spider.AllResourceInfoListResponse'
        "400":
          description: Bad Request, possibly due to invalid query parameter
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List All Cluster Info
      tags:
      - '[Cluster Management]'
  /alldisk:
    get:
      consumes:
      - application/json
      description: Retrieve a comprehensive list of all Disks associated with a specific
        connection, <br> including those mapped between CB-Spider and the CSP, <br>
        only registered in CB-Spider's metadata, <br> and only existing in the CSP.
      operationId: list-all-disk
      parameters:
      - description: The name of the Connection to list Disks for
        in: query
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of all Disks within the specified connection, including
            Disks in CB-Spider only, CSP only, and mapped between both.
          schema:
            $ref: '#/definitions/spider.AllResourceListResponse'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List All Disks in a Connection
      tags:
      - '[Disk Management]'
  /alldiskinfo:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all Disk information associated with all connections.
      operationId: list-all-disk-info
      produces:
      - application/json
      responses:
        "200":
          description: List of all Disk information across all connections
          schema:
            $ref: '#/definitions/spider.AllResourceListResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List All Disk Info
      tags:
      - '[Disk Management]'
  /allkeypair:
    get:
      consumes:
      - application/json
      description: Retrieve a comprehensive list of all KeyPairs associated with a
        specific connection, <br> including those mapped between CB-Spider and the
        CSP, <br> only registered in CB-Spider's metadata, <br> and only existing
        in the CSP.
      operationId: list-all-keypair
      parameters:
      - description: The name of the Connection to list KeyPairs for
        in: query
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of all KeyPairs within the specified connection, including
            KeyPairs in CB-Spider only, CSP only, and mapped between both.
          schema:
            $ref: '#/definitions/spider.AllResourceListResponse'
        "400":
          description: Bad Request, possibly due to invalid query parameter
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List All KeyPairs in a Connection
      tags:
      - '[KeyPair Management]'
  /allkeypairinfo:
    get:
      consumes:
      - application/json
      description: Retrieve a list of KeyPair information associated with all connections.
      operationId: list-all-keypair-info
      produces:
      - application/json
      responses:
        "200":
          description: List of KeyPair information associated with all connections
          schema:
            $ref: '#/definitions/spider.AllResourceInfoListResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List All KeyPair Info
      tags:
      - '[KeyPair Management]'
  /allmyimage:
    get:
      consumes:
      - application/json
      description: Retrieve a comprehensive list of all MyImages associated with a
        specific connection, <br> including those mapped between CB-Spider and the
        CSP, <br> only registered in CB-Spider's metadata, <br> and only existing
        in the CSP.
      operationId: list-all-myimage
      parameters:
      - description: The name of the Connection to list MyImages for
        in: query
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of all MyImages within the specified connection, including
            MyImages in CB-Spider only, CSP only, and mapped between both.
          schema:
            $ref: '#/definitions/spider.AllResourceListResponse'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List All MyImages in a Connection
      tags:
      - '[MyImage Management]'
  /allmyimageinfo:
    get:
      consumes:
      - application/json
      description: Retrieve a comprehensive list of all MyImage information associated
        with a specific connection, <br> including those mapped between CB-Spider
        and the CSP, <br> only registered in CB-Spider's metadata, <br> and only existing
        in the CSP.
      operationId: list-all-myimage-info
      parameters:
      - description: The name of the Connection to list MyImage information for
        in: query
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of all MyImage information within the specified connection,
            including MyImage information in CB-Spider only, CSP only, and mapped
            between both.
          schema:
            $ref: '#/definitions/spider.AllResourceInfoListResponse'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List All MyImage Info
      tags:
      - '[MyImage Management]'
  /allnlb:
    get:
      consumes:
      - application/json
      description: Retrieve a comprehensive list of all Network Load Balancers (NLBs)
        associated with a specific connection, <br> including those mapped between
        CB-Spider and the CSP, <br> only registered in CB-Spider's metadata, <br>
        and only existing in the CSP.
      operationId: list-all-nlb
      parameters:
      - description: The name of the Connection to list NLBs for
        in: query
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of all NLBs within the specified connection, including
            NLBs in CB-Spider only, CSP only, and mapped between both.
          schema:
            $ref: '#/definitions/spider.AllResourceListResponse'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List All NLBs in a Connection
      tags:
      - '[NLB Management]'
  /allnlbinfo:
    get:
      consumes:
      - application/json
      description: Retrieve a comprehensive list of all Network Load Balancers (NLBs)
        associated with a specific connection, <br> including those mapped between
        CB-Spider and the CSP, <br> only registered in CB-Spider's metadata, <br>
        and only existing in the CSP.
      operationId: list-all-nlb-info
      parameters:
      - description: The name of the Connection to list NLBs for
        in: query
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of all NLBs within the specified connection, including
            NLBs in CB-Spider only, CSP only, and mapped between both.
          schema:
            $ref: '#/definitions/spider.AllResourceInfoListResponse'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List All NLB Info
      tags:
      - '[NLB Management]'
  /allsecuritygroup:
    get:
      consumes:
      - application/json
      description: Retrieve a comprehensive list of all Security Groups associated
        with a specific connection, <br> including those mapped between CB-Spider
        and the CSP, <br> only registered in CB-Spider's metadata, <br> and only existing
        in the CSP.
      operationId: list-all-securitygroup
      parameters:
      - description: The name of the Connection to list Security Groups for
        in: query
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of all Security Groups within the specified connection,
            including Security Groups in CB-Spider only, CSP only, and mapped between
            both.
          schema:
            $ref: '#/definitions/spider.AllResourceListResponse'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List All Security Groups in a Connection
      tags:
      - '[SecurityGroup Management]'
  /allsecuritygroupinfo:
    get:
      consumes:
      - application/json
      description: Retrieve a list of Security Group information associated with all
        connections.
      operationId: list-all-securitygroup-info
      produces:
      - application/json
      responses:
        "200":
          description: List of all Security Group information
          schema:
            $ref: '#/definitions/spider.AllResourceInfoListResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List All SecurityGroup Info
      tags:
      - '[SecurityGroup Management]'
  /allvm:
    get:
      consumes:
      - application/json
      description: Retrieve a comprehensive list of all Virtual Machines (VMs) associated
        with a specific connection, <br> including those mapped between CB-Spider
        and the CSP, <br> only registered in CB-Spider's metadata, <br> and only existing
        in the CSP.
      operationId: list-all-vm
      parameters:
      - description: The name of the Connection to list VMs for
        in: query
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of all VMs within the specified connection, including
            VMs in CB-Spider only, CSP only, and mapped between both.
          schema:
            $ref: '#/definitions/spider.AllResourceListResponse'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List All VMs in a Connection
      tags:
      - '[VM Management]'
  /allvminfo:
    get:
      consumes:
      - application/json
      description: Retrieve a list of detailed information on all Virtual Machines
        (VMs) associated with a specific connection, <br> including those mapped between
        CB-Spider and the CSP, <br> only registered in CB-Spider's metadata, <br>
        and only existing in the CSP.
      operationId: list-all-vm-info
      parameters:
      - description: The name of the Connection to list VMs for
        in: query
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of detailed information on all VMs within the specified
            connection, including VMs in CB-Spider only, CSP only, and mapped between
            both.
          schema:
            $ref: '#/definitions/spider.AllResourceInfoListResponse'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List All VM Info
      tags:
      - '[VM Management]'
  /allvpc:
    get:
      consumes:
      - application/json
      description: Retrieve a comprehensive list of all Virtual Private Clouds (VPCs)
        associated with a specific connection, <br> including those mapped between
        CB-Spider and the CSP, <br> only registered in CB-Spider's metadata, <br>
        and only existing in the CSP.
      operationId: list-all-vpc
      parameters:
      - description: The name of the Connection to list VPCs for
        in: query
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of all VPCs within the specified connection, including
            VPCs in CB-Spider only, CSP only, and mapped between both.
          schema:
            $ref: '#/definitions/spider.AllResourceListResponse'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List All VPCs in a Connection
      tags:
      - '[VPC Management]'
  /allvpcinfo:
    get:
      consumes:
      - application/json
      description: Retrieve a comprehensive list of all Virtual Private Clouds (VPCs)
        associated with a specific connection, <br> including those mapped between
        CB-Spider and the CSP, <br> only registered in CB-Spider's metadata, <br>
        and only existing in the CSP.
      operationId: list-all-vpc-info
      parameters:
      - description: The name of the Connection to list VPCs for
        in: query
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of all VPCs within the specified connection, including
            VPCs in CB-Spider only, CSP only, and mapped between both.
          schema:
            $ref: '#/definitions/spider.AllResourceInfoListResponse'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List All VPCs Info
      tags:
      - '[VPC Management]'
  /anycall:
    post:
      consumes:
      - application/json
      description: "Execute a custom function (FID) with key-value parameters through
        AnyCall. \U0001F577️ [[Development Guide](https://github.com/cloud-barista/cb-spider/wiki/AnyCall-API-Extension-Guide)]"
      operationId: any-call
      parameters:
      - description: Request body for executing AnyCall
        in: body
        name: AnyCallRequest
        required: true
        schema:
          $ref: '#/definitions/spider.AnyCallRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Result of the AnyCall operation
          schema:
            $ref: '#/definitions/spider.AnyCallInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Execute AnyCall
      tags:
      - '[AnyCall Management]'
  /check/tcp:
    get:
      consumes:
      - application/json
      description: Verifies whether a given TCP port is open on the specified host.
      operationId: check-tcp-port
      parameters:
      - description: The hostname or IP address to check
        in: query
        name: HostName
        required: true
        type: string
      - description: The TCP port to check
        in: query
        name: Port
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success message with port status
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "400":
          description: Bad Request, possibly due to invalid parameters
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Check if a specific TCP port is open
      tags:
      - '[Utility]'
  /check/udp:
    get:
      consumes:
      - application/json
      description: |-
        Verifies whether a given UDP port is open on the specified host.
        ※ Note: As UDP is connectionless, this check mainly performs a lookup and may not confirm if the server is working.
      operationId: check-udp-port
      parameters:
      - description: The hostname or IP address to check
        in: query
        name: HostName
        required: true
        type: string
      - description: The UDP port to check
        in: query
        name: Port
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success message with port status
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "400":
          description: Bad Request, possibly due to invalid parameters
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Check if a specific UDP port is open
      tags:
      - '[Utility]'
  /cloudos:
    get:
      description: Retrieve a list of supported Cloud OS.
      operationId: list-cloudos
      produces:
      - application/json
      responses:
        "200":
          description: List of supported Cloud OS
          schema:
            $ref: '#/definitions/spider.ListCloudOSResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List Cloud OS
      tags:
      - '[Cloud Info Management] CloudOS Info'
  /cloudos/metainfo/{CloudOSName}:
    get:
      description: Retrieve metadata information for a specific Cloud OS.
      operationId: get-cloudos-metainfo
      parameters:
      - description: The name of the Cloud OS
        in: path
        name: CloudOSName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Cloud OS Meta Info
          schema:
            $ref: '#/definitions/spider.cim.CloudOSMetaInfo'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Get Cloud OS Meta Info
      tags:
      - '[Cloud Info Management] CloudOS Info'
  /cluster:
    get:
      consumes:
      - application/json
      description: Retrieve a list of Clusters associated with a specific connection.
      operationId: list-cluster
      parameters:
      - description: The name of the Connection to list Clusters for
        in: query
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of Clusters
          schema:
            $ref: '#/definitions/spider.ClusterListResponse'
        "400":
          description: Bad Request, possibly due to invalid query parameter
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List Clusters
      tags:
      - '[Cluster Management]'
    post:
      consumes:
      - application/json
      description: "Create a new Cluster with specified configurations. \U0001F577️
        [[Concept Guide](https://github.com/cloud-barista/cb-spider/wiki/Provider-Managed-Kubernetes-and-Driver-API)]
        <br> * NodeGroupList is optional, depends on CSP type: <br> &nbsp;- Type-I
        (e.g., Tencent, Alibaba): requires separate Node Group addition after Cluster
        creation. <br> &nbsp;- Type-II (e.g., Azure, NHN): mandates at least one Node
        Group during initial Cluster creation."
      operationId: create-cluster
      parameters:
      - description: Request body for creating a Cluster
        in: body
        name: ClusterCreateRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ClusterCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the created Cluster
          schema:
            $ref: '#/definitions/spider.ClusterInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Create Cluster
      tags:
      - '[Cluster Management]'
  /cluster/{Name}:
    delete:
      consumes:
      - application/json
      description: Delete a specified Cluster.
      operationId: delete-cluster
      parameters:
      - description: Request body for deleting a Cluster
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      - description: The name of the Cluster to delete
        in: path
        name: Name
        required: true
        type: string
      - description: 'Force delete the Cluster. ex) true or false(default: false)'
        in: query
        name: force
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the delete operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Delete Cluster
      tags:
      - '[Cluster Management]'
    get:
      consumes:
      - application/json
      description: Retrieve details of a specific Cluster.
      operationId: get-cluster
      parameters:
      - description: The name of the Connection to get a Cluster for
        in: query
        name: ConnectionName
        required: true
        type: string
      - description: The name of the Cluster to retrieve
        in: path
        name: Name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of the Cluster
          schema:
            $ref: '#/definitions/spider.ClusterInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Get Cluster
      tags:
      - '[Cluster Management]'
  /cluster/{Name}/nodegroup:
    post:
      consumes:
      - application/json
      description: Add a new Node Group to an existing Cluster.
      operationId: add-nodegroup
      parameters:
      - description: The name of the Cluster to add the Node Group to
        in: path
        name: Name
        required: true
        type: string
      - description: Request body for adding a Node Group
        in: body
        name: ClusterAddNodeGroupRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ClusterAddNodeGroupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the Cluster including the added Node Group
          schema:
            $ref: '#/definitions/spider.ClusterInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Add Node Group
      tags:
      - '[Cluster Management]'
  /cluster/{Name}/nodegroup/{NodeGroupName}:
    delete:
      consumes:
      - application/json
      description: Remove an existing Node Group from a Cluster.
      operationId: remove-nodegroup
      parameters:
      - description: The name of the Cluster to remove the Node Group to
        in: path
        name: Name
        required: true
        type: string
      - description: The name of the Node Group to remove
        in: path
        name: NodeGroupName
        required: true
        type: string
      - description: Request body for removing a Node Group
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Result of the remove operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Remove Node Group
      tags:
      - '[Cluster Management]'
  /cluster/{Name}/nodegroup/{NodeGroupName}/autoscalesize:
    put:
      consumes:
      - application/json
      description: Change the scaling settings for a Node Group in a Cluster.
      operationId: change-nodegroup-scaling
      parameters:
      - description: The name of the Cluster to change Node Group Scaling
        in: path
        name: Name
        required: true
        type: string
      - description: The name of the Node Group
        in: path
        name: NodeGroupName
        required: true
        type: string
      - description: Request body for changing Node Group scaling
        in: body
        name: ClusterChangeNodeGroupScalingRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ClusterChangeNodeGroupScalingRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the updated Node Group
          schema:
            $ref: '#/definitions/spider.NodeGroupInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Change Node Group Scaling
      tags:
      - '[Cluster Management]'
  /cluster/{Name}/nodegroup/{NodeGroupName}/onautoscaling:
    put:
      consumes:
      - application/json
      description: Enable or disable auto scaling for a Node Group in a Cluster.
      operationId: set-nodegroup-autoscaling
      parameters:
      - description: The name of the Cluster to set Node Group Auto Scaling
        in: path
        name: Name
        required: true
        type: string
      - description: The name of the Node Group
        in: path
        name: NodeGroupName
        required: true
        type: string
      - description: Request body for setting auto scaling for a Node Group
        in: body
        name: ClusterSetNodeGroupAutoScalingRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ClusterSetNodeGroupAutoScalingRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Result of the auto scaling operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Set Node Group Auto Scaling
      tags:
      - '[Cluster Management]'
  /cluster/{Name}/upgrade:
    put:
      consumes:
      - application/json
      description: Upgrade a Cluster to a specified version.
      operationId: upgrade-cluster
      parameters:
      - description: The name of the Cluster to upgrade
        in: path
        name: Name
        required: true
        type: string
      - description: Request body for upgrading a Cluster
        in: body
        name: ClusterUpgradeRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ClusterUpgradeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the upgraded Cluster
          schema:
            $ref: '#/definitions/spider.ClusterInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Upgrade Cluster
      tags:
      - '[Cluster Management]'
  /connectionconfig:
    get:
      description: Retrieve a list of registered Connection Configs.
      operationId: list-connection-config
      produces:
      - application/json
      responses:
        "200":
          description: List of Connection Configs
          schema:
            $ref: '#/definitions/spider.ListConnectionConfigResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List Connection Configs
      tags:
      - '[Cloud Info Management] Connection Info'
    post:
      consumes:
      - application/json
      description: "Create a new Connection Config. \U0001F577️ [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#4-cloud-connection-configuration-%EC%A0%95%EB%B3%B4-%EB%93%B1%EB%A1%9D-%EB%B0%8F-%EA%B4%80%EB%A6%AC)]"
      operationId: create-connection-config
      parameters:
      - description: Request body for creating a Connection Config
        in: body
        name: ConnectionConfigInfo
        required: true
        schema:
          $ref: '#/definitions/spider.cim.ConnectionConfigInfo'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the created Connection Config
          schema:
            $ref: '#/definitions/spider.cim.ConnectionConfigInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Create Connection Config
      tags:
      - '[Cloud Info Management] Connection Info'
  /connectionconfig/{ConfigName}:
    delete:
      description: Delete a specific Connection Config.
      operationId: delete-connection-config
      parameters:
      - description: The name of the Connection Config
        in: path
        name: ConfigName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the delete operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Delete Connection Config
      tags:
      - '[Cloud Info Management] Connection Info'
    get:
      description: Retrieve details of a specific Connection Config.
      operationId: get-connection-config
      parameters:
      - description: The name of the Connection Config
        in: path
        name: ConfigName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of the Connection Config
          schema:
            $ref: '#/definitions/spider.cim.ConnectionConfigInfo'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Get Connection Config
      tags:
      - '[Cloud Info Management] Connection Info'
  /controlvm/{Name}:
    put:
      consumes:
      - application/json
      description: Control the state of a Virtual Machine (VM) such as suspend, resume,
        or reboot.
      operationId: control-vm
      parameters:
      - description: Request body for controlling a VM
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      - description: The name of the VM to control
        in: path
        name: Name
        required: true
        type: string
      - description: The action to perform on the VM (suspend, resume, reboot)
        in: query
        name: action
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the control operation
          schema:
            $ref: '#/definitions/spider.VMStatusResponse'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Control VM
      tags:
      - '[VM Management]'
  /countcluster:
    get:
      description: Get the total number of Clusters across all connections.
      operationId: count-all-cluster
      produces:
      - application/json
      responses:
        "200":
          description: Total count of Clusters
          schema:
            $ref: '#/definitions/spider.CountResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Count All Clusters
      tags:
      - '[Cluster Management]'
  /countcluster/{ConnectionName}:
    get:
      description: Get the total number of Clusters for a specific connection.
      operationId: count-cluster-by-connection
      parameters:
      - description: The name of the Connection
        in: path
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Total count of Clusters for the connection
          schema:
            $ref: '#/definitions/spider.CountResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Count Clusters by Connection
      tags:
      - '[Cluster Management]'
  /countconnectionconfig:
    get:
      description: Get the total number of connections.
      operationId: count-all-connection
      produces:
      - application/json
      responses:
        "200":
          description: Total count of connections
          schema:
            $ref: '#/definitions/spider.CountResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Count All Connections
      tags:
      - '[Cloud Info Management] Connection Info'
  /countconnectionconfig/{ProviderName}:
    get:
      description: Get the total number of connections for a specific provider.
      operationId: count-connection-by-provider
      parameters:
      - description: The name of the provider
        in: path
        name: ProviderName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Total count of connections for the provider
          schema:
            $ref: '#/definitions/spider.CountResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Count Connections by Provider
      tags:
      - '[Cloud Info Management] Connection Info'
  /countdisk:
    get:
      description: Get the total number of Disks across all connections.
      operationId: count-all-disk
      produces:
      - application/json
      responses:
        "200":
          description: Total count of Disks
          schema:
            $ref: '#/definitions/spider.CountResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Count All Disks
      tags:
      - '[Disk Management]'
  /countdisk/{ConnectionName}:
    get:
      description: Get the total number of Disks for a specific connection.
      operationId: count-disk-by-connection
      parameters:
      - description: The name of the Connection
        in: path
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Total count of Disks for the connection
          schema:
            $ref: '#/definitions/spider.CountResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Count Disks by Connection
      tags:
      - '[Disk Management]'
  /countkeypair:
    get:
      description: Get the total number of KeyPairs across all connections.
      operationId: count-all-keypair
      produces:
      - application/json
      responses:
        "200":
          description: Total count of KeyPairs
          schema:
            $ref: '#/definitions/spider.CountResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Count All KeyPairs
      tags:
      - '[KeyPair Management]'
  /countkeypair/{ConnectionName}:
    get:
      description: Get the total number of KeyPairs for a specific connection.
      operationId: count-keypair-by-connection
      parameters:
      - description: The name of the Connection
        in: path
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Total count of KeyPairs for the connection
          schema:
            $ref: '#/definitions/spider.CountResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Count KeyPairs by Connection
      tags:
      - '[KeyPair Management]'
  /countmyimage:
    get:
      description: Get the total number of MyImages across all connections.
      operationId: count-all-myimage
      produces:
      - application/json
      responses:
        "200":
          description: Total count of MyImages
          schema:
            $ref: '#/definitions/spider.CountResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Count All MyImages
      tags:
      - '[MyImage Management]'
  /countmyimage/{ConnectionName}:
    get:
      description: Get the total number of MyImages for a specific connection.
      operationId: count-myimage-by-connection
      parameters:
      - description: The name of the Connection
        in: path
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Total count of MyImages for the connection
          schema:
            $ref: '#/definitions/spider.CountResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Count MyImages by Connection
      tags:
      - '[MyImage Management]'
  /countnlb:
    get:
      description: Get the total number of Network Load Balancers (NLBs) across all
        connections.
      operationId: count-all-nlb
      produces:
      - application/json
      responses:
        "200":
          description: Total count of NLBs
          schema:
            $ref: '#/definitions/spider.CountResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Count All NLBs
      tags:
      - '[NLB Management]'
  /countnlb/{ConnectionName}:
    get:
      description: Get the total number of Network Load Balancers (NLBs) for a specific
        connection.
      operationId: count-nlb-by-connection
      parameters:
      - description: The name of the Connection
        in: path
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Total count of NLBs for the connection
          schema:
            $ref: '#/definitions/spider.CountResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Count NLBs by Connection
      tags:
      - '[NLB Management]'
  /countsecuritygroup:
    get:
      description: Get the total number of Security Groups across all connections.
      operationId: count-all-securitygroup
      produces:
      - application/json
      responses:
        "200":
          description: Total count of SecurityGroups
          schema:
            $ref: '#/definitions/spider.CountResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Count All SecurityGroups
      tags:
      - '[SecurityGroup Management]'
  /countsecuritygroup/{ConnectionName}:
    get:
      description: Get the total number of Security Groups for a specific connection.
      operationId: count-securitygroup-by-connection
      parameters:
      - description: The name of the Connection
        in: path
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Total count of SecurityGroups for the connection
          schema:
            $ref: '#/definitions/spider.CountResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Count SecurityGroups by Connection
      tags:
      - '[SecurityGroup Management]'
  /countsubnet:
    get:
      description: Get the total number of Subnets across all connections.
      operationId: count-all-subnet
      produces:
      - application/json
      responses:
        "200":
          description: Total count of Subnets
          schema:
            $ref: '#/definitions/spider.CountResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Count All Subnets
      tags:
      - '[VPC Management]'
  /countsubnet/{ConnectionName}:
    get:
      description: Get the total number of Subnets for a specific connection.
      operationId: count-subnet-by-connection
      parameters:
      - description: The name of the Connection
        in: path
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Total count of Subnets for the connection
          schema:
            $ref: '#/definitions/spider.CountResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Count Subnets by Connection
      tags:
      - '[VPC Management]'
  /countvm:
    get:
      description: Get the total number of Virtual Machines (VMs) across all connections.
      operationId: count-all-vm
      produces:
      - application/json
      responses:
        "200":
          description: Total count of VMs
          schema:
            $ref: '#/definitions/spider.CountResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Count All VMs
      tags:
      - '[VM Management]'
  /countvm/{ConnectionName}:
    get:
      description: Get the total number of Virtual Machines (VMs) for a specific connection.
      operationId: count-vm-by-connection
      parameters:
      - description: The name of the Connection
        in: path
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Total count of VMs for the connection
          schema:
            $ref: '#/definitions/spider.CountResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Count VMs by Connection
      tags:
      - '[VM Management]'
  /countvpc:
    get:
      description: Get the total number of VPCs across all connections.
      operationId: count-all-vpc
      produces:
      - application/json
      responses:
        "200":
          description: Total count of VPCs
          schema:
            $ref: '#/definitions/spider.CountResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Count All VPCs
      tags:
      - '[VPC Management]'
  /countvpc/{ConnectionName}:
    get:
      description: Get the total number of VPCs for a specific connection.
      operationId: count-vpc-by-connection
      parameters:
      - description: The name of the Connection
        in: path
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Total count of VPCs for the connection
          schema:
            $ref: '#/definitions/spider.CountResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Count VPCs by Connection
      tags:
      - '[VPC Management]'
  /credential:
    get:
      description: Retrieve a list of registered Credentials.
      operationId: list-credential
      parameters:
      - description: The name of the provider to filter the Credentials by
        in: query
        name: provider
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of Credentials
          schema:
            $ref: '#/definitions/spider.ListCredentialResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List Credentials
      tags:
      - '[Cloud Info Management] Credential Info'
    post:
      consumes:
      - application/json
      description: "Register a new Credential. \U0001F577️ [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#2-cloud-credential-%EC%A0%95%EB%B3%B4-%EB%93%B1%EB%A1%9D-%EB%B0%8F-%EA%B4%80%EB%A6%AC)]"
      operationId: register-credential
      parameters:
      - description: Request body for registering a Credential
        in: body
        name: CredentialInfo
        required: true
        schema:
          $ref: '#/definitions/spider.cim.CredentialInfo'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the registered Credential
          schema:
            $ref: '#/definitions/spider.cim.CredentialInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Register Credential
      tags:
      - '[Cloud Info Management] Credential Info'
  /credential/{CredentialName}:
    delete:
      description: Unregister a specific Credential.
      operationId: unregister-credential
      parameters:
      - description: The name of the Credential
        in: path
        name: CredentialName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the unregister operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Unregister Credential
      tags:
      - '[Cloud Info Management] Credential Info'
    get:
      description: Retrieve details of a specific Credential.
      operationId: get-credential
      parameters:
      - description: The name of the Credential
        in: path
        name: CredentialName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of the Credential
          schema:
            $ref: '#/definitions/spider.cim.CredentialInfo'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Get Credential
      tags:
      - '[Cloud Info Management] Credential Info'
  /cspcluster/{Id}:
    delete:
      consumes:
      - application/json
      description: Delete a specified CSP Cluster.
      operationId: delete-csp-cluster
      parameters:
      - description: Request body for deleting a CSP Cluster
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      - description: The CSP Cluster ID to delete
        in: path
        name: Id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the delete operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Delete CSP Cluster
      tags:
      - '[Cluster Management]'
  /cspdisk/{Id}:
    delete:
      consumes:
      - application/json
      description: Delete a specified CSP Disk.
      operationId: delete-csp-disk
      parameters:
      - description: Request body for deleting a CSP Disk
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      - description: The CSP Disk ID to delete
        in: path
        name: Id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the delete operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Delete CSP Disk
      tags:
      - '[Disk Management]'
  /cspkeypair/{Id}:
    delete:
      consumes:
      - application/json
      description: Delete a specified CSP KeyPair.
      operationId: delete-csp-keypair
      parameters:
      - description: Request body for deleting a CSP KeyPair
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      - description: The CSP KeyPair ID to delete
        in: path
        name: Id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the delete operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Delete CSP KeyPair
      tags:
      - '[KeyPair Management]'
  /cspmyimage/{Id}:
    delete:
      consumes:
      - application/json
      description: Delete a specified CSP MyImage.
      operationId: delete-csp-myimage
      parameters:
      - description: Request body for deleting a CSP MyImage
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      - description: The CSP MyImage ID to delete
        in: path
        name: Id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the delete operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Delete CSP MyImage
      tags:
      - '[MyImage Management]'
  /cspnlb/{Id}:
    delete:
      consumes:
      - application/json
      description: Delete a specified CSP Network Load Balancer (NLB).
      operationId: delete-csp-nlb
      parameters:
      - description: Request body for deleting a CSP NLB
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      - description: The CSP NLB ID to delete
        in: path
        name: Id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the delete operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Delete CSP NLB
      tags:
      - '[NLB Management]'
  /cspsecuritygroup/{Id}:
    delete:
      consumes:
      - application/json
      description: Delete a specified CSP Security Group.
      operationId: delete-csp-securitygroup
      parameters:
      - description: Request body for deleting a CSP SecurityGroup
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      - description: The CSP SecurityGroup ID to delete
        in: path
        name: Id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the delete operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Delete CSP SecurityGroup
      tags:
      - '[SecurityGroup Management]'
  /cspvm/{Id}:
    delete:
      consumes:
      - application/json
      description: Terminate a specified CSP Virtual Machine (VM).
      operationId: terminate-csp-vm
      parameters:
      - description: Request body for terminating a CSP VM
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      - description: The CSP VM ID to terminate
        in: path
        name: Id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the terminate operation
          schema:
            $ref: '#/definitions/spider.VMStatusResponse'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Terminate CSP VM
      tags:
      - '[VM Management]'
    get:
      consumes:
      - application/json
      description: Retrieve details of a specific CSP Virtual Machine (VM).
      operationId: get-csp-vm
      parameters:
      - description: The name of the Connection to get a CSP VM for
        in: query
        name: ConnectionName
        required: true
        type: string
      - description: The CSP VM ID to retrieve
        in: path
        name: Id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of the CSP VM
          schema:
            $ref: '#/definitions/spider.VMInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Get CSP VM
      tags:
      - '[VM Management]'
  /cspvpc/{Id}:
    delete:
      consumes:
      - application/json
      description: Delete a specified CSP Virtual Private Cloud (VPC).
      operationId: delete-csp-vpc
      parameters:
      - description: Request body for deleting a CSP VPC
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      - description: The CSP VPC ID to delete
        in: path
        name: Id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the delete operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Delete CSP VPC
      tags:
      - '[VPC Management]'
  /destroy:
    delete:
      consumes:
      - application/json
      description: Deletes all resources associated with a specific cloud connection.
        This action is irreversible.
      operationId: destroy-all-resource
      parameters:
      - description: Request body for deleting all resources
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the destroyed resources
          schema:
            $ref: '#/definitions/spider.DestroyedInfo'
        "400":
          description: Bad Request, possibly due to missing parameters
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Destroy all resources in a connection
      tags:
      - '[Utility]'
  /disk:
    get:
      consumes:
      - application/json
      description: Retrieve a list of Disks associated with a specific connection.
      operationId: list-disk
      parameters:
      - description: The name of the Connection to list Disks for
        in: query
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of Disks
          schema:
            $ref: '#/definitions/spider.DiskListResponse'
        "400":
          description: Bad Request, possibly due to invalid query parameter
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List Disks
      tags:
      - '[Disk Management]'
    post:
      consumes:
      - application/json
      description: "Create a new Disk with the specified configuration. \U0001F577️
        [[Concept Guide](https://github.com/cloud-barista/cb-spider/wiki/Disk-and-Driver-API)],
        [[Snapshot-MyImage,Disk Guide](https://github.com/cloud-barista/cb-spider/wiki/VM-Snapshot,-MyImage-and-Disk-Overview)]"
      operationId: create-disk
      parameters:
      - description: Request body for creating a Disk
        in: body
        name: DiskCreateRequest
        required: true
        schema:
          $ref: '#/definitions/spider.DiskCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the created Disk
          schema:
            $ref: '#/definitions/spider.DiskInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Create Disk
      tags:
      - '[Disk Management]'
  /disk/{Name}:
    delete:
      consumes:
      - application/json
      description: Delete a specified Disk.
      operationId: delete-disk
      parameters:
      - description: Request body for deleting a Disk
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      - description: The name of the Disk to delete
        in: path
        name: Name
        required: true
        type: string
      - description: 'Force delete the Disk. ex) true or false(default: false)'
        in: query
        name: force
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the delete operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Delete Disk
      tags:
      - '[Disk Management]'
    get:
      consumes:
      - application/json
      description: Retrieve details of a specific Disk.
      operationId: get-disk
      parameters:
      - description: The name of the Connection to get a Disk for
        in: query
        name: ConnectionName
        required: true
        type: string
      - description: The name of the Disk to retrieve
        in: path
        name: Name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of the Disk
          schema:
            $ref: '#/definitions/spider.DiskInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Get Disk
      tags:
      - '[Disk Management]'
  /disk/{Name}/attach:
    put:
      consumes:
      - application/json
      description: Attach an existing Disk to a VM.
      operationId: attach-disk
      parameters:
      - description: Request body for attaching a Disk to a VM
        in: body
        name: DiskAttachRequest
        required: true
        schema:
          $ref: '#/definitions/spider.DiskAttachRequest'
      - description: The name of the Disk to attach
        in: path
        name: Name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of the attached Disk
          schema:
            $ref: '#/definitions/spider.DiskInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Attach Disk
      tags:
      - '[Disk Management]'
  /disk/{Name}/detach:
    put:
      consumes:
      - application/json
      description: Detach an existing Disk from a VM.
      operationId: detach-disk
      parameters:
      - description: Request body for detaching a Disk from a VM
        in: body
        name: DiskDetachRequest
        required: true
        schema:
          $ref: '#/definitions/spider.DiskDetachRequest'
      - description: The name of the Disk to detach
        in: path
        name: Name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the detach operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Detach Disk
      tags:
      - '[Disk Management]'
  /disk/{Name}/size:
    put:
      consumes:
      - application/json
      description: Increase the size of an existing disk.
      operationId: increase-disk-size
      parameters:
      - description: Request body for increasing the Disk size
        in: body
        name: DiskSizeIncreaseRequest
        required: true
        schema:
          $ref: '#/definitions/spider.DiskSizeIncreaseRequest'
      - description: The name of the Disk to increase the size for
        in: path
        name: Name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the size increase operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Increase Disk Size
      tags:
      - '[Disk Management]'
  /driver:
    get:
      description: Retrieve a list of registered Cloud Drivers.
      operationId: list-driver
      parameters:
      - description: The name of the provider to filter the Cloud Drivers by
        in: query
        name: provider
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of Cloud Drivers
          schema:
            $ref: '#/definitions/spider.ListCloudDriverResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List Cloud Drivers
      tags:
      - '[Cloud Info Management] Driver Info'
    post:
      consumes:
      - application/json
      description: "Register a new Cloud Driver. \U0001F577️ [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#1-cloud-driver-%EC%A0%95%EB%B3%B4-%EB%93%B1%EB%A1%9D-%EB%B0%8F-%EA%B4%80%EB%A6%AC)]"
      operationId: register-driver
      parameters:
      - description: Request body for registering a Cloud Driver
        in: body
        name: CloudDriverInfo
        required: true
        schema:
          $ref: '#/definitions/spider.cim.CloudDriverInfo'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the registered Cloud Driver
          schema:
            $ref: '#/definitions/spider.cim.CloudDriverInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Register Cloud Driver
      tags:
      - '[Cloud Info Management] Driver Info'
  /driver/{DriverName}:
    delete:
      description: Unregister a specific Cloud Driver.
      operationId: unregister-driver
      parameters:
      - description: The name of the Cloud Driver
        in: path
        name: DriverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the unregister operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Unregister Cloud Driver
      tags:
      - '[Cloud Info Management] Driver Info'
    get:
      description: Retrieve details of a specific Cloud Driver.
      operationId: get-driver
      parameters:
      - description: The name of the Cloud Driver
        in: path
        name: DriverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of the Cloud Driver
          schema:
            $ref: '#/definitions/spider.cim.CloudDriverInfo'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Get Cloud Driver
      tags:
      - '[Cloud Info Management] Driver Info'
  /driver/capability:
    get:
      consumes:
      - application/json
      description: Retrieve capability information of the cloud driver.
      operationId: get-driver-capability
      parameters:
      - description: Name of connection to retrieve driver capability for
        in: query
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Driver Capability Information Details
          schema:
            $ref: '#/definitions/spider.DriverCapabilityResponse'
        "400":
          description: Bad Request, possibly due to empty or invalid connection name
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Get Driver Capability Information
      tags:
      - '[Cloud Driver] Capability'
  /driver/upload:
    post:
      consumes:
      - multipart/form-data
      description: Upload a Cloud Driver library file.
      operationId: upload-driver
      parameters:
      - description: Cloud Driver Library File
        in: formData
        name: file
        required: true
        type: file
      produces:
      - text/html
      responses:
        "200":
          description: File uploaded successfully
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Upload Cloud Driver
      tags:
      - '[Cloud Info Management] Driver Info'
  /getclusterowner:
    post:
      consumes:
      - application/json
      description: Retrieve the owner VPC of a specified Cluster.
      operationId: get-cluster-owner-vpc
      parameters:
      - description: Request body for getting Cluster Owner VPC
        in: body
        name: ClusterGetOwnerVPCRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ClusterGetOwnerVPCRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the owner VPC
          schema:
            $ref: '#/definitions/spider.IID'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Get Cluster Owner VPC
      tags:
      - '[Cluster Management]'
  /getnlbowner:
    post:
      consumes:
      - application/json
      description: Retrieve the owner VPC of a specified Network Load Balancer (NLB).
      operationId: get-nlb-owner-vpc
      parameters:
      - description: Request body for getting NLB Owner VPC
        in: body
        name: NLBGetOwnerVPCRequest
        required: true
        schema:
          $ref: '#/definitions/spider.NLBGetOwnerVPCRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the owner VPC
          schema:
            $ref: '#/definitions/spider.IID'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Get NLB Owner VPC
      tags:
      - '[NLB Management]'
  /getsecuritygroupowner:
    post:
      consumes:
      - application/json
      description: Retrieve the owner VPC of a specified Security Group.
      operationId: get-sg-owner-vpc
      parameters:
      - description: Request body for getting Security Group Owner VPC
        in: body
        name: VPCGetSecurityGroupOwnerRequest
        required: true
        schema:
          $ref: '#/definitions/spider.VPCGetSecurityGroupOwnerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the owner VPC
          schema:
            $ref: '#/definitions/spider.IID'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Get Security Group Owner VPC
      tags:
      - '[VPC Management]'
  /getvmusingresources:
    post:
      consumes:
      - application/json
      description: Retrieve details of a VM using resource ID.
      operationId: get-vm-using-rs
      parameters:
      - description: Connection name for the VM
        in: query
        name: ConnectionName
        required: true
        type: string
      - description: CSP ID of the VM
        in: query
        name: CSPId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of the VM using resource
          schema:
            $ref: '#/definitions/spider.VMUsingResources'
        "400":
          description: Bad Request, possibly due to invalid query parameters
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Get VM Using Resource
      tags:
      - '[VM Management]'
  /health:
    get:
      consumes:
      - application/json
      description: "Checks the health of CB-Spider service and its dependencies via
        /health endpoint. \U0001F577️ [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/Readiness-Check-Guide)]"
      operationId: health-check-health
      produces:
      - application/json
      responses:
        "200":
          description: Service is ready
          schema:
            $ref: '#/definitions/spider.HealthCheckResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Perform Health Check
      tags:
      - '[Health Check]'
  /healthcheck:
    get:
      consumes:
      - application/json
      description: "Checks the health of CB-Spider service and its dependencies via
        /healthcheck endpoint. \U0001F577️ [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/Readiness-Check-Guide)]"
      operationId: health-check-healthcheck
      produces:
      - application/json
      responses:
        "200":
          description: Service is ready
          schema:
            $ref: '#/definitions/spider.HealthCheckResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Perform Health Check
      tags:
      - '[Health Check]'
  /keypair:
    get:
      consumes:
      - application/json
      description: Retrieve a list of KeyPairs associated with a specific connection.
      operationId: list-keypair
      parameters:
      - description: The name of the Connection to list KeyPairs for
        in: query
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of KeyPairs
          schema:
            $ref: '#/definitions/spider.KeyPairListResponse'
        "400":
          description: Bad Request, possibly due to invalid query parameter
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List KeyPairs
      tags:
      - '[KeyPair Management]'
    post:
      consumes:
      - application/json
      description: "Create a new KeyPair with the specified configurations. \U0001F577️
        [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#5-vm-keypair-%EC%83%9D%EC%84%B1-%EB%B0%8F-%EC%A0%9C%EC%96%B4)]"
      operationId: create-keypair
      parameters:
      - description: Request body for creating a KeyPair
        in: body
        name: KeyPairCreateRequest
        required: true
        schema:
          $ref: '#/definitions/spider.KeyPairCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the created KeyPair
          schema:
            $ref: '#/definitions/spider.KeyPairInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Create KeyPair
      tags:
      - '[KeyPair Management]'
  /keypair/{Name}:
    delete:
      consumes:
      - application/json
      description: Delete a specified KeyPair.
      operationId: delete-keypair
      parameters:
      - description: Request body for deleting a KeyPair
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      - description: The name of the KeyPair to delete
        in: path
        name: Name
        required: true
        type: string
      - description: 'Force delete the KeyPair. ex) true or false(default: false)'
        in: query
        name: force
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the delete operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Delete KeyPair
      tags:
      - '[KeyPair Management]'
    get:
      consumes:
      - application/json
      description: Retrieve details of a specific KeyPair.
      operationId: get-keypair
      parameters:
      - description: The name of the Connection to get a KeyPair for
        in: query
        name: ConnectionName
        required: true
        type: string
      - description: The name of the KeyPair to retrieve
        in: path
        name: Name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of the KeyPair
          schema:
            $ref: '#/definitions/spider.KeyPairInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Get KeyPair
      tags:
      - '[KeyPair Management]'
  /myimage:
    get:
      consumes:
      - application/json
      description: Retrieve a list of MyImages associated with a specific connection.
      operationId: list-myimage
      parameters:
      - description: The name of the Connection to list MyImages for
        in: query
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of MyImages
          schema:
            $ref: '#/definitions/spider.MyImageListResponse'
        "400":
          description: Bad Request, possibly due to invalid query parameter
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List MyImages
      tags:
      - '[MyImage Management]'
    post:
      consumes:
      - application/json
      description: "Create a new MyImage snapshot from a specified VM. \U0001F577️
        [[Concept Guide](https://github.com/cloud-barista/cb-spider/wiki/MyImage-and-Driver-API)],
        [[Snapshot-MyImage,Disk Guide](https://github.com/cloud-barista/cb-spider/wiki/VM-Snapshot,-MyImage-and-Disk-Overview)]"
      operationId: create-myimage
      parameters:
      - description: Request body for creating a MyImage snapshot
        in: body
        name: MyImageSnapshotRequest
        required: true
        schema:
          $ref: '#/definitions/spider.MyImageSnapshotRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the created MyImage snapshot
          schema:
            $ref: '#/definitions/spider.MyImageInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Snapshot VM
      tags:
      - '[MyImage Management]'
  /myimage/{Name}:
    delete:
      consumes:
      - application/json
      description: Delete a specified MyImage.
      operationId: delete-myimage
      parameters:
      - description: Request body for deleting a MyImage
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      - description: The name of the MyImage to delete
        in: path
        name: Name
        required: true
        type: string
      - description: 'Force delete the MyImage. ex) true or false(default: false)'
        in: query
        name: force
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the delete operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Delete MyImage
      tags:
      - '[MyImage Management]'
    get:
      consumes:
      - application/json
      description: Retrieve details of a specific MyImage.
      operationId: get-myimage
      parameters:
      - description: The name of the Connection to get a MyImage for
        in: query
        name: ConnectionName
        required: true
        type: string
      - description: The name of the MyImage to retrieve
        in: path
        name: Name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of the MyImage
          schema:
            $ref: '#/definitions/spider.MyImageInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Get MyImage
      tags:
      - '[MyImage Management]'
  /nlb:
    get:
      consumes:
      - application/json
      description: Retrieve a list of Network Load Balancers (NLBs) associated with
        a specific connection.
      operationId: list-nlb
      parameters:
      - description: The name of the Connection to list NLBs for
        in: query
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of NLBs
          schema:
            $ref: '#/definitions/spider.NLBListResponse'
        "400":
          description: Bad Request, possibly due to invalid query parameter
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List NLBs
      tags:
      - '[NLB Management]'
    post:
      consumes:
      - application/json
      description: "Create a new Network Load Balancer (NLB) with specified configurations.
        \U0001F577️ [[Concept Guide](https://github.com/cloud-barista/cb-spider/wiki/Network-Load-Balancer-and-Driver-API)]"
      operationId: create-nlb
      parameters:
      - description: Request body for creating an NLB
        in: body
        name: NLBCreateRequest
        required: true
        schema:
          $ref: '#/definitions/spider.NLBCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the created NLB
          schema:
            $ref: '#/definitions/spider.NLBInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Create NLB
      tags:
      - '[NLB Management]'
  /nlb/{Name}:
    delete:
      consumes:
      - application/json
      description: Delete a specified Network Load Balancer (NLB).
      operationId: delete-nlb
      parameters:
      - description: Request body for deleting an NLB
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      - description: The name of the NLB to delete
        in: path
        name: Name
        required: true
        type: string
      - description: 'Force delete the NLB. ex) true or false(default: false)'
        in: query
        name: force
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the delete operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Delete NLB
      tags:
      - '[NLB Management]'
    get:
      consumes:
      - application/json
      description: Retrieve details of a specific Network Load Balancer (NLB).
      operationId: get-nlb
      parameters:
      - description: The name of the Connection to get an NLB for
        in: query
        name: ConnectionName
        required: true
        type: string
      - description: The name of the NLB to retrieve
        in: path
        name: Name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of the NLB
          schema:
            $ref: '#/definitions/spider.NLBInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Get NLB
      tags:
      - '[NLB Management]'
  /nlb/{Name}/health:
    get:
      consumes:
      - application/json
      description: Retrieve the health information of the VM group in a specified
        Network Load Balancer (NLB).
      operationId: get-vmgroup-healthinfo
      parameters:
      - description: The name of the NLB to get the VM Group Health Info for
        in: path
        name: Name
        required: true
        type: string
      - description: The name of the Connection
        in: query
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Health information of the VM group
          schema:
            $ref: '#/definitions/spider.NLBGetVMGroupHealthInfoResponse'
        "400":
          description: Bad Request, possibly due to invalid query parameter
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Get NLB VM Group Health Info
      tags:
      - '[NLB Management]'
  /nlb/{Name}/vms:
    delete:
      consumes:
      - application/json
      description: Remove a set of VMs from an existing Network Load Balancer (NLB).
      operationId: remove-nlb-vm
      parameters:
      - description: The name of the NLB to remove VMs from
        in: path
        name: Name
        required: true
        type: string
      - description: Request body for removing VMs from an NLB
        in: body
        name: NLBRemoveVMsRequest
        required: true
        schema:
          $ref: '#/definitions/spider.NLBRemoveVMsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Result of the remove operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Remove VMs from NLB
      tags:
      - '[NLB Management]'
    post:
      consumes:
      - application/json
      description: Add a new set of VMs to an existing Network Load Balancer (NLB).
      operationId: add-nlb-vm
      parameters:
      - description: The name of the NLB to add VMs to
        in: path
        name: Name
        required: true
        type: string
      - description: Request body for adding VMs to an NLB
        in: body
        name: NLBAddVMsRequest
        required: true
        schema:
          $ref: '#/definitions/spider.NLBAddVMsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the NLB including the added VMs
          schema:
            $ref: '#/definitions/spider.NLBInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Add VMs to NLB
      tags:
      - '[NLB Management]'
  /orgregion:
    get:
      consumes:
      - application/json
      description: Retrieve a list of Original Regions associated with a specific
        connection. <br> The response structure may vary depending on the request
        ConnectionName.
      operationId: list-org-region
      parameters:
      - description: The name of the Connection to list Original regions for
        in: query
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Dynamic JSON structure representing the list of Original Regions
          schema:
            $ref: '#/definitions/spider.OriginalRegionListResponse'
        "400":
          description: Bad Request, possibly due to invalid query parameter
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List Original Regions
      tags:
      - '[Cloud Metadata] Region/Zone'
  /orgzone:
    get:
      consumes:
      - application/json
      description: Retrieve a list of Original Zones associated with a specific connection.
        <br> The response structure may vary depending on the request ConnectionName.
      operationId: list-org-zone
      parameters:
      - description: The name of the Connection to list Original zones for
        in: query
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Dynamic JSON structure representing the list of Original Zones
          schema:
            $ref: '#/definitions/spider.OriginalZoneListResponse'
        "400":
          description: Bad Request, possibly due to invalid query parameter
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List Original Zones
      tags:
      - '[Cloud Metadata] Region/Zone'
  /ping:
    get:
      consumes:
      - application/json
      description: "Checks the health of CB-Spider service and its dependencies via
        /ping endpoint. \U0001F577️ [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/Readiness-Check-Guide)]"
      operationId: health-check-ping
      produces:
      - application/json
      responses:
        "200":
          description: Service is ready
          schema:
            $ref: '#/definitions/spider.HealthCheckResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Perform Health Check
      tags:
      - '[Health Check]'
  /preconfig/orgregion:
    get:
      consumes:
      - application/json
      description: Retrieve a list of pre-configured Original Regions based on driver
        and credential names. <br> The response structure may vary depending on the
        request DriverName and CredentialName.
      operationId: list-preconfigured-original-org-region
      parameters:
      - description: example:"aws-credential"
        in: query
        name: CredentialName
        required: true
        type: string
      - description: example:"aws-driver"
        in: query
        name: DriverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of Pre-configured Original Regions
          schema:
            $ref: '#/definitions/spider.OriginalRegionListResponse'
        "400":
          description: Bad Request, possibly due to invalid query parameter
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List Pre-configured Original Regions
      tags:
      - '[Cloud Metadata] Region/Zone'
  /preconfig/regionzone:
    get:
      consumes:
      - application/json
      description: "Retrieve a list of pre-configured Region Zones based on driver
        and credential names. \U0001F577️ [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/REST-API-Region-Zone-Information-Guide)]"
      operationId: list-region-zone-preconfig
      parameters:
      - description: example:"aws-credential"
        in: query
        name: CredentialName
        required: true
        type: string
      - description: example:"aws-driver"
        in: query
        name: DriverName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of Pre-configured Region Zones
          schema:
            $ref: '#/definitions/spider.RegionZoneListResponse'
        "400":
          description: Bad Request, possibly due to invalid query parameter
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List Pre-configured Region Zones
      tags:
      - '[Cloud Metadata] Region/Zone'
  /preconfig/regionzone/{Name}:
    get:
      consumes:
      - application/json
      description: "Retrieve details of a specific pre-configured Region Zone based
        on driver and credential names. \U0001F577️ [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/REST-API-Region-Zone-Information-Guide)]"
      operationId: get-region-zone-preconfig
      parameters:
      - description: example:"aws-credential"
        in: query
        name: CredentialName
        required: true
        type: string
      - description: example:"aws-driver"
        in: query
        name: DriverName
        required: true
        type: string
      - description: The name of the Region to retrieve
        in: path
        name: Name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of the Pre-configured Region Zone
          schema:
            $ref: '#/definitions/spider.RegionZoneInfo'
        "400":
          description: Bad Request, possibly due to invalid query parameter
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Get Pre-configured Region Zone
      tags:
      - '[Cloud Metadata] Region/Zone'
  /priceinfo/{ProductFamily}/{RegionName}:
    post:
      consumes:
      - application/json
      description: "Retrieve price details of a specific Product Family in a specific
        Region. \U0001F577️ [[Concept Guide](https://github.com/cloud-barista/cb-spider/wiki/Price-Info-and-Cloud-Driver-API)],
        \U0001F577️ [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/RestAPI-Multi%E2%80%90Cloud-Price-Information-Guide)]
        <br> * example body: {\"connectionName\":\"aws-connection\",\"FilterList\":[{\"Key\":\"instanceType\",\"Value\":\"t2.micro\"}]}"
      operationId: get-price-info
      parameters:
      - description: The name of the Product Family to retrieve price information
          for
        in: path
        name: ProductFamily
        required: true
        type: string
      - description: The name of the Region to retrieve price information for
        in: path
        name: RegionName
        required: true
        type: string
      - description: The request body containing additional filters for price information
        in: body
        name: PriceInfoRequest
        schema:
          $ref: '#/definitions/spider.PriceInfoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Price Information Details
          schema:
            $ref: '#/definitions/spider.PriceInfoResponse'
        "400":
          description: Bad Request, possibly due to invalid query parameter
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Get Price Information
      tags:
      - '[Cloud Metadata] Price Info'
  /productfamily/{RegionName}:
    get:
      consumes:
      - application/json
      description: "Retrieve a list of Product Families associated with a specific
        connection and region. \U0001F577️ [[Concept Guide](https://github.com/cloud-barista/cb-spider/wiki/Price-Info-and-Cloud-Driver-API)],
        \U0001F577️ [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/RestAPI-Multi%E2%80%90Cloud-Price-Information-Guide)]"
      operationId: list-product-family
      parameters:
      - description: The name of the Connection to list Product Families for
        in: query
        name: ConnectionName
        required: true
        type: string
      - description: The name of the Region to list Product Families for
        in: path
        name: RegionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of Product Families
          schema:
            $ref: '#/definitions/spider.ProductFamilyListResponse'
        "400":
          description: Bad Request, possibly due to invalid query parameter
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List Product Families
      tags:
      - '[Cloud Metadata] Price Info'
  /readyz:
    get:
      consumes:
      - application/json
      description: "Checks the health of CB-Spider service and its dependencies via
        /readyz endpoint. \U0001F577️ [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/Readiness-Check-Guide)]"
      operationId: health-check-readyz
      produces:
      - application/json
      responses:
        "200":
          description: Service is ready
          schema:
            $ref: '#/definitions/spider.HealthCheckResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Perform Health Check
      tags:
      - '[Health Check]'
  /regcluster:
    post:
      consumes:
      - application/json
      description: Register a new Cluster with the specified VPC and CSP ID.
      operationId: register-cluster
      parameters:
      - description: Request body for registering a Cluster
        in: body
        name: ClusterRegisterRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ClusterRegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the registered Cluster
          schema:
            $ref: '#/definitions/spider.ClusterInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Register Cluster
      tags:
      - '[Cluster Management]'
  /regcluster/{Name}:
    delete:
      consumes:
      - application/json
      description: Unregister a Cluster with the specified name.
      operationId: unregister-cluster
      parameters:
      - description: Request body for unregistering a Cluster
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      - description: The name of the Cluster to unregister
        in: path
        name: Name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the unregister operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Unregister Cluster
      tags:
      - '[Cluster Management]'
  /regdisk:
    post:
      consumes:
      - application/json
      description: Register a new Disk with the specified name, zone, and CSP ID.
      operationId: register-disk
      parameters:
      - description: Request body for registering a Disk
        in: body
        name: DiskRegisterRequest
        required: true
        schema:
          $ref: '#/definitions/spider.DiskRegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the registered Disk
          schema:
            $ref: '#/definitions/spider.DiskInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Register Disk
      tags:
      - '[Disk Management]'
  /regdisk/{Name}:
    delete:
      consumes:
      - application/json
      description: Unregister a Disk with the specified name.
      operationId: unregister-disk
      parameters:
      - description: Request body for unregistering a Disk
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      - description: The name of the Disk to unregister
        in: path
        name: Name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the unregister operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Unregister Disk
      tags:
      - '[Disk Management]'
  /region:
    get:
      description: Retrieve a list of registered Regions.
      operationId: list-region
      parameters:
      - description: The name of the provider to filter the Regions by
        in: query
        name: provider
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of Regions
          schema:
            $ref: '#/definitions/spider.ListRegionResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List Regions
      tags:
      - '[Cloud Info Management] Region Info'
    post:
      consumes:
      - application/json
      description: "Register a new Region. \U0001F577️ [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#3-cloud-regionzone-%EC%A0%95%EB%B3%B4-%EB%93%B1%EB%A1%9D-%EB%B0%8F-%EA%B4%80%EB%A6%AC)]"
      operationId: register-region
      parameters:
      - description: Request body for registering a Region
        in: body
        name: RegionInfo
        required: true
        schema:
          $ref: '#/definitions/spider.cim.RegionInfo'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the registered Region
          schema:
            $ref: '#/definitions/spider.cim.RegionInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Register Region
      tags:
      - '[Cloud Info Management] Region Info'
  /region/{RegionName}:
    delete:
      description: Unregister a specific Region.
      operationId: unregister-region
      parameters:
      - description: The name of the Region
        in: path
        name: RegionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the unregister operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Unregister Region
      tags:
      - '[Cloud Info Management] Region Info'
    get:
      description: Retrieve details of a specific Region.
      operationId: get-region
      parameters:
      - description: The name of the Region
        in: path
        name: RegionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of the Region
          schema:
            $ref: '#/definitions/spider.cim.RegionInfo'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Get Region
      tags:
      - '[Cloud Info Management] Region Info'
  /regionzone:
    get:
      consumes:
      - application/json
      description: "Retrieve a list of Region Zones associated with a specific connection.
        \U0001F577️ [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/REST-API-Region-Zone-Information-Guide)]"
      operationId: list-region-zone
      parameters:
      - description: The name of the Connection to list Region and Zones for
        in: query
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of Region Zones
          schema:
            $ref: '#/definitions/spider.RegionZoneListResponse'
        "400":
          description: Bad Request, possibly due to invalid query parameter
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List Region Zones
      tags:
      - '[Cloud Metadata] Region/Zone'
  /regionzone/{Name}:
    get:
      consumes:
      - application/json
      description: "Retrieve details of a specific Region Zone. \U0001F577️ [[User
        Guide](https://github.com/cloud-barista/cb-spider/wiki/REST-API-Region-Zone-Information-Guide)]"
      operationId: get-region-zone
      parameters:
      - description: The name of the Connection to get a specific Region and Zones
          for
        in: query
        name: ConnectionName
        required: true
        type: string
      - description: The name of the Region to retrieve
        in: path
        name: Name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of the Region Zone
          schema:
            $ref: '#/definitions/spider.RegionZoneInfo'
        "400":
          description: Bad Request, possibly due to invalid query parameter
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Get Region Zone
      tags:
      - '[Cloud Metadata] Region/Zone'
  /regkeypair:
    post:
      consumes:
      - application/json
      description: Register a new KeyPair with the specified name and CSP ID.
      operationId: register-keypair
      parameters:
      - description: Request body for registering a KeyPair
        in: body
        name: KeyPairRegisterRequest
        required: true
        schema:
          $ref: '#/definitions/spider.KeyPairRegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the registered KeyPair
          schema:
            $ref: '#/definitions/spider.KeyPairInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Register KeyPair
      tags:
      - '[KeyPair Management]'
  /regkeypair/{Name}:
    delete:
      consumes:
      - application/json
      description: Unregister a KeyPair with the specified name.
      operationId: unregister-keypair
      parameters:
      - description: Request body for unregistering a KeyPair
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      - description: The name of the KeyPair to unregister
        in: path
        name: Name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the unregister operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Unregister KeyPair
      tags:
      - '[KeyPair Management]'
  /regmyimage:
    post:
      consumes:
      - application/json
      description: Register a new MyImage with the specified name and CSP ID.
      operationId: register-myimage
      parameters:
      - description: Request body for registering a MyImage
        in: body
        name: MyImageRegisterRequest
        required: true
        schema:
          $ref: '#/definitions/spider.MyImageRegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the registered MyImage
          schema:
            $ref: '#/definitions/spider.MyImageInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Register MyImage
      tags:
      - '[MyImage Management]'
  /regmyimage/{Name}:
    delete:
      consumes:
      - application/json
      description: Unregister a MyImage with the specified name.
      operationId: unregister-myimage
      parameters:
      - description: Request body for unregistering a MyImage
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      - description: The name of the MyImage to unregister
        in: path
        name: Name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the unregister operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Unregister MyImage
      tags:
      - '[MyImage Management]'
  /regnlb:
    post:
      consumes:
      - application/json
      description: Register a new Network Load Balancer (NLB) with the specified name
        and CSP ID.
      operationId: register-nlb
      parameters:
      - description: Request body for registering an NLB
        in: body
        name: NLBRegisterRequest
        required: true
        schema:
          $ref: '#/definitions/spider.NLBRegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the registered NLB
          schema:
            $ref: '#/definitions/spider.NLBInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Register NLB
      tags:
      - '[NLB Management]'
  /regnlb/{Name}:
    delete:
      consumes:
      - application/json
      description: Unregister a Network Load Balancer (NLB) with the specified name.
      operationId: unregister-nlb
      parameters:
      - description: Request body for unregistering an NLB
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      - description: The name of the NLB to unregister
        in: path
        name: Name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the unregister operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Unregister NLB
      tags:
      - '[NLB Management]'
  /regsecuritygroup:
    post:
      consumes:
      - application/json
      description: Register a new Security Group with the specified name and CSP ID.
      operationId: register-securitygroup
      parameters:
      - description: Request body for registering a SecurityGroup
        in: body
        name: SecurityGroupRegisterRequest
        required: true
        schema:
          $ref: '#/definitions/spider.SecurityGroupRegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the registered SecurityGroup
          schema:
            $ref: '#/definitions/spider.SecurityInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Register SecurityGroup
      tags:
      - '[SecurityGroup Management]'
  /regsecuritygroup/{Name}:
    delete:
      consumes:
      - application/json
      description: Unregister a Security Group with the specified name.
      operationId: unregister-securitygroup
      parameters:
      - description: Request body for unregistering a SecurityGroup
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      - description: The name of the SecurityGroup to unregister
        in: path
        name: Name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the unregister operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Unregister SecurityGroup
      tags:
      - '[SecurityGroup Management]'
  /regsubnet:
    post:
      consumes:
      - application/json
      description: Register a new Subnet within a specified VPC.
      operationId: register-subnet
      parameters:
      - description: Request body for registering a Subnet
        in: body
        name: SubnetRegisterRequest
        required: true
        schema:
          $ref: '#/definitions/spider.SubnetRegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the VPC including the registered Subnet
          schema:
            $ref: '#/definitions/spider.VPCInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Register Subnet
      tags:
      - '[VPC Management]'
  /regsubnet/{Name}:
    delete:
      consumes:
      - application/json
      description: Unregister a Subnet from a specified VPC.
      operationId: unregister-subnet
      parameters:
      - description: Request body for unregistering a Subnet
        in: body
        name: SubnetUnregisterRequest
        required: true
        schema:
          $ref: '#/definitions/spider.SubnetUnregisterRequest'
      - description: The name of the Subnet to unregister
        in: path
        name: Name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the unregister operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Unregister Subnet
      tags:
      - '[VPC Management]'
  /regvm:
    post:
      consumes:
      - application/json
      description: Register a new Virtual Machine (VM) with the specified name and
        CSP ID.
      operationId: register-vm
      parameters:
      - description: Request body for registering a VM
        in: body
        name: VMRegisterRequest
        required: true
        schema:
          $ref: '#/definitions/spider.VMRegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the registered VM
          schema:
            $ref: '#/definitions/spider.VMInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Register VM
      tags:
      - '[VM Management]'
  /regvm/{Name}:
    delete:
      consumes:
      - application/json
      description: Unregister a Virtual Machine (VM) with the specified name.
      operationId: unregister-vm
      parameters:
      - description: Request body for unregistering a VM
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      - description: The name of the VM to unregister
        in: path
        name: Name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the unregister operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Unregister VM
      tags:
      - '[VM Management]'
  /regvpc:
    post:
      consumes:
      - application/json
      description: Register a new Virtual Private Cloud (VPC) with the specified name
        and CSP ID.
      operationId: register-vpc
      parameters:
      - description: Request body for registering a VPC
        in: body
        name: VPCRegisterRequest
        required: true
        schema:
          $ref: '#/definitions/spider.VPCRegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the registered VPC
          schema:
            $ref: '#/definitions/spider.VPCInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Register VPC
      tags:
      - '[VPC Management]'
  /regvpc/{Name}:
    delete:
      consumes:
      - application/json
      description: Unregister a VPC with the specified name.
      operationId: unregister-vpc
      parameters:
      - description: Request body for unregistering a VPC
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      - description: The name of the VPC to unregister
        in: path
        name: Name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the unregister operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Unregister VPC
      tags:
      - '[VPC Management]'
  /securitygroup:
    get:
      consumes:
      - application/json
      description: Retrieve a list of Security Groups associated with a specific connection.
      operationId: list-securitygroup
      parameters:
      - description: The name of the Connection to list SecurityGroups for
        in: query
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of SecurityGroups
          schema:
            $ref: '#/definitions/spider.SecurityGroupListResponse'
        "400":
          description: Bad Request, possibly due to invalid query parameter
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List SecurityGroups
      tags:
      - '[SecurityGroup Management]'
    post:
      consumes:
      - application/json
      description: "Create a new Security Group with specified rules and tags. \U0001F577️
        [[Concept Guide](https://github.com/cloud-barista/cb-spider/wiki/Security-Group-Rules-and-Driver-API)],
        \U0001F577️ [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#4-securitygroup-%EC%83%9D%EC%84%B1-%EB%B0%8F-%EC%A0%9C%EC%96%B4)]"
      operationId: create-securitygroup
      parameters:
      - description: Request body for creating a SecurityGroup
        in: body
        name: SecurityGroupCreateRequest
        required: true
        schema:
          $ref: '#/definitions/spider.SecurityGroupCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the created SecurityGroup
          schema:
            $ref: '#/definitions/spider.SecurityInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Create SecurityGroup
      tags:
      - '[SecurityGroup Management]'
  /securitygroup/{Name}:
    delete:
      consumes:
      - application/json
      description: Delete a specified Security Group.
      operationId: delete-securitygroup
      parameters:
      - description: Request body for deleting a SecurityGroup
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      - description: The name of the SecurityGroup to delete
        in: path
        name: Name
        required: true
        type: string
      - description: 'Force delete the SecurityGroup. ex) true or false(default: false)'
        in: query
        name: force
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the delete operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Delete SecurityGroup
      tags:
      - '[SecurityGroup Management]'
    get:
      consumes:
      - application/json
      description: Retrieve details of a specific Security Group.
      operationId: get-securitygroup
      parameters:
      - description: The name of the Connection to get a SecurityGroup for
        in: query
        name: ConnectionName
        required: true
        type: string
      - description: The name of the SecurityGroup to retrieve
        in: path
        name: Name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of the SecurityGroup
          schema:
            $ref: '#/definitions/spider.SecurityInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Get SecurityGroup
      tags:
      - '[SecurityGroup Management]'
  /securitygroup/{SGName}/rules:
    delete:
      consumes:
      - application/json
      description: Remove existing rules from a Security Group.
      operationId: remove-rule
      parameters:
      - description: The name of the SecurityGroup to remove rules from
        in: path
        name: SGName
        required: true
        type: string
      - description: Request body for removing rules
        in: body
        name: RuleControlRequest
        required: true
        schema:
          $ref: '#/definitions/spider.RuleControlRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Result of the remove operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Remove Rules from SecurityGroup
      tags:
      - '[SecurityGroup Management]'
    post:
      consumes:
      - application/json
      description: Add new rules to a Security Group.
      operationId: add-rule
      parameters:
      - description: The name of the SecurityGroup to add rules to
        in: path
        name: SGName
        required: true
        type: string
      - description: Request body for adding rules
        in: body
        name: RuleControlRequest
        required: true
        schema:
          $ref: '#/definitions/spider.RuleControlRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the SecurityGroup after adding rules
          schema:
            $ref: '#/definitions/spider.SecurityInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Add Rules to SecurityGroup
      tags:
      - '[SecurityGroup Management]'
  /securitygroup/vpc/{VPCName}:
    get:
      consumes:
      - application/json
      description: Retrieve a list of Security Groups associated with a specific VPC
        in a given cloud connection.
      operationId: list-vpc-securitygroup
      parameters:
      - description: The name of the VPC to list Security Groups for
        in: path
        name: VPCName
        required: true
        type: string
      - description: The name of the Connection to list Security Groups for
        in: query
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Response containing security groups under the key 'securitygroup'
          schema:
            $ref: '#/definitions/spider.SecurityGroupListResponse'
        "400":
          description: Bad Request, possibly due to missing parameters
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List Security Groups in a Specific VPC
      tags:
      - '[SecurityGroup Management]'
  /tag:
    get:
      consumes:
      - application/json
      description: |-
        Retrieve a list of tags for a specified resource.
        ※ Resource types: VPC, SUBNET, SG, KEY, VM, NLB, DISK, MYIMAGE, CLUSTER
      operationId: list-tag
      parameters:
      - description: Connection Name. ex) aws-connection
        in: query
        name: ConnectionName
        required: true
        type: string
      - description: Resource Type. ex) VPC
        in: query
        name: ResourceType
        required: true
        type: string
      - description: Resource Name. ex) vpc-01
        in: query
        name: ResourceName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of tags
          schema:
            items:
              $ref: '#/definitions/spider.KeyValue'
            type: array
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List Tags
      tags:
      - '[Tag Management]'
    post:
      consumes:
      - application/json
      description: |-
        Add a tag to a specified resource.
        ※ Resource types: VPC, SUBNET, SG, KEY, VM, NLB, DISK, MYIMAGE, CLUSTER
      operationId: add-tag
      parameters:
      - description: Request body for adding a tag
        in: body
        name: TagAddRequest
        required: true
        schema:
          $ref: '#/definitions/spider.TagAddRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the added tag
          schema:
            $ref: '#/definitions/spider.KeyValue'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Add Tag
      tags:
      - '[Tag Management]'
  /tag/{Key}:
    delete:
      consumes:
      - application/json
      description: |-
        Remove a specific tag from a specified resource.
        ※ Resource types: VPC, SUBNET, SG, KEY, VM, NLB, DISK, MYIMAGE, CLUSTER
      operationId: remove-tag
      parameters:
      - description: Request body for removing a specific tag
        in: body
        name: TagRemoveRequest
        required: true
        schema:
          $ref: '#/definitions/spider.TagRemoveRequest'
      - description: The key of the tag to remove
        in: path
        name: Key
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the remove operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Remove Tag
      tags:
      - '[Tag Management]'
    get:
      consumes:
      - application/json
      description: |-
        Retrieve a specific tag for a specified resource.
        ※ Resource types: VPC, SUBNET, SG, KEY, VM, NLB, DISK, MYIMAGE, CLUSTER
      operationId: get-tag
      parameters:
      - description: Connection Name. ex) aws-connection
        in: query
        name: ConnectionName
        required: true
        type: string
      - description: Resource Type. ex) VPC
        in: query
        name: ResourceType
        required: true
        type: string
      - description: Resource Name. ex) vpc-01
        in: query
        name: ResourceName
        required: true
        type: string
      - description: The key of the tag to retrieve
        in: path
        name: Key
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of the tag
          schema:
            $ref: '#/definitions/spider.KeyValue'
        "400":
          description: Bad Request, possibly due to invalid query parameters
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Get Tag
      tags:
      - '[Tag Management]'
  /version:
    get:
      consumes:
      - application/json
      description: Retrieves the version information of CB-Spider.
      operationId: version-info
      produces:
      - application/json
      responses:
        "200":
          description: Version information retrieved successfully
          schema:
            $ref: '#/definitions/spider.VersionInfoResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Get Version Information
      tags:
      - '[Version]'
  /vm:
    get:
      consumes:
      - application/json
      description: Retrieve a list of Virtual Machines (VMs) associated with a specific
        connection.
      operationId: list-vm
      parameters:
      - description: The name of the Connection to list VMs for
        in: query
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of VMs
          schema:
            $ref: '#/definitions/spider.VMListResponse'
        "400":
          description: Bad Request, possibly due to invalid query parameter
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List VMs
      tags:
      - '[VM Management]'
    post:
      consumes:
      - application/json
      description: "Start a new Virtual Machine (VM) with specified configurations.
        \U0001F577️ [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#2-%EB%A9%80%ED%8B%B0%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C-vm-%EC%9D%B8%ED%94%84%EB%9D%BC-%EC%9E%90%EC%9B%90-%EC%A0%9C%EC%96%B4multi-cloud-vm-infra-resource-control)],
        [[Snapshot-MyImage,Disk Guide](https://github.com/cloud-barista/cb-spider/wiki/VM-Snapshot,-MyImage-and-Disk-Overview)]"
      operationId: start-vm
      parameters:
      - description: Request body for starting a VM
        in: body
        name: VMStartRequest
        required: true
        schema:
          $ref: '#/definitions/spider.VMStartRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the started VM
          schema:
            $ref: '#/definitions/spider.VMInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Start VM
      tags:
      - '[VM Management]'
  /vm/{Name}:
    delete:
      consumes:
      - application/json
      description: Terminate a specified Virtual Machine (VM).
      operationId: terminate-vm
      parameters:
      - description: Request body for terminating a VM
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      - description: The name of the VM to terminate
        in: path
        name: Name
        required: true
        type: string
      - description: 'Force terminate the VM. ex) true or false(default: false)'
        in: query
        name: force
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the terminate operation
          schema:
            $ref: '#/definitions/spider.VMStatusResponse'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Terminate VM
      tags:
      - '[VM Management]'
    get:
      consumes:
      - application/json
      description: Retrieve details of a specific Virtual Machine (VM).
      operationId: get-vm
      parameters:
      - description: The name of the Connection to get a VM for
        in: query
        name: ConnectionName
        required: true
        type: string
      - description: The name of the VM to retrieve
        in: path
        name: Name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of the VM
          schema:
            $ref: '#/definitions/spider.VMInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Get VM
      tags:
      - '[VM Management]'
  /vmimage:
    get:
      consumes:
      - application/json
      description: "Retrieve a list of Public Images associated with a specific connection.
        \U0001F577️ [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/How-to-get-Image-List-with-REST-API)]"
      operationId: list-image
      parameters:
      - description: The name of the Connection to list Public Images for
        in: query
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of Public Images
          schema:
            $ref: '#/definitions/spider.ImageListResponse'
        "400":
          description: Bad Request, possibly due to invalid query parameter
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List Public Images
      tags:
      - '[Cloud Metadata] Public VM Image'
  /vmimage/{Name}:
    get:
      consumes:
      - application/json
      description: "Retrieve details of a specific Public Image. \U0001F577️ [[User
        Guide](https://github.com/cloud-barista/cb-spider/wiki/How-to-get-Image-List-with-REST-API)]"
      operationId: get-image
      parameters:
      - description: The name of the Connection to get a specific Public Image for
        in: query
        name: ConnectionName
        required: true
        type: string
      - description: The name of the Public Image to retrieve
        in: path
        name: Name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of the Public Image
          schema:
            $ref: '#/definitions/spider.ImageInfo'
        "400":
          description: Bad Request, possibly due to invalid query parameter
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Get Public Image
      tags:
      - '[Cloud Metadata] Public VM Image'
  /vmorgspec:
    get:
      consumes:
      - application/json
      description: Retrieve a list of Original VM Specs associated with a specific
        connection. <br> The response structure may vary depending on the request
        ConnectionName.
      operationId: list-org-vm-spec
      parameters:
      - description: The name of the Connection to list Original VM specs for
        in: query
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Dynamic JSON structure representing the list of Original VM
            Specs
          schema:
            $ref: '#/definitions/spider.OriginalVMSpecListResponse'
        "400":
          description: Bad Request, possibly due to invalid query parameter
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List Original VM Specs
      tags:
      - '[Cloud Metadata] VM Spec'
  /vmorgspec/{Name}:
    get:
      consumes:
      - application/json
      description: Retrieve details of a specific Original VM Spec.
      operationId: get-org-vm-spec
      parameters:
      - description: The name of the Connection to get a specific Original VM spec
          for
        in: query
        name: ConnectionName
        required: true
        type: string
      - description: The name of the VM spec to retrieve
        in: path
        name: Name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of the Original VM Spec
          schema:
            $ref: '#/definitions/spider.OriginalVMSpecListResponse'
        "400":
          description: Bad Request, possibly due to invalid query parameter
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Get Original VM Spec
      tags:
      - '[Cloud Metadata] VM Spec'
  /vmspec:
    get:
      consumes:
      - application/json
      description: "Retrieve a list of VM specs associated with a specific connection.
        \U0001F577️ [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#2-vm-spec-%EC%A0%95%EB%B3%B4-%EC%A0%9C%EA%B3%B5)]"
      operationId: list-vm-spec
      parameters:
      - description: The name of the Connection to list VM specs for
        in: query
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of VM specs
          schema:
            $ref: '#/definitions/spider.VMSpecListResponse'
        "400":
          description: Bad Request, possibly due to invalid query parameter
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List VM Specs
      tags:
      - '[Cloud Metadata] VM Spec'
  /vmspec/{Name}:
    get:
      consumes:
      - application/json
      description: "Retrieve details of a specific VM spec. \U0001F577️ [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#2-vm-spec-%EC%A0%95%EB%B3%B4-%EC%A0%9C%EA%B3%B5)]"
      operationId: get-vm-spec
      parameters:
      - description: The name of the Connection to get a specific VM spec for
        in: query
        name: ConnectionName
        required: true
        type: string
      - description: The name of the VM spec to retrieve
        in: path
        name: Name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of the VM spec
          schema:
            $ref: '#/definitions/spider.VMSpecInfo'
        "400":
          description: Bad Request, possibly due to invalid query parameter
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Get VM Spec
      tags:
      - '[Cloud Metadata] VM Spec'
  /vmstatus:
    get:
      consumes:
      - application/json
      description: Retrieve a list of statuses for Virtual Machines (VMs) associated
        with a specific connection.
      operationId: list-vm-status
      parameters:
      - description: The name of the Connection to list VM statuses for
        in: query
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of VM statuses
          schema:
            $ref: '#/definitions/spider.VMListStatusResponse'
        "400":
          description: Bad Request, possibly due to invalid query parameter
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List VM Statuses
      tags:
      - '[VM Management]'
  /vmstatus/{Name}:
    get:
      consumes:
      - application/json
      description: Retrieve the status of a specific Virtual Machine (VM).
      operationId: get-vm-status
      parameters:
      - description: The name of the Connection to get a VM status for
        in: query
        name: ConnectionName
        required: true
        type: string
      - description: The name of the VM to retrieve the status of
        in: path
        name: Name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of the VM status
          schema:
            $ref: '#/definitions/spider.VMStatusResponse'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Get VM Status
      tags:
      - '[VM Management]'
  /vpc:
    get:
      consumes:
      - application/json
      description: Retrieve a list of Virtual Private Clouds (VPCs) associated with
        a specific connection.
      operationId: list-vpc
      parameters:
      - description: The name of the Connection to list VPCs for
        in: query
        name: ConnectionName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of VPCs
          schema:
            $ref: '#/definitions/spider.VPCListResponse'
        "400":
          description: Bad Request, possibly due to invalid query parameter
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: List VPCs
      tags:
      - '[VPC Management]'
    post:
      consumes:
      - application/json
      description: "Create a new Virtual Private Cloud (VPC) with specified subnet
        configurations. \U0001F577️ [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#3-vpcsubnet-%EC%83%9D%EC%84%B1-%EB%B0%8F-%EC%A0%9C%EC%96%B4)]"
      operationId: create-vpc
      parameters:
      - description: Request body for creating a VPC
        in: body
        name: VPCCreateRequest
        required: true
        schema:
          $ref: '#/definitions/spider.VPCCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the created VPC
          schema:
            $ref: '#/definitions/spider.VPCInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Create VPC
      tags:
      - '[VPC Management]'
  /vpc/{Name}:
    delete:
      consumes:
      - application/json
      description: Delete a specified Virtual Private Cloud (VPC).
      operationId: delete-vpc
      parameters:
      - description: Request body for deleting a VPC
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      - description: The name of the VPC to delete
        in: path
        name: Name
        required: true
        type: string
      - description: 'Force delete the VPC. ex) true or false(default: false)'
        in: query
        name: force
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Result of the delete operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Delete VPC
      tags:
      - '[VPC Management]'
    get:
      consumes:
      - application/json
      description: Retrieve details of a specific Virtual Private Cloud (VPC).
      operationId: get-vpc
      parameters:
      - description: The name of the Connection to get a VPC for
        in: query
        name: ConnectionName
        required: true
        type: string
      - description: The name of the VPC to retrieve
        in: path
        name: Name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of the VPC
          schema:
            $ref: '#/definitions/spider.VPCInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Get VPC
      tags:
      - '[VPC Management]'
  /vpc/{VPCName}/cspsubnet/{Id}:
    delete:
      consumes:
      - application/json
      description: Remove an existing CSP Subnet from a VPC.
      operationId: remove-csp-subnet
      parameters:
      - description: The name of the VPC
        in: path
        name: VPCName
        required: true
        type: string
      - description: The CSP Subnet ID to remove
        in: path
        name: Id
        required: true
        type: string
      - description: Request body for removing a CSP Subnet
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Result of the remove operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Remove CSP Subnet
      tags:
      - '[VPC Management]'
  /vpc/{VPCName}/subnet:
    post:
      consumes:
      - application/json
      description: Add a new Subnet to an existing VPC.
      operationId: add-subnet
      parameters:
      - description: The name of the VPC to add the Subnet to
        in: path
        name: VPCName
        required: true
        type: string
      - description: Request body for adding a Subnet
        in: body
        name: SubnetAddRequest
        required: true
        schema:
          $ref: '#/definitions/spider.SubnetAddRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Details of the VPC including the added Subnet
          schema:
            $ref: '#/definitions/spider.VPCInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Add Subnet
      tags:
      - '[VPC Management]'
  /vpc/{VPCName}/subnet/{SubnetName}:
    delete:
      consumes:
      - application/json
      description: Remove an existing Subnet from a VPC.
      operationId: remove-subnet
      parameters:
      - description: The name of the VPC
        in: path
        name: VPCName
        required: true
        type: string
      - description: The name of the Subnet to remove
        in: path
        name: SubnetName
        required: true
        type: string
      - description: 'Force delete the VPC. ex) true or false(default: false)'
        in: query
        name: force
        type: string
      - description: Request body for removing a Subnet
        in: body
        name: ConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/spider.ConnectionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Result of the remove operation
          schema:
            $ref: '#/definitions/spider.BooleanInfo'
        "400":
          description: Bad Request, possibly due to invalid JSON structure or missing
            fields
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Remove Subnet
      tags:
      - '[VPC Management]'
    get:
      consumes:
      - application/json
      description: Retrieve a specific Subnet from a VPC.
      operationId: get-subnet
      parameters:
      - description: The name of the Connection to get a Subnet for
        in: query
        name: ConnectionName
        required: true
        type: string
      - description: The name of the VPC
        in: path
        name: VPCName
        required: true
        type: string
      - description: The name of the Subnet to retrieve
        in: path
        name: SubnetName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Details of the requested Subnet
          schema:
            $ref: '#/definitions/spider.SubnetInfo'
        "400":
          description: Bad Request, possibly due to invalid parameters
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "404":
          description: Resource Not Found
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/spider.SimpleMsg'
      summary: Get Subnet
      tags:
      - '[VPC Management]'
schemes:
- http
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
