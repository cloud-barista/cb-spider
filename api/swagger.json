{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "**üï∑Ô∏è [User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages)**  **üï∑Ô∏è [API Guide](https://github.com/cloud-barista/cb-spider/wiki/REST-API-Examples)**",
        "title": "CB-Spider REST API",
        "contact": {
            "name": "API Support",
            "url": "http://cloud-barista.github.io",
            "email": "contact-to-cloud-barista@googlegroups.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "latest"
    },
    "host": "localhost:1024",
    "basePath": "/spider",
    "paths": {
        "/allcluster": {
            "get": {
                "description": "Retrieve a comprehensive list of all Clusters associated with a specific connection, \u003cbr\u003e including those mapped between CB-Spider and the CSP, \u003cbr\u003e only registered in CB-Spider's metadata, \u003cbr\u003e and only existing in the CSP.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cluster Management]"
                ],
                "summary": "List All Clusters in a Connection",
                "operationId": "list-all-cluster",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection to list Clusters for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all Clusters within the specified connection, including clusters in CB-Spider only, CSP only, and mapped between both.",
                        "schema": {
                            "$ref": "#/definitions/spider.AllResourceListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/allclusterinfo": {
            "get": {
                "description": "Retrieve a list of all Cluster information associated with a specific connection.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cluster Management]"
                ],
                "summary": "List All Cluster Info",
                "operationId": "list-all-cluster-info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection to list Cluster information for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all Cluster information within the specified connection",
                        "schema": {
                            "$ref": "#/definitions/spider.AllResourceInfoListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid query parameter",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/alldisk": {
            "get": {
                "description": "Retrieve a comprehensive list of all Disks associated with a specific connection, \u003cbr\u003e including those mapped between CB-Spider and the CSP, \u003cbr\u003e only registered in CB-Spider's metadata, \u003cbr\u003e and only existing in the CSP.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Disk Management]"
                ],
                "summary": "List All Disks in a Connection",
                "operationId": "list-all-disk",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection to list Disks for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all Disks within the specified connection, including Disks in CB-Spider only, CSP only, and mapped between both.",
                        "schema": {
                            "$ref": "#/definitions/spider.AllResourceListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/alldiskinfo": {
            "get": {
                "description": "Retrieve a list of all Disk information associated with all connections.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Disk Management]"
                ],
                "summary": "List All Disk Info",
                "operationId": "list-all-disk-info",
                "responses": {
                    "200": {
                        "description": "List of all Disk information across all connections",
                        "schema": {
                            "$ref": "#/definitions/spider.AllResourceListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/allkeypair": {
            "get": {
                "description": "Retrieve a comprehensive list of all KeyPairs associated with a specific connection, \u003cbr\u003e including those mapped between CB-Spider and the CSP, \u003cbr\u003e only registered in CB-Spider's metadata, \u003cbr\u003e and only existing in the CSP.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[KeyPair Management]"
                ],
                "summary": "List All KeyPairs in a Connection",
                "operationId": "list-all-keypair",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection to list KeyPairs for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all KeyPairs within the specified connection, including KeyPairs in CB-Spider only, CSP only, and mapped between both.",
                        "schema": {
                            "$ref": "#/definitions/spider.AllResourceListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid query parameter",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/allkeypairinfo": {
            "get": {
                "description": "Retrieve a list of KeyPair information associated with all connections.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[KeyPair Management]"
                ],
                "summary": "List All KeyPair Info",
                "operationId": "list-all-keypair-info",
                "responses": {
                    "200": {
                        "description": "List of KeyPair information associated with all connections",
                        "schema": {
                            "$ref": "#/definitions/spider.AllResourceInfoListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/allmyimage": {
            "get": {
                "description": "Retrieve a comprehensive list of all MyImages associated with a specific connection, \u003cbr\u003e including those mapped between CB-Spider and the CSP, \u003cbr\u003e only registered in CB-Spider's metadata, \u003cbr\u003e and only existing in the CSP.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[MyImage Management]"
                ],
                "summary": "List All MyImages in a Connection",
                "operationId": "list-all-myimage",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection to list MyImages for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all MyImages within the specified connection, including MyImages in CB-Spider only, CSP only, and mapped between both.",
                        "schema": {
                            "$ref": "#/definitions/spider.AllResourceListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/allmyimageinfo": {
            "get": {
                "description": "Retrieve a comprehensive list of all MyImage information associated with a specific connection, \u003cbr\u003e including those mapped between CB-Spider and the CSP, \u003cbr\u003e only registered in CB-Spider's metadata, \u003cbr\u003e and only existing in the CSP.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[MyImage Management]"
                ],
                "summary": "List All MyImage Info",
                "operationId": "list-all-myimage-info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection to list MyImage information for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all MyImage information within the specified connection, including MyImage information in CB-Spider only, CSP only, and mapped between both.",
                        "schema": {
                            "$ref": "#/definitions/spider.AllResourceInfoListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/allnlb": {
            "get": {
                "description": "Retrieve a comprehensive list of all Network Load Balancers (NLBs) associated with a specific connection, \u003cbr\u003e including those mapped between CB-Spider and the CSP, \u003cbr\u003e only registered in CB-Spider's metadata, \u003cbr\u003e and only existing in the CSP.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[NLB Management]"
                ],
                "summary": "List All NLBs in a Connection",
                "operationId": "list-all-nlb",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection to list NLBs for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all NLBs within the specified connection, including NLBs in CB-Spider only, CSP only, and mapped between both.",
                        "schema": {
                            "$ref": "#/definitions/spider.AllResourceListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/allnlbinfo": {
            "get": {
                "description": "Retrieve a comprehensive list of all Network Load Balancers (NLBs) associated with a specific connection, \u003cbr\u003e including those mapped between CB-Spider and the CSP, \u003cbr\u003e only registered in CB-Spider's metadata, \u003cbr\u003e and only existing in the CSP.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[NLB Management]"
                ],
                "summary": "List All NLB Info",
                "operationId": "list-all-nlb-info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection to list NLBs for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all NLBs within the specified connection, including NLBs in CB-Spider only, CSP only, and mapped between both.",
                        "schema": {
                            "$ref": "#/definitions/spider.AllResourceInfoListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/allsecuritygroup": {
            "get": {
                "description": "Retrieve a comprehensive list of all Security Groups associated with a specific connection, \u003cbr\u003e including those mapped between CB-Spider and the CSP, \u003cbr\u003e only registered in CB-Spider's metadata, \u003cbr\u003e and only existing in the CSP.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[SecurityGroup Management]"
                ],
                "summary": "List All Security Groups in a Connection",
                "operationId": "list-all-securitygroup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection to list Security Groups for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all Security Groups within the specified connection, including Security Groups in CB-Spider only, CSP only, and mapped between both.",
                        "schema": {
                            "$ref": "#/definitions/spider.AllResourceListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/allsecuritygroupinfo": {
            "get": {
                "description": "Retrieve a list of Security Group information associated with all connections.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[SecurityGroup Management]"
                ],
                "summary": "List All SecurityGroup Info",
                "operationId": "list-all-securitygroup-info",
                "responses": {
                    "200": {
                        "description": "List of all Security Group information",
                        "schema": {
                            "$ref": "#/definitions/spider.AllResourceInfoListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/allvm": {
            "get": {
                "description": "Retrieve a comprehensive list of all Virtual Machines (VMs) associated with a specific connection, \u003cbr\u003e including those mapped between CB-Spider and the CSP, \u003cbr\u003e only registered in CB-Spider's metadata, \u003cbr\u003e and only existing in the CSP.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VM Management]"
                ],
                "summary": "List All VMs in a Connection",
                "operationId": "list-all-vm",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection to list VMs for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all VMs within the specified connection, including VMs in CB-Spider only, CSP only, and mapped between both.",
                        "schema": {
                            "$ref": "#/definitions/spider.AllResourceListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/allvminfo": {
            "get": {
                "description": "Retrieve a list of detailed information on all Virtual Machines (VMs) associated with a specific connection, \u003cbr\u003e including those mapped between CB-Spider and the CSP, \u003cbr\u003e only registered in CB-Spider's metadata, \u003cbr\u003e and only existing in the CSP.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VM Management]"
                ],
                "summary": "List All VM Info",
                "operationId": "list-all-vm-info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection to list VMs for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of detailed information on all VMs within the specified connection, including VMs in CB-Spider only, CSP only, and mapped between both.",
                        "schema": {
                            "$ref": "#/definitions/spider.AllResourceInfoListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/allvpc": {
            "get": {
                "description": "Retrieve a comprehensive list of all Virtual Private Clouds (VPCs) associated with a specific connection, \u003cbr\u003e including those mapped between CB-Spider and the CSP, \u003cbr\u003e only registered in CB-Spider's metadata, \u003cbr\u003e and only existing in the CSP.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VPC Management]"
                ],
                "summary": "List All VPCs in a Connection",
                "operationId": "list-all-vpc",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection to list VPCs for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all VPCs within the specified connection, including VPCs in CB-Spider only, CSP only, and mapped between both.",
                        "schema": {
                            "$ref": "#/definitions/spider.AllResourceListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/allvpcinfo": {
            "get": {
                "description": "Retrieve a comprehensive list of all Virtual Private Clouds (VPCs) associated with a specific connection, \u003cbr\u003e including those mapped between CB-Spider and the CSP, \u003cbr\u003e only registered in CB-Spider's metadata, \u003cbr\u003e and only existing in the CSP.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VPC Management]"
                ],
                "summary": "List All VPCs Info",
                "operationId": "list-all-vpc-info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection to list VPCs for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all VPCs within the specified connection, including VPCs in CB-Spider only, CSP only, and mapped between both.",
                        "schema": {
                            "$ref": "#/definitions/spider.AllResourceInfoListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/anycall": {
            "post": {
                "description": "Execute a custom function (FID) with key-value parameters through AnyCall. üï∑Ô∏è [[Development Guide](https://github.com/cloud-barista/cb-spider/wiki/AnyCall-API-Extension-Guide)]",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[AnyCall Management]"
                ],
                "summary": "Execute AnyCall",
                "operationId": "any-call",
                "parameters": [
                    {
                        "description": "Request body for executing AnyCall",
                        "name": "AnyCallRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.AnyCallRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of the AnyCall operation",
                        "schema": {
                            "$ref": "#/definitions/spider.AnyCallInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/check/tcp": {
            "get": {
                "description": "Verifies whether a given TCP port is open on the specified host.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Utility]"
                ],
                "summary": "Check if a specific TCP port is open",
                "operationId": "check-tcp-port",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The hostname or IP address to check",
                        "name": "HostName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "The TCP port to check",
                        "name": "Port",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message with port status",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/check/udp": {
            "get": {
                "description": "Verifies whether a given UDP port is open on the specified host.\n‚Äª Note: As UDP is connectionless, this check mainly performs a lookup and may not confirm if the server is working.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Utility]"
                ],
                "summary": "Check if a specific UDP port is open",
                "operationId": "check-udp-port",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The hostname or IP address to check",
                        "name": "HostName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "The UDP port to check",
                        "name": "Port",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message with port status",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/cloudos": {
            "get": {
                "description": "Retrieve a list of supported Cloud OS.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cloud Info Management] CloudOS Info"
                ],
                "summary": "List Cloud OS",
                "operationId": "list-cloudos",
                "responses": {
                    "200": {
                        "description": "List of supported Cloud OS",
                        "schema": {
                            "$ref": "#/definitions/spider.ListCloudOSResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/cloudos/metainfo/{CloudOSName}": {
            "get": {
                "description": "Retrieve metadata information for a specific Cloud OS.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cloud Info Management] CloudOS Info"
                ],
                "summary": "Get Cloud OS Meta Info",
                "operationId": "get-cloudos-metainfo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Cloud OS",
                        "name": "CloudOSName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cloud OS Meta Info",
                        "schema": {
                            "$ref": "#/definitions/spider.cim.CloudOSMetaInfo"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/cluster": {
            "get": {
                "description": "Retrieve a list of Clusters associated with a specific connection.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cluster Management]"
                ],
                "summary": "List Clusters",
                "operationId": "list-cluster",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection to list Clusters for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Clusters",
                        "schema": {
                            "$ref": "#/definitions/spider.ClusterListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid query parameter",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new Cluster with specified configurations. üï∑Ô∏è [[Concept Guide](https://github.com/cloud-barista/cb-spider/wiki/Provider-Managed-Kubernetes-and-Driver-API)] \u003cbr\u003e * NodeGroupList is optional, depends on CSP type: \u003cbr\u003e \u0026nbsp;- Type-I (e.g., Tencent, Alibaba): requires separate Node Group addition after Cluster creation. \u003cbr\u003e \u0026nbsp;- Type-II (e.g., Azure, NHN): mandates at least one Node Group during initial Cluster creation.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cluster Management]"
                ],
                "summary": "Create Cluster",
                "operationId": "create-cluster",
                "parameters": [
                    {
                        "description": "Request body for creating a Cluster",
                        "name": "ClusterCreateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.ClusterCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the created Cluster",
                        "schema": {
                            "$ref": "#/definitions/spider.ClusterInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/cluster/{Name}": {
            "get": {
                "description": "Retrieve details of a specific Cluster.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cluster Management]"
                ],
                "summary": "Get Cluster",
                "operationId": "get-cluster",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection to get a Cluster for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The name of the Cluster to retrieve",
                        "name": "Name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the Cluster",
                        "schema": {
                            "$ref": "#/definitions/spider.ClusterInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a specified Cluster.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cluster Management]"
                ],
                "summary": "Delete Cluster",
                "operationId": "delete-cluster",
                "parameters": [
                    {
                        "description": "Request body for deleting a Cluster",
                        "name": "ConnectionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.ConnectionRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "The name of the Cluster to delete",
                        "name": "Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Force delete the Cluster. ex) true or false(default: false)",
                        "name": "force",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of the delete operation",
                        "schema": {
                            "$ref": "#/definitions/spider.BooleanInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/cluster/{Name}/nodegroup": {
            "post": {
                "description": "Add a new Node Group to an existing Cluster.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cluster Management]"
                ],
                "summary": "Add Node Group",
                "operationId": "add-nodegroup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Cluster to add the Node Group to",
                        "name": "Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body for adding a Node Group",
                        "name": "ClusterAddNodeGroupRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.ClusterAddNodeGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the Cluster including the added Node Group",
                        "schema": {
                            "$ref": "#/definitions/spider.ClusterInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/cluster/{Name}/nodegroup/{NodeGroupName}": {
            "delete": {
                "description": "Remove an existing Node Group from a Cluster.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cluster Management]"
                ],
                "summary": "Remove Node Group",
                "operationId": "remove-nodegroup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Cluster to remove the Node Group to",
                        "name": "Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The name of the Node Group to remove",
                        "name": "NodeGroupName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body for removing a Node Group",
                        "name": "ConnectionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.ConnectionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of the remove operation",
                        "schema": {
                            "$ref": "#/definitions/spider.BooleanInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/cluster/{Name}/nodegroup/{NodeGroupName}/autoscalesize": {
            "put": {
                "description": "Change the scaling settings for a Node Group in a Cluster.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cluster Management]"
                ],
                "summary": "Change Node Group Scaling",
                "operationId": "change-nodegroup-scaling",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Cluster to change Node Group Scaling",
                        "name": "Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The name of the Node Group",
                        "name": "NodeGroupName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body for changing Node Group scaling",
                        "name": "ClusterChangeNodeGroupScalingRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.ClusterChangeNodeGroupScalingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the updated Node Group",
                        "schema": {
                            "$ref": "#/definitions/spider.NodeGroupInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/cluster/{Name}/nodegroup/{NodeGroupName}/onautoscaling": {
            "put": {
                "description": "Enable or disable auto scaling for a Node Group in a Cluster.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cluster Management]"
                ],
                "summary": "Set Node Group Auto Scaling",
                "operationId": "set-nodegroup-autoscaling",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Cluster to set Node Group Auto Scaling",
                        "name": "Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The name of the Node Group",
                        "name": "NodeGroupName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body for setting auto scaling for a Node Group",
                        "name": "ClusterSetNodeGroupAutoScalingRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.ClusterSetNodeGroupAutoScalingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of the auto scaling operation",
                        "schema": {
                            "$ref": "#/definitions/spider.BooleanInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/cluster/{Name}/upgrade": {
            "put": {
                "description": "Upgrade a Cluster to a specified version.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cluster Management]"
                ],
                "summary": "Upgrade Cluster",
                "operationId": "upgrade-cluster",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Cluster to upgrade",
                        "name": "Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body for upgrading a Cluster",
                        "name": "ClusterUpgradeRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.ClusterUpgradeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the upgraded Cluster",
                        "schema": {
                            "$ref": "#/definitions/spider.ClusterInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/connectionconfig": {
            "get": {
                "description": "Retrieve a list of registered Connection Configs.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cloud Info Management] Connection Info"
                ],
                "summary": "List Connection Configs",
                "operationId": "list-connection-config",
                "responses": {
                    "200": {
                        "description": "List of Connection Configs",
                        "schema": {
                            "$ref": "#/definitions/spider.ListConnectionConfigResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new Connection Config. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#4-cloud-connection-configuration-%EC%A0%95%EB%B3%B4-%EB%93%B1%EB%A1%9D-%EB%B0%8F-%EA%B4%80%EB%A6%AC)]",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cloud Info Management] Connection Info"
                ],
                "summary": "Create Connection Config",
                "operationId": "create-connection-config",
                "parameters": [
                    {
                        "description": "Request body for creating a Connection Config",
                        "name": "ConnectionConfigInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.cim.ConnectionConfigInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the created Connection Config",
                        "schema": {
                            "$ref": "#/definitions/spider.cim.ConnectionConfigInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/connectionconfig/{ConfigName}": {
            "get": {
                "description": "Retrieve details of a specific Connection Config.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cloud Info Management] Connection Info"
                ],
                "summary": "Get Connection Config",
                "operationId": "get-connection-config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection Config",
                        "name": "ConfigName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the Connection Config",
                        "schema": {
                            "$ref": "#/definitions/spider.cim.ConnectionConfigInfo"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a specific Connection Config.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cloud Info Management] Connection Info"
                ],
                "summary": "Delete Connection Config",
                "operationId": "delete-connection-config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection Config",
                        "name": "ConfigName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of the delete operation",
                        "schema": {
                            "$ref": "#/definitions/spider.BooleanInfo"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/controlvm/{Name}": {
            "put": {
                "description": "Control the state of a Virtual Machine (VM) such as suspend, resume, or reboot.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VM Management]"
                ],
                "summary": "Control VM",
                "operationId": "control-vm",
                "parameters": [
                    {
                        "description": "Request body for controlling a VM",
                        "name": "ConnectionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.ConnectionRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "The name of the VM to control",
                        "name": "Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The action to perform on the VM (suspend, resume, reboot)",
                        "name": "action",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of the control operation",
                        "schema": {
                            "$ref": "#/definitions/spider.VMStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/countcluster": {
            "get": {
                "description": "Get the total number of Clusters across all connections.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cluster Management]"
                ],
                "summary": "Count All Clusters",
                "operationId": "count-all-cluster",
                "responses": {
                    "200": {
                        "description": "Total count of Clusters",
                        "schema": {
                            "$ref": "#/definitions/spider.CountResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/countcluster/{ConnectionName}": {
            "get": {
                "description": "Get the total number of Clusters for a specific connection.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cluster Management]"
                ],
                "summary": "Count Clusters by Connection",
                "operationId": "count-cluster-by-connection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection",
                        "name": "ConnectionName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Total count of Clusters for the connection",
                        "schema": {
                            "$ref": "#/definitions/spider.CountResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/countconnectionconfig": {
            "get": {
                "description": "Get the total number of connections.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cloud Info Management] Connection Info"
                ],
                "summary": "Count All Connections",
                "operationId": "count-all-connection",
                "responses": {
                    "200": {
                        "description": "Total count of connections",
                        "schema": {
                            "$ref": "#/definitions/spider.CountResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/countconnectionconfig/{ProviderName}": {
            "get": {
                "description": "Get the total number of connections for a specific provider.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cloud Info Management] Connection Info"
                ],
                "summary": "Count Connections by Provider",
                "operationId": "count-connection-by-provider",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the provider",
                        "name": "ProviderName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Total count of connections for the provider",
                        "schema": {
                            "$ref": "#/definitions/spider.CountResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/countdisk": {
            "get": {
                "description": "Get the total number of Disks across all connections.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Disk Management]"
                ],
                "summary": "Count All Disks",
                "operationId": "count-all-disk",
                "responses": {
                    "200": {
                        "description": "Total count of Disks",
                        "schema": {
                            "$ref": "#/definitions/spider.CountResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/countdisk/{ConnectionName}": {
            "get": {
                "description": "Get the total number of Disks for a specific connection.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Disk Management]"
                ],
                "summary": "Count Disks by Connection",
                "operationId": "count-disk-by-connection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection",
                        "name": "ConnectionName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Total count of Disks for the connection",
                        "schema": {
                            "$ref": "#/definitions/spider.CountResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/countkeypair": {
            "get": {
                "description": "Get the total number of KeyPairs across all connections.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[KeyPair Management]"
                ],
                "summary": "Count All KeyPairs",
                "operationId": "count-all-keypair",
                "responses": {
                    "200": {
                        "description": "Total count of KeyPairs",
                        "schema": {
                            "$ref": "#/definitions/spider.CountResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/countkeypair/{ConnectionName}": {
            "get": {
                "description": "Get the total number of KeyPairs for a specific connection.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[KeyPair Management]"
                ],
                "summary": "Count KeyPairs by Connection",
                "operationId": "count-keypair-by-connection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection",
                        "name": "ConnectionName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Total count of KeyPairs for the connection",
                        "schema": {
                            "$ref": "#/definitions/spider.CountResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/countmyimage": {
            "get": {
                "description": "Get the total number of MyImages across all connections.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[MyImage Management]"
                ],
                "summary": "Count All MyImages",
                "operationId": "count-all-myimage",
                "responses": {
                    "200": {
                        "description": "Total count of MyImages",
                        "schema": {
                            "$ref": "#/definitions/spider.CountResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/countmyimage/{ConnectionName}": {
            "get": {
                "description": "Get the total number of MyImages for a specific connection.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[MyImage Management]"
                ],
                "summary": "Count MyImages by Connection",
                "operationId": "count-myimage-by-connection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection",
                        "name": "ConnectionName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Total count of MyImages for the connection",
                        "schema": {
                            "$ref": "#/definitions/spider.CountResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/countnlb": {
            "get": {
                "description": "Get the total number of Network Load Balancers (NLBs) across all connections.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[NLB Management]"
                ],
                "summary": "Count All NLBs",
                "operationId": "count-all-nlb",
                "responses": {
                    "200": {
                        "description": "Total count of NLBs",
                        "schema": {
                            "$ref": "#/definitions/spider.CountResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/countnlb/{ConnectionName}": {
            "get": {
                "description": "Get the total number of Network Load Balancers (NLBs) for a specific connection.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[NLB Management]"
                ],
                "summary": "Count NLBs by Connection",
                "operationId": "count-nlb-by-connection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection",
                        "name": "ConnectionName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Total count of NLBs for the connection",
                        "schema": {
                            "$ref": "#/definitions/spider.CountResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/countsecuritygroup": {
            "get": {
                "description": "Get the total number of Security Groups across all connections.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[SecurityGroup Management]"
                ],
                "summary": "Count All SecurityGroups",
                "operationId": "count-all-securitygroup",
                "responses": {
                    "200": {
                        "description": "Total count of SecurityGroups",
                        "schema": {
                            "$ref": "#/definitions/spider.CountResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/countsecuritygroup/{ConnectionName}": {
            "get": {
                "description": "Get the total number of Security Groups for a specific connection.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[SecurityGroup Management]"
                ],
                "summary": "Count SecurityGroups by Connection",
                "operationId": "count-securitygroup-by-connection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection",
                        "name": "ConnectionName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Total count of SecurityGroups for the connection",
                        "schema": {
                            "$ref": "#/definitions/spider.CountResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/countsubnet": {
            "get": {
                "description": "Get the total number of Subnets across all connections.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VPC Management]"
                ],
                "summary": "Count All Subnets",
                "operationId": "count-all-subnet",
                "responses": {
                    "200": {
                        "description": "Total count of Subnets",
                        "schema": {
                            "$ref": "#/definitions/spider.CountResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/countsubnet/{ConnectionName}": {
            "get": {
                "description": "Get the total number of Subnets for a specific connection.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VPC Management]"
                ],
                "summary": "Count Subnets by Connection",
                "operationId": "count-subnet-by-connection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection",
                        "name": "ConnectionName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Total count of Subnets for the connection",
                        "schema": {
                            "$ref": "#/definitions/spider.CountResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/countvm": {
            "get": {
                "description": "Get the total number of Virtual Machines (VMs) across all connections.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VM Management]"
                ],
                "summary": "Count All VMs",
                "operationId": "count-all-vm",
                "responses": {
                    "200": {
                        "description": "Total count of VMs",
                        "schema": {
                            "$ref": "#/definitions/spider.CountResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/countvm/{ConnectionName}": {
            "get": {
                "description": "Get the total number of Virtual Machines (VMs) for a specific connection.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VM Management]"
                ],
                "summary": "Count VMs by Connection",
                "operationId": "count-vm-by-connection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection",
                        "name": "ConnectionName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Total count of VMs for the connection",
                        "schema": {
                            "$ref": "#/definitions/spider.CountResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/countvpc": {
            "get": {
                "description": "Get the total number of VPCs across all connections.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VPC Management]"
                ],
                "summary": "Count All VPCs",
                "operationId": "count-all-vpc",
                "responses": {
                    "200": {
                        "description": "Total count of VPCs",
                        "schema": {
                            "$ref": "#/definitions/spider.CountResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/countvpc/{ConnectionName}": {
            "get": {
                "description": "Get the total number of VPCs for a specific connection.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VPC Management]"
                ],
                "summary": "Count VPCs by Connection",
                "operationId": "count-vpc-by-connection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection",
                        "name": "ConnectionName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Total count of VPCs for the connection",
                        "schema": {
                            "$ref": "#/definitions/spider.CountResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/credential": {
            "get": {
                "description": "Retrieve a list of registered Credentials.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cloud Info Management] Credential Info"
                ],
                "summary": "List Credentials",
                "operationId": "list-credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the provider to filter the Credentials by",
                        "name": "provider",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Credentials",
                        "schema": {
                            "$ref": "#/definitions/spider.ListCredentialResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            },
            "post": {
                "description": "Register a new Credential. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#2-cloud-credential-%EC%A0%95%EB%B3%B4-%EB%93%B1%EB%A1%9D-%EB%B0%8F-%EA%B4%80%EB%A6%AC)]",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cloud Info Management] Credential Info"
                ],
                "summary": "Register Credential",
                "operationId": "register-credential",
                "parameters": [
                    {
                        "description": "Request body for registering a Credential",
                        "name": "CredentialInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.cim.CredentialInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the registered Credential",
                        "schema": {
                            "$ref": "#/definitions/spider.cim.CredentialInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/credential/{CredentialName}": {
            "get": {
                "description": "Retrieve details of a specific Credential.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cloud Info Management] Credential Info"
                ],
                "summary": "Get Credential",
                "operationId": "get-credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Credential",
                        "name": "CredentialName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the Credential",
                        "schema": {
                            "$ref": "#/definitions/spider.cim.CredentialInfo"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Unregister a specific Credential.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cloud Info Management] Credential Info"
                ],
                "summary": "Unregister Credential",
                "operationId": "unregister-credential",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Credential",
                        "name": "CredentialName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of the unregister operation",
                        "schema": {
                            "$ref": "#/definitions/spider.BooleanInfo"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/cspcluster/{Id}": {
            "delete": {
                "description": "Delete a specified CSP Cluster.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cluster Management]"
                ],
                "summary": "Delete CSP Cluster",
                "operationId": "delete-csp-cluster",
                "parameters": [
                    {
                        "description": "Request body for deleting a CSP Cluster",
                        "name": "ConnectionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.ConnectionRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "The CSP Cluster ID to delete",
                        "name": "Id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of the delete operation",
                        "schema": {
                            "$ref": "#/definitions/spider.BooleanInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/cspdisk/{Id}": {
            "delete": {
                "description": "Delete a specified CSP Disk.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Disk Management]"
                ],
                "summary": "Delete CSP Disk",
                "operationId": "delete-csp-disk",
                "parameters": [
                    {
                        "description": "Request body for deleting a CSP Disk",
                        "name": "ConnectionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.ConnectionRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "The CSP Disk ID to delete",
                        "name": "Id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of the delete operation",
                        "schema": {
                            "$ref": "#/definitions/spider.BooleanInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/cspkeypair/{Id}": {
            "delete": {
                "description": "Delete a specified CSP KeyPair.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[KeyPair Management]"
                ],
                "summary": "Delete CSP KeyPair",
                "operationId": "delete-csp-keypair",
                "parameters": [
                    {
                        "description": "Request body for deleting a CSP KeyPair",
                        "name": "ConnectionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.ConnectionRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "The CSP KeyPair ID to delete",
                        "name": "Id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of the delete operation",
                        "schema": {
                            "$ref": "#/definitions/spider.BooleanInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/cspmyimage/{Id}": {
            "delete": {
                "description": "Delete a specified CSP MyImage.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[MyImage Management]"
                ],
                "summary": "Delete CSP MyImage",
                "operationId": "delete-csp-myimage",
                "parameters": [
                    {
                        "description": "Request body for deleting a CSP MyImage",
                        "name": "ConnectionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.ConnectionRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "The CSP MyImage ID to delete",
                        "name": "Id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of the delete operation",
                        "schema": {
                            "$ref": "#/definitions/spider.BooleanInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/cspnlb/{Id}": {
            "delete": {
                "description": "Delete a specified CSP Network Load Balancer (NLB).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[NLB Management]"
                ],
                "summary": "Delete CSP NLB",
                "operationId": "delete-csp-nlb",
                "parameters": [
                    {
                        "description": "Request body for deleting a CSP NLB",
                        "name": "ConnectionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.ConnectionRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "The CSP NLB ID to delete",
                        "name": "Id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of the delete operation",
                        "schema": {
                            "$ref": "#/definitions/spider.BooleanInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/cspsecuritygroup/{Id}": {
            "delete": {
                "description": "Delete a specified CSP Security Group.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[SecurityGroup Management]"
                ],
                "summary": "Delete CSP SecurityGroup",
                "operationId": "delete-csp-securitygroup",
                "parameters": [
                    {
                        "description": "Request body for deleting a CSP SecurityGroup",
                        "name": "ConnectionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.ConnectionRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "The CSP SecurityGroup ID to delete",
                        "name": "Id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of the delete operation",
                        "schema": {
                            "$ref": "#/definitions/spider.BooleanInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/cspvm/{Id}": {
            "get": {
                "description": "Retrieve details of a specific CSP Virtual Machine (VM).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VM Management]"
                ],
                "summary": "Get CSP VM",
                "operationId": "get-csp-vm",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection to get a CSP VM for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The CSP VM ID to retrieve",
                        "name": "Id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the CSP VM",
                        "schema": {
                            "$ref": "#/definitions/spider.VMInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Terminate a specified CSP Virtual Machine (VM).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VM Management]"
                ],
                "summary": "Terminate CSP VM",
                "operationId": "terminate-csp-vm",
                "parameters": [
                    {
                        "description": "Request body for terminating a CSP VM",
                        "name": "ConnectionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.ConnectionRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "The CSP VM ID to terminate",
                        "name": "Id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of the terminate operation",
                        "schema": {
                            "$ref": "#/definitions/spider.VMStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/cspvpc/{Id}": {
            "delete": {
                "description": "Delete a specified CSP Virtual Private Cloud (VPC).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VPC Management]"
                ],
                "summary": "Delete CSP VPC",
                "operationId": "delete-csp-vpc",
                "parameters": [
                    {
                        "description": "Request body for deleting a CSP VPC",
                        "name": "ConnectionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.ConnectionRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "The CSP VPC ID to delete",
                        "name": "Id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of the delete operation",
                        "schema": {
                            "$ref": "#/definitions/spider.BooleanInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/destroy": {
            "delete": {
                "description": "Deletes all resources associated with a specific cloud connection. This action is irreversible.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Utility]"
                ],
                "summary": "Destroy all resources in a connection",
                "operationId": "destroy-all-resource",
                "parameters": [
                    {
                        "description": "Request body for deleting all resources",
                        "name": "ConnectionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.ConnectionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the destroyed resources",
                        "schema": {
                            "$ref": "#/definitions/spider.DestroyedInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to missing parameters",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/disk": {
            "get": {
                "description": "Retrieve a list of Disks associated with a specific connection.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Disk Management]"
                ],
                "summary": "List Disks",
                "operationId": "list-disk",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection to list Disks for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Disks",
                        "schema": {
                            "$ref": "#/definitions/spider.DiskListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid query parameter",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new Disk with the specified configuration. üï∑Ô∏è [[Concept Guide](https://github.com/cloud-barista/cb-spider/wiki/Disk-and-Driver-API)], [[Snapshot-MyImage,Disk Guide](https://github.com/cloud-barista/cb-spider/wiki/VM-Snapshot,-MyImage-and-Disk-Overview)]",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Disk Management]"
                ],
                "summary": "Create Disk",
                "operationId": "create-disk",
                "parameters": [
                    {
                        "description": "Request body for creating a Disk",
                        "name": "DiskCreateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.DiskCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the created Disk",
                        "schema": {
                            "$ref": "#/definitions/spider.DiskInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/disk/{Name}": {
            "get": {
                "description": "Retrieve details of a specific Disk.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Disk Management]"
                ],
                "summary": "Get Disk",
                "operationId": "get-disk",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection to get a Disk for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The name of the Disk to retrieve",
                        "name": "Name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the Disk",
                        "schema": {
                            "$ref": "#/definitions/spider.DiskInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a specified Disk.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Disk Management]"
                ],
                "summary": "Delete Disk",
                "operationId": "delete-disk",
                "parameters": [
                    {
                        "description": "Request body for deleting a Disk",
                        "name": "ConnectionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.ConnectionRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "The name of the Disk to delete",
                        "name": "Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Force delete the Disk. ex) true or false(default: false)",
                        "name": "force",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of the delete operation",
                        "schema": {
                            "$ref": "#/definitions/spider.BooleanInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/disk/{Name}/attach": {
            "put": {
                "description": "Attach an existing Disk to a VM.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Disk Management]"
                ],
                "summary": "Attach Disk",
                "operationId": "attach-disk",
                "parameters": [
                    {
                        "description": "Request body for attaching a Disk to a VM",
                        "name": "DiskAttachRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.DiskAttachRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "The name of the Disk to attach",
                        "name": "Name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the attached Disk",
                        "schema": {
                            "$ref": "#/definitions/spider.DiskInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/disk/{Name}/detach": {
            "put": {
                "description": "Detach an existing Disk from a VM.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Disk Management]"
                ],
                "summary": "Detach Disk",
                "operationId": "detach-disk",
                "parameters": [
                    {
                        "description": "Request body for detaching a Disk from a VM",
                        "name": "DiskDetachRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.DiskDetachRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "The name of the Disk to detach",
                        "name": "Name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of the detach operation",
                        "schema": {
                            "$ref": "#/definitions/spider.BooleanInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/disk/{Name}/size": {
            "put": {
                "description": "Increase the size of an existing disk.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Disk Management]"
                ],
                "summary": "Increase Disk Size",
                "operationId": "increase-disk-size",
                "parameters": [
                    {
                        "description": "Request body for increasing the Disk size",
                        "name": "DiskSizeIncreaseRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.DiskSizeIncreaseRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "The name of the Disk to increase the size for",
                        "name": "Name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of the size increase operation",
                        "schema": {
                            "$ref": "#/definitions/spider.BooleanInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/driver": {
            "get": {
                "description": "Retrieve a list of registered Cloud Drivers.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cloud Info Management] Driver Info"
                ],
                "summary": "List Cloud Drivers",
                "operationId": "list-driver",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the provider to filter the Cloud Drivers by",
                        "name": "provider",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Cloud Drivers",
                        "schema": {
                            "$ref": "#/definitions/spider.ListCloudDriverResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            },
            "post": {
                "description": "Register a new Cloud Driver. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#1-cloud-driver-%EC%A0%95%EB%B3%B4-%EB%93%B1%EB%A1%9D-%EB%B0%8F-%EA%B4%80%EB%A6%AC)]",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cloud Info Management] Driver Info"
                ],
                "summary": "Register Cloud Driver",
                "operationId": "register-driver",
                "parameters": [
                    {
                        "description": "Request body for registering a Cloud Driver",
                        "name": "CloudDriverInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.cim.CloudDriverInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the registered Cloud Driver",
                        "schema": {
                            "$ref": "#/definitions/spider.cim.CloudDriverInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/driver/capability": {
            "get": {
                "description": "Retrieve capability information of the cloud driver.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cloud Driver] Capability"
                ],
                "summary": "Get Driver Capability Information",
                "operationId": "get-driver-capability",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of connection to retrieve driver capability for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Driver Capability Information Details",
                        "schema": {
                            "$ref": "#/definitions/spider.DriverCapabilityResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to empty or invalid connection name",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/driver/upload": {
            "post": {
                "description": "Upload a Cloud Driver library file.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "[Cloud Info Management] Driver Info"
                ],
                "summary": "Upload Cloud Driver",
                "operationId": "upload-driver",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Cloud Driver Library File",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File uploaded successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/driver/{DriverName}": {
            "get": {
                "description": "Retrieve details of a specific Cloud Driver.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cloud Info Management] Driver Info"
                ],
                "summary": "Get Cloud Driver",
                "operationId": "get-driver",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Cloud Driver",
                        "name": "DriverName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the Cloud Driver",
                        "schema": {
                            "$ref": "#/definitions/spider.cim.CloudDriverInfo"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Unregister a specific Cloud Driver.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cloud Info Management] Driver Info"
                ],
                "summary": "Unregister Cloud Driver",
                "operationId": "unregister-driver",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Cloud Driver",
                        "name": "DriverName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of the unregister operation",
                        "schema": {
                            "$ref": "#/definitions/spider.BooleanInfo"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/getclusterowner": {
            "post": {
                "description": "Retrieve the owner VPC of a specified Cluster.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cluster Management]"
                ],
                "summary": "Get Cluster Owner VPC",
                "operationId": "get-cluster-owner-vpc",
                "parameters": [
                    {
                        "description": "Request body for getting Cluster Owner VPC",
                        "name": "ClusterGetOwnerVPCRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.ClusterGetOwnerVPCRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the owner VPC",
                        "schema": {
                            "$ref": "#/definitions/spider.IID"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/getnlbowner": {
            "post": {
                "description": "Retrieve the owner VPC of a specified Network Load Balancer (NLB).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[NLB Management]"
                ],
                "summary": "Get NLB Owner VPC",
                "operationId": "get-nlb-owner-vpc",
                "parameters": [
                    {
                        "description": "Request body for getting NLB Owner VPC",
                        "name": "NLBGetOwnerVPCRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.NLBGetOwnerVPCRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the owner VPC",
                        "schema": {
                            "$ref": "#/definitions/spider.IID"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/getsecuritygroupowner": {
            "post": {
                "description": "Retrieve the owner VPC of a specified Security Group.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VPC Management]"
                ],
                "summary": "Get Security Group Owner VPC",
                "operationId": "get-sg-owner-vpc",
                "parameters": [
                    {
                        "description": "Request body for getting Security Group Owner VPC",
                        "name": "VPCGetSecurityGroupOwnerRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.VPCGetSecurityGroupOwnerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the owner VPC",
                        "schema": {
                            "$ref": "#/definitions/spider.IID"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/getvmusingresources": {
            "post": {
                "description": "Retrieve details of a VM using resource ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VM Management]"
                ],
                "summary": "Get VM Using Resource",
                "operationId": "get-vm-using-rs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Connection name for the VM",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CSP ID of the VM",
                        "name": "CSPId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the VM using resource",
                        "schema": {
                            "$ref": "#/definitions/spider.VMUsingResources"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Checks the health of CB-Spider service and its dependencies via /health endpoint. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/Readiness-Check-Guide)]",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Health Check]"
                ],
                "summary": "Perform Health Check",
                "operationId": "health-check-health",
                "responses": {
                    "200": {
                        "description": "Service is ready",
                        "schema": {
                            "$ref": "#/definitions/spider.HealthCheckResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/healthcheck": {
            "get": {
                "description": "Checks the health of CB-Spider service and its dependencies via /healthcheck endpoint. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/Readiness-Check-Guide)]",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Health Check]"
                ],
                "summary": "Perform Health Check",
                "operationId": "health-check-healthcheck",
                "responses": {
                    "200": {
                        "description": "Service is ready",
                        "schema": {
                            "$ref": "#/definitions/spider.HealthCheckResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/keypair": {
            "get": {
                "description": "Retrieve a list of KeyPairs associated with a specific connection.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[KeyPair Management]"
                ],
                "summary": "List KeyPairs",
                "operationId": "list-keypair",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection to list KeyPairs for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of KeyPairs",
                        "schema": {
                            "$ref": "#/definitions/spider.KeyPairListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid query parameter",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new KeyPair with the specified configurations. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#5-vm-keypair-%EC%83%9D%EC%84%B1-%EB%B0%8F-%EC%A0%9C%EC%96%B4)]",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[KeyPair Management]"
                ],
                "summary": "Create KeyPair",
                "operationId": "create-keypair",
                "parameters": [
                    {
                        "description": "Request body for creating a KeyPair",
                        "name": "KeyPairCreateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.KeyPairCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the created KeyPair",
                        "schema": {
                            "$ref": "#/definitions/spider.KeyPairInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/keypair/{Name}": {
            "get": {
                "description": "Retrieve details of a specific KeyPair.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[KeyPair Management]"
                ],
                "summary": "Get KeyPair",
                "operationId": "get-keypair",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection to get a KeyPair for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The name of the KeyPair to retrieve",
                        "name": "Name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the KeyPair",
                        "schema": {
                            "$ref": "#/definitions/spider.KeyPairInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a specified KeyPair.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[KeyPair Management]"
                ],
                "summary": "Delete KeyPair",
                "operationId": "delete-keypair",
                "parameters": [
                    {
                        "description": "Request body for deleting a KeyPair",
                        "name": "ConnectionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.ConnectionRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "The name of the KeyPair to delete",
                        "name": "Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Force delete the KeyPair. ex) true or false(default: false)",
                        "name": "force",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of the delete operation",
                        "schema": {
                            "$ref": "#/definitions/spider.BooleanInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/myimage": {
            "get": {
                "description": "Retrieve a list of MyImages associated with a specific connection.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[MyImage Management]"
                ],
                "summary": "List MyImages",
                "operationId": "list-myimage",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection to list MyImages for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of MyImages",
                        "schema": {
                            "$ref": "#/definitions/spider.MyImageListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid query parameter",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new MyImage snapshot from a specified VM. üï∑Ô∏è [[Concept Guide](https://github.com/cloud-barista/cb-spider/wiki/MyImage-and-Driver-API)], [[Snapshot-MyImage,Disk Guide](https://github.com/cloud-barista/cb-spider/wiki/VM-Snapshot,-MyImage-and-Disk-Overview)]",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[MyImage Management]"
                ],
                "summary": "Snapshot VM",
                "operationId": "create-myimage",
                "parameters": [
                    {
                        "description": "Request body for creating a MyImage snapshot",
                        "name": "MyImageSnapshotRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.MyImageSnapshotRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the created MyImage snapshot",
                        "schema": {
                            "$ref": "#/definitions/spider.MyImageInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/myimage/{Name}": {
            "get": {
                "description": "Retrieve details of a specific MyImage.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[MyImage Management]"
                ],
                "summary": "Get MyImage",
                "operationId": "get-myimage",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection to get a MyImage for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The name of the MyImage to retrieve",
                        "name": "Name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the MyImage",
                        "schema": {
                            "$ref": "#/definitions/spider.MyImageInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a specified MyImage.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[MyImage Management]"
                ],
                "summary": "Delete MyImage",
                "operationId": "delete-myimage",
                "parameters": [
                    {
                        "description": "Request body for deleting a MyImage",
                        "name": "ConnectionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.ConnectionRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "The name of the MyImage to delete",
                        "name": "Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Force delete the MyImage. ex) true or false(default: false)",
                        "name": "force",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of the delete operation",
                        "schema": {
                            "$ref": "#/definitions/spider.BooleanInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/nlb": {
            "get": {
                "description": "Retrieve a list of Network Load Balancers (NLBs) associated with a specific connection.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[NLB Management]"
                ],
                "summary": "List NLBs",
                "operationId": "list-nlb",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection to list NLBs for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of NLBs",
                        "schema": {
                            "$ref": "#/definitions/spider.NLBListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid query parameter",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new Network Load Balancer (NLB) with specified configurations. üï∑Ô∏è [[Concept Guide](https://github.com/cloud-barista/cb-spider/wiki/Network-Load-Balancer-and-Driver-API)]",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[NLB Management]"
                ],
                "summary": "Create NLB",
                "operationId": "create-nlb",
                "parameters": [
                    {
                        "description": "Request body for creating an NLB",
                        "name": "NLBCreateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.NLBCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the created NLB",
                        "schema": {
                            "$ref": "#/definitions/spider.NLBInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/nlb/{Name}": {
            "get": {
                "description": "Retrieve details of a specific Network Load Balancer (NLB).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[NLB Management]"
                ],
                "summary": "Get NLB",
                "operationId": "get-nlb",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection to get an NLB for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The name of the NLB to retrieve",
                        "name": "Name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the NLB",
                        "schema": {
                            "$ref": "#/definitions/spider.NLBInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a specified Network Load Balancer (NLB).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[NLB Management]"
                ],
                "summary": "Delete NLB",
                "operationId": "delete-nlb",
                "parameters": [
                    {
                        "description": "Request body for deleting an NLB",
                        "name": "ConnectionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.ConnectionRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "The name of the NLB to delete",
                        "name": "Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Force delete the NLB. ex) true or false(default: false)",
                        "name": "force",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of the delete operation",
                        "schema": {
                            "$ref": "#/definitions/spider.BooleanInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/nlb/{Name}/health": {
            "get": {
                "description": "Retrieve the health information of the VM group in a specified Network Load Balancer (NLB).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[NLB Management]"
                ],
                "summary": "Get NLB VM Group Health Info",
                "operationId": "get-vmgroup-healthinfo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the NLB to get the VM Group Health Info for",
                        "name": "Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The name of the Connection",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Health information of the VM group",
                        "schema": {
                            "$ref": "#/definitions/spider.NLBGetVMGroupHealthInfoResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid query parameter",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/nlb/{Name}/vms": {
            "post": {
                "description": "Add a new set of VMs to an existing Network Load Balancer (NLB).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[NLB Management]"
                ],
                "summary": "Add VMs to NLB",
                "operationId": "add-nlb-vm",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the NLB to add VMs to",
                        "name": "Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body for adding VMs to an NLB",
                        "name": "NLBAddVMsRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.NLBAddVMsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the NLB including the added VMs",
                        "schema": {
                            "$ref": "#/definitions/spider.NLBInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove a set of VMs from an existing Network Load Balancer (NLB).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[NLB Management]"
                ],
                "summary": "Remove VMs from NLB",
                "operationId": "remove-nlb-vm",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the NLB to remove VMs from",
                        "name": "Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body for removing VMs from an NLB",
                        "name": "NLBRemoveVMsRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.NLBRemoveVMsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of the remove operation",
                        "schema": {
                            "$ref": "#/definitions/spider.BooleanInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/orgregion": {
            "get": {
                "description": "Retrieve a list of Original Regions associated with a specific connection. \u003cbr\u003e The response structure may vary depending on the request ConnectionName.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cloud Metadata] Region/Zone"
                ],
                "summary": "List Original Regions",
                "operationId": "list-org-region",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection to list Original regions for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dynamic JSON structure representing the list of Original Regions",
                        "schema": {
                            "$ref": "#/definitions/spider.OriginalRegionListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid query parameter",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/orgzone": {
            "get": {
                "description": "Retrieve a list of Original Zones associated with a specific connection. \u003cbr\u003e The response structure may vary depending on the request ConnectionName.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cloud Metadata] Region/Zone"
                ],
                "summary": "List Original Zones",
                "operationId": "list-org-zone",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection to list Original zones for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dynamic JSON structure representing the list of Original Zones",
                        "schema": {
                            "$ref": "#/definitions/spider.OriginalZoneListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid query parameter",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "Checks the health of CB-Spider service and its dependencies via /ping endpoint. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/Readiness-Check-Guide)]",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Health Check]"
                ],
                "summary": "Perform Health Check",
                "operationId": "health-check-ping",
                "responses": {
                    "200": {
                        "description": "Service is ready",
                        "schema": {
                            "$ref": "#/definitions/spider.HealthCheckResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/preconfig/orgregion": {
            "get": {
                "description": "Retrieve a list of pre-configured Original Regions based on driver and credential names. \u003cbr\u003e The response structure may vary depending on the request DriverName and CredentialName.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cloud Metadata] Region/Zone"
                ],
                "summary": "List Pre-configured Original Regions",
                "operationId": "list-preconfigured-original-org-region",
                "parameters": [
                    {
                        "type": "string",
                        "description": "example:\"aws-credential\"",
                        "name": "CredentialName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "example:\"aws-driver\"",
                        "name": "DriverName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Pre-configured Original Regions",
                        "schema": {
                            "$ref": "#/definitions/spider.OriginalRegionListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid query parameter",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/preconfig/regionzone": {
            "get": {
                "description": "Retrieve a list of pre-configured Region Zones based on driver and credential names. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/REST-API-Region-Zone-Information-Guide)]",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cloud Metadata] Region/Zone"
                ],
                "summary": "List Pre-configured Region Zones",
                "operationId": "list-region-zone-preconfig",
                "parameters": [
                    {
                        "type": "string",
                        "description": "example:\"aws-credential\"",
                        "name": "CredentialName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "example:\"aws-driver\"",
                        "name": "DriverName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Pre-configured Region Zones",
                        "schema": {
                            "$ref": "#/definitions/spider.RegionZoneListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid query parameter",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/preconfig/regionzone/{Name}": {
            "get": {
                "description": "Retrieve details of a specific pre-configured Region Zone based on driver and credential names. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/REST-API-Region-Zone-Information-Guide)]",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cloud Metadata] Region/Zone"
                ],
                "summary": "Get Pre-configured Region Zone",
                "operationId": "get-region-zone-preconfig",
                "parameters": [
                    {
                        "type": "string",
                        "description": "example:\"aws-credential\"",
                        "name": "CredentialName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "example:\"aws-driver\"",
                        "name": "DriverName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The name of the Region to retrieve",
                        "name": "Name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the Pre-configured Region Zone",
                        "schema": {
                            "$ref": "#/definitions/spider.RegionZoneInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid query parameter",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/priceinfo/{ProductFamily}/{RegionName}": {
            "post": {
                "description": "Retrieve price details of a specific Product Family in a specific Region. üï∑Ô∏è [[Concept Guide](https://github.com/cloud-barista/cb-spider/wiki/Price-Info-and-Cloud-Driver-API)], üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/RestAPI-Multi%E2%80%90Cloud-Price-Information-Guide)] \u003cbr\u003e * example body: {\"connectionName\":\"aws-connection\",\"FilterList\":[{\"Key\":\"instanceType\",\"Value\":\"t2.micro\"}]}",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cloud Metadata] Price Info"
                ],
                "summary": "Get Price Information",
                "operationId": "get-price-info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Product Family to retrieve price information for",
                        "name": "ProductFamily",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The name of the Region to retrieve price information for",
                        "name": "RegionName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The request body containing additional filters for price information",
                        "name": "PriceInfoRequest",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/spider.PriceInfoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Price Information Details",
                        "schema": {
                            "$ref": "#/definitions/spider.PriceInfoResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid query parameter",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/productfamily/{RegionName}": {
            "get": {
                "description": "Retrieve a list of Product Families associated with a specific connection and region. üï∑Ô∏è [[Concept Guide](https://github.com/cloud-barista/cb-spider/wiki/Price-Info-and-Cloud-Driver-API)], üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/RestAPI-Multi%E2%80%90Cloud-Price-Information-Guide)]",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cloud Metadata] Price Info"
                ],
                "summary": "List Product Families",
                "operationId": "list-product-family",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection to list Product Families for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The name of the Region to list Product Families for",
                        "name": "RegionName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Product Families",
                        "schema": {
                            "$ref": "#/definitions/spider.ProductFamilyListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid query parameter",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/readyz": {
            "get": {
                "description": "Checks the health of CB-Spider service and its dependencies via /readyz endpoint. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/Readiness-Check-Guide)]",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Health Check]"
                ],
                "summary": "Perform Health Check",
                "operationId": "health-check-readyz",
                "responses": {
                    "200": {
                        "description": "Service is ready",
                        "schema": {
                            "$ref": "#/definitions/spider.HealthCheckResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/regcluster": {
            "post": {
                "description": "Register a new Cluster with the specified VPC and CSP ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cluster Management]"
                ],
                "summary": "Register Cluster",
                "operationId": "register-cluster",
                "parameters": [
                    {
                        "description": "Request body for registering a Cluster",
                        "name": "ClusterRegisterRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.ClusterRegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the registered Cluster",
                        "schema": {
                            "$ref": "#/definitions/spider.ClusterInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/regcluster/{Name}": {
            "delete": {
                "description": "Unregister a Cluster with the specified name.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cluster Management]"
                ],
                "summary": "Unregister Cluster",
                "operationId": "unregister-cluster",
                "parameters": [
                    {
                        "description": "Request body for unregistering a Cluster",
                        "name": "ConnectionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.ConnectionRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "The name of the Cluster to unregister",
                        "name": "Name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of the unregister operation",
                        "schema": {
                            "$ref": "#/definitions/spider.BooleanInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/regdisk": {
            "post": {
                "description": "Register a new Disk with the specified name, zone, and CSP ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Disk Management]"
                ],
                "summary": "Register Disk",
                "operationId": "register-disk",
                "parameters": [
                    {
                        "description": "Request body for registering a Disk",
                        "name": "DiskRegisterRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.DiskRegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the registered Disk",
                        "schema": {
                            "$ref": "#/definitions/spider.DiskInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/regdisk/{Name}": {
            "delete": {
                "description": "Unregister a Disk with the specified name.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Disk Management]"
                ],
                "summary": "Unregister Disk",
                "operationId": "unregister-disk",
                "parameters": [
                    {
                        "description": "Request body for unregistering a Disk",
                        "name": "ConnectionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.ConnectionRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "The name of the Disk to unregister",
                        "name": "Name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of the unregister operation",
                        "schema": {
                            "$ref": "#/definitions/spider.BooleanInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/region": {
            "get": {
                "description": "Retrieve a list of registered Regions.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cloud Info Management] Region Info"
                ],
                "summary": "List Regions",
                "operationId": "list-region",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the provider to filter the Regions by",
                        "name": "provider",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Regions",
                        "schema": {
                            "$ref": "#/definitions/spider.ListRegionResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            },
            "post": {
                "description": "Register a new Region. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#3-cloud-regionzone-%EC%A0%95%EB%B3%B4-%EB%93%B1%EB%A1%9D-%EB%B0%8F-%EA%B4%80%EB%A6%AC)]",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cloud Info Management] Region Info"
                ],
                "summary": "Register Region",
                "operationId": "register-region",
                "parameters": [
                    {
                        "description": "Request body for registering a Region",
                        "name": "RegionInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.cim.RegionInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the registered Region",
                        "schema": {
                            "$ref": "#/definitions/spider.cim.RegionInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/region/{RegionName}": {
            "get": {
                "description": "Retrieve details of a specific Region.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cloud Info Management] Region Info"
                ],
                "summary": "Get Region",
                "operationId": "get-region",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Region",
                        "name": "RegionName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the Region",
                        "schema": {
                            "$ref": "#/definitions/spider.cim.RegionInfo"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Unregister a specific Region.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cloud Info Management] Region Info"
                ],
                "summary": "Unregister Region",
                "operationId": "unregister-region",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Region",
                        "name": "RegionName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of the unregister operation",
                        "schema": {
                            "$ref": "#/definitions/spider.BooleanInfo"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/regionzone": {
            "get": {
                "description": "Retrieve a list of Region Zones associated with a specific connection. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/REST-API-Region-Zone-Information-Guide)]",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cloud Metadata] Region/Zone"
                ],
                "summary": "List Region Zones",
                "operationId": "list-region-zone",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection to list Region and Zones for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Region Zones",
                        "schema": {
                            "$ref": "#/definitions/spider.RegionZoneListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid query parameter",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/regionzone/{Name}": {
            "get": {
                "description": "Retrieve details of a specific Region Zone. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/REST-API-Region-Zone-Information-Guide)]",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cloud Metadata] Region/Zone"
                ],
                "summary": "Get Region Zone",
                "operationId": "get-region-zone",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection to get a specific Region and Zones for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The name of the Region to retrieve",
                        "name": "Name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the Region Zone",
                        "schema": {
                            "$ref": "#/definitions/spider.RegionZoneInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid query parameter",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/regkeypair": {
            "post": {
                "description": "Register a new KeyPair with the specified name and CSP ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[KeyPair Management]"
                ],
                "summary": "Register KeyPair",
                "operationId": "register-keypair",
                "parameters": [
                    {
                        "description": "Request body for registering a KeyPair",
                        "name": "KeyPairRegisterRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.KeyPairRegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the registered KeyPair",
                        "schema": {
                            "$ref": "#/definitions/spider.KeyPairInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/regkeypair/{Name}": {
            "delete": {
                "description": "Unregister a KeyPair with the specified name.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[KeyPair Management]"
                ],
                "summary": "Unregister KeyPair",
                "operationId": "unregister-keypair",
                "parameters": [
                    {
                        "description": "Request body for unregistering a KeyPair",
                        "name": "ConnectionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.ConnectionRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "The name of the KeyPair to unregister",
                        "name": "Name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of the unregister operation",
                        "schema": {
                            "$ref": "#/definitions/spider.BooleanInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/regmyimage": {
            "post": {
                "description": "Register a new MyImage with the specified name and CSP ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[MyImage Management]"
                ],
                "summary": "Register MyImage",
                "operationId": "register-myimage",
                "parameters": [
                    {
                        "description": "Request body for registering a MyImage",
                        "name": "MyImageRegisterRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.MyImageRegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the registered MyImage",
                        "schema": {
                            "$ref": "#/definitions/spider.MyImageInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/regmyimage/{Name}": {
            "delete": {
                "description": "Unregister a MyImage with the specified name.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[MyImage Management]"
                ],
                "summary": "Unregister MyImage",
                "operationId": "unregister-myimage",
                "parameters": [
                    {
                        "description": "Request body for unregistering a MyImage",
                        "name": "ConnectionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.ConnectionRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "The name of the MyImage to unregister",
                        "name": "Name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of the unregister operation",
                        "schema": {
                            "$ref": "#/definitions/spider.BooleanInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/regnlb": {
            "post": {
                "description": "Register a new Network Load Balancer (NLB) with the specified name and CSP ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[NLB Management]"
                ],
                "summary": "Register NLB",
                "operationId": "register-nlb",
                "parameters": [
                    {
                        "description": "Request body for registering an NLB",
                        "name": "NLBRegisterRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.NLBRegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the registered NLB",
                        "schema": {
                            "$ref": "#/definitions/spider.NLBInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/regnlb/{Name}": {
            "delete": {
                "description": "Unregister a Network Load Balancer (NLB) with the specified name.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[NLB Management]"
                ],
                "summary": "Unregister NLB",
                "operationId": "unregister-nlb",
                "parameters": [
                    {
                        "description": "Request body for unregistering an NLB",
                        "name": "ConnectionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.ConnectionRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "The name of the NLB to unregister",
                        "name": "Name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of the unregister operation",
                        "schema": {
                            "$ref": "#/definitions/spider.BooleanInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/regsecuritygroup": {
            "post": {
                "description": "Register a new Security Group with the specified name and CSP ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[SecurityGroup Management]"
                ],
                "summary": "Register SecurityGroup",
                "operationId": "register-securitygroup",
                "parameters": [
                    {
                        "description": "Request body for registering a SecurityGroup",
                        "name": "SecurityGroupRegisterRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.SecurityGroupRegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the registered SecurityGroup",
                        "schema": {
                            "$ref": "#/definitions/spider.SecurityInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/regsecuritygroup/{Name}": {
            "delete": {
                "description": "Unregister a Security Group with the specified name.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[SecurityGroup Management]"
                ],
                "summary": "Unregister SecurityGroup",
                "operationId": "unregister-securitygroup",
                "parameters": [
                    {
                        "description": "Request body for unregistering a SecurityGroup",
                        "name": "ConnectionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.ConnectionRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "The name of the SecurityGroup to unregister",
                        "name": "Name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of the unregister operation",
                        "schema": {
                            "$ref": "#/definitions/spider.BooleanInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/regsubnet": {
            "post": {
                "description": "Register a new Subnet within a specified VPC.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VPC Management]"
                ],
                "summary": "Register Subnet",
                "operationId": "register-subnet",
                "parameters": [
                    {
                        "description": "Request body for registering a Subnet",
                        "name": "SubnetRegisterRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.SubnetRegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the VPC including the registered Subnet",
                        "schema": {
                            "$ref": "#/definitions/spider.VPCInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/regsubnet/{Name}": {
            "delete": {
                "description": "Unregister a Subnet from a specified VPC.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VPC Management]"
                ],
                "summary": "Unregister Subnet",
                "operationId": "unregister-subnet",
                "parameters": [
                    {
                        "description": "Request body for unregistering a Subnet",
                        "name": "SubnetUnregisterRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.SubnetUnregisterRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "The name of the Subnet to unregister",
                        "name": "Name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of the unregister operation",
                        "schema": {
                            "$ref": "#/definitions/spider.BooleanInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/regvm": {
            "post": {
                "description": "Register a new Virtual Machine (VM) with the specified name and CSP ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VM Management]"
                ],
                "summary": "Register VM",
                "operationId": "register-vm",
                "parameters": [
                    {
                        "description": "Request body for registering a VM",
                        "name": "VMRegisterRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.VMRegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the registered VM",
                        "schema": {
                            "$ref": "#/definitions/spider.VMInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/regvm/{Name}": {
            "delete": {
                "description": "Unregister a Virtual Machine (VM) with the specified name.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VM Management]"
                ],
                "summary": "Unregister VM",
                "operationId": "unregister-vm",
                "parameters": [
                    {
                        "description": "Request body for unregistering a VM",
                        "name": "ConnectionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.ConnectionRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "The name of the VM to unregister",
                        "name": "Name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of the unregister operation",
                        "schema": {
                            "$ref": "#/definitions/spider.BooleanInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/regvpc": {
            "post": {
                "description": "Register a new Virtual Private Cloud (VPC) with the specified name and CSP ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VPC Management]"
                ],
                "summary": "Register VPC",
                "operationId": "register-vpc",
                "parameters": [
                    {
                        "description": "Request body for registering a VPC",
                        "name": "VPCRegisterRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.VPCRegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the registered VPC",
                        "schema": {
                            "$ref": "#/definitions/spider.VPCInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/regvpc/{Name}": {
            "delete": {
                "description": "Unregister a VPC with the specified name.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VPC Management]"
                ],
                "summary": "Unregister VPC",
                "operationId": "unregister-vpc",
                "parameters": [
                    {
                        "description": "Request body for unregistering a VPC",
                        "name": "ConnectionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.ConnectionRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "The name of the VPC to unregister",
                        "name": "Name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of the unregister operation",
                        "schema": {
                            "$ref": "#/definitions/spider.BooleanInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/securitygroup": {
            "get": {
                "description": "Retrieve a list of Security Groups associated with a specific connection.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[SecurityGroup Management]"
                ],
                "summary": "List SecurityGroups",
                "operationId": "list-securitygroup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection to list SecurityGroups for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of SecurityGroups",
                        "schema": {
                            "$ref": "#/definitions/spider.SecurityGroupListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid query parameter",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new Security Group with specified rules and tags. üï∑Ô∏è [[Concept Guide](https://github.com/cloud-barista/cb-spider/wiki/Security-Group-Rules-and-Driver-API)], üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#4-securitygroup-%EC%83%9D%EC%84%B1-%EB%B0%8F-%EC%A0%9C%EC%96%B4)]",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[SecurityGroup Management]"
                ],
                "summary": "Create SecurityGroup",
                "operationId": "create-securitygroup",
                "parameters": [
                    {
                        "description": "Request body for creating a SecurityGroup",
                        "name": "SecurityGroupCreateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.SecurityGroupCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the created SecurityGroup",
                        "schema": {
                            "$ref": "#/definitions/spider.SecurityInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/securitygroup/vpc/{VPCName}": {
            "get": {
                "description": "Retrieve a list of Security Groups associated with a specific VPC in a given cloud connection.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[SecurityGroup Management]"
                ],
                "summary": "List Security Groups in a Specific VPC",
                "operationId": "list-vpc-securitygroup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the VPC to list Security Groups for",
                        "name": "VPCName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The name of the Connection to list Security Groups for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response containing security groups under the key 'securitygroup'",
                        "schema": {
                            "$ref": "#/definitions/spider.SecurityGroupListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to missing parameters",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/securitygroup/{Name}": {
            "get": {
                "description": "Retrieve details of a specific Security Group.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[SecurityGroup Management]"
                ],
                "summary": "Get SecurityGroup",
                "operationId": "get-securitygroup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection to get a SecurityGroup for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The name of the SecurityGroup to retrieve",
                        "name": "Name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the SecurityGroup",
                        "schema": {
                            "$ref": "#/definitions/spider.SecurityInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a specified Security Group.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[SecurityGroup Management]"
                ],
                "summary": "Delete SecurityGroup",
                "operationId": "delete-securitygroup",
                "parameters": [
                    {
                        "description": "Request body for deleting a SecurityGroup",
                        "name": "ConnectionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.ConnectionRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "The name of the SecurityGroup to delete",
                        "name": "Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Force delete the SecurityGroup. ex) true or false(default: false)",
                        "name": "force",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of the delete operation",
                        "schema": {
                            "$ref": "#/definitions/spider.BooleanInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/securitygroup/{SGName}/rules": {
            "post": {
                "description": "Add new rules to a Security Group.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[SecurityGroup Management]"
                ],
                "summary": "Add Rules to SecurityGroup",
                "operationId": "add-rule",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the SecurityGroup to add rules to",
                        "name": "SGName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body for adding rules",
                        "name": "RuleControlRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.RuleControlRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the SecurityGroup after adding rules",
                        "schema": {
                            "$ref": "#/definitions/spider.SecurityInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove existing rules from a Security Group.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[SecurityGroup Management]"
                ],
                "summary": "Remove Rules from SecurityGroup",
                "operationId": "remove-rule",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the SecurityGroup to remove rules from",
                        "name": "SGName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body for removing rules",
                        "name": "RuleControlRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.RuleControlRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of the remove operation",
                        "schema": {
                            "$ref": "#/definitions/spider.BooleanInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/tag": {
            "get": {
                "description": "Retrieve a list of tags for a specified resource.\n‚Äª Resource types: VPC, SUBNET, SG, KEY, VM, NLB, DISK, MYIMAGE, CLUSTER",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Tag Management]"
                ],
                "summary": "List Tags",
                "operationId": "list-tag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Connection Name. ex) aws-connection",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resource Type. ex) VPC",
                        "name": "ResourceType",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resource Name. ex) vpc-01",
                        "name": "ResourceName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of tags",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/spider.KeyValue"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a tag to a specified resource.\n‚Äª Resource types: VPC, SUBNET, SG, KEY, VM, NLB, DISK, MYIMAGE, CLUSTER",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Tag Management]"
                ],
                "summary": "Add Tag",
                "operationId": "add-tag",
                "parameters": [
                    {
                        "description": "Request body for adding a tag",
                        "name": "TagAddRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.TagAddRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the added tag",
                        "schema": {
                            "$ref": "#/definitions/spider.KeyValue"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/tag/{Key}": {
            "get": {
                "description": "Retrieve a specific tag for a specified resource.\n‚Äª Resource types: VPC, SUBNET, SG, KEY, VM, NLB, DISK, MYIMAGE, CLUSTER",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Tag Management]"
                ],
                "summary": "Get Tag",
                "operationId": "get-tag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Connection Name. ex) aws-connection",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resource Type. ex) VPC",
                        "name": "ResourceType",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resource Name. ex) vpc-01",
                        "name": "ResourceName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The key of the tag to retrieve",
                        "name": "Key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the tag",
                        "schema": {
                            "$ref": "#/definitions/spider.KeyValue"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove a specific tag from a specified resource.\n‚Äª Resource types: VPC, SUBNET, SG, KEY, VM, NLB, DISK, MYIMAGE, CLUSTER",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Tag Management]"
                ],
                "summary": "Remove Tag",
                "operationId": "remove-tag",
                "parameters": [
                    {
                        "description": "Request body for removing a specific tag",
                        "name": "TagRemoveRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.TagRemoveRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "The key of the tag to remove",
                        "name": "Key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of the remove operation",
                        "schema": {
                            "$ref": "#/definitions/spider.BooleanInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/version": {
            "get": {
                "description": "Retrieves the version information of CB-Spider.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Version]"
                ],
                "summary": "Get Version Information",
                "operationId": "version-info",
                "responses": {
                    "200": {
                        "description": "Version information retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/spider.VersionInfoResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/vm": {
            "get": {
                "description": "Retrieve a list of Virtual Machines (VMs) associated with a specific connection.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VM Management]"
                ],
                "summary": "List VMs",
                "operationId": "list-vm",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection to list VMs for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of VMs",
                        "schema": {
                            "$ref": "#/definitions/spider.VMListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid query parameter",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            },
            "post": {
                "description": "Start a new Virtual Machine (VM) with specified configurations. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#2-%EB%A9%80%ED%8B%B0%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C-vm-%EC%9D%B8%ED%94%84%EB%9D%BC-%EC%9E%90%EC%9B%90-%EC%A0%9C%EC%96%B4multi-cloud-vm-infra-resource-control)], [[Snapshot-MyImage,Disk Guide](https://github.com/cloud-barista/cb-spider/wiki/VM-Snapshot,-MyImage-and-Disk-Overview)]",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VM Management]"
                ],
                "summary": "Start VM",
                "operationId": "start-vm",
                "parameters": [
                    {
                        "description": "Request body for starting a VM",
                        "name": "VMStartRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.VMStartRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the started VM",
                        "schema": {
                            "$ref": "#/definitions/spider.VMInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/vm/{Name}": {
            "get": {
                "description": "Retrieve details of a specific Virtual Machine (VM).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VM Management]"
                ],
                "summary": "Get VM",
                "operationId": "get-vm",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection to get a VM for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The name of the VM to retrieve",
                        "name": "Name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the VM",
                        "schema": {
                            "$ref": "#/definitions/spider.VMInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Terminate a specified Virtual Machine (VM).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VM Management]"
                ],
                "summary": "Terminate VM",
                "operationId": "terminate-vm",
                "parameters": [
                    {
                        "description": "Request body for terminating a VM",
                        "name": "ConnectionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.ConnectionRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "The name of the VM to terminate",
                        "name": "Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Force terminate the VM. ex) true or false(default: false)",
                        "name": "force",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of the terminate operation",
                        "schema": {
                            "$ref": "#/definitions/spider.VMStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/vmimage": {
            "get": {
                "description": "Retrieve a list of Public Images associated with a specific connection. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/How-to-get-Image-List-with-REST-API)]",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cloud Metadata] Public VM Image"
                ],
                "summary": "List Public Images",
                "operationId": "list-image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection to list Public Images for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Public Images",
                        "schema": {
                            "$ref": "#/definitions/spider.ImageListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid query parameter",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/vmimage/{Name}": {
            "get": {
                "description": "Retrieve details of a specific Public Image. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/How-to-get-Image-List-with-REST-API)]",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cloud Metadata] Public VM Image"
                ],
                "summary": "Get Public Image",
                "operationId": "get-image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection to get a specific Public Image for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The name of the Public Image to retrieve",
                        "name": "Name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the Public Image",
                        "schema": {
                            "$ref": "#/definitions/spider.ImageInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid query parameter",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/vmorgspec": {
            "get": {
                "description": "Retrieve a list of Original VM Specs associated with a specific connection. \u003cbr\u003e The response structure may vary depending on the request ConnectionName.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cloud Metadata] VM Spec"
                ],
                "summary": "List Original VM Specs",
                "operationId": "list-org-vm-spec",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection to list Original VM specs for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dynamic JSON structure representing the list of Original VM Specs",
                        "schema": {
                            "$ref": "#/definitions/spider.OriginalVMSpecListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid query parameter",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/vmorgspec/{Name}": {
            "get": {
                "description": "Retrieve details of a specific Original VM Spec.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cloud Metadata] VM Spec"
                ],
                "summary": "Get Original VM Spec",
                "operationId": "get-org-vm-spec",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection to get a specific Original VM spec for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The name of the VM spec to retrieve",
                        "name": "Name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the Original VM Spec",
                        "schema": {
                            "$ref": "#/definitions/spider.OriginalVMSpecListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid query parameter",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/vmspec": {
            "get": {
                "description": "Retrieve a list of VM specs associated with a specific connection. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#2-vm-spec-%EC%A0%95%EB%B3%B4-%EC%A0%9C%EA%B3%B5)]",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cloud Metadata] VM Spec"
                ],
                "summary": "List VM Specs",
                "operationId": "list-vm-spec",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection to list VM specs for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of VM specs",
                        "schema": {
                            "$ref": "#/definitions/spider.VMSpecListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid query parameter",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/vmspec/{Name}": {
            "get": {
                "description": "Retrieve details of a specific VM spec. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#2-vm-spec-%EC%A0%95%EB%B3%B4-%EC%A0%9C%EA%B3%B5)]",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cloud Metadata] VM Spec"
                ],
                "summary": "Get VM Spec",
                "operationId": "get-vm-spec",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection to get a specific VM spec for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The name of the VM spec to retrieve",
                        "name": "Name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the VM spec",
                        "schema": {
                            "$ref": "#/definitions/spider.VMSpecInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid query parameter",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/vmstatus": {
            "get": {
                "description": "Retrieve a list of statuses for Virtual Machines (VMs) associated with a specific connection.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VM Management]"
                ],
                "summary": "List VM Statuses",
                "operationId": "list-vm-status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection to list VM statuses for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of VM statuses",
                        "schema": {
                            "$ref": "#/definitions/spider.VMListStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid query parameter",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/vmstatus/{Name}": {
            "get": {
                "description": "Retrieve the status of a specific Virtual Machine (VM).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VM Management]"
                ],
                "summary": "Get VM Status",
                "operationId": "get-vm-status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection to get a VM status for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The name of the VM to retrieve the status of",
                        "name": "Name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the VM status",
                        "schema": {
                            "$ref": "#/definitions/spider.VMStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/vpc": {
            "get": {
                "description": "Retrieve a list of Virtual Private Clouds (VPCs) associated with a specific connection.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VPC Management]"
                ],
                "summary": "List VPCs",
                "operationId": "list-vpc",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection to list VPCs for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of VPCs",
                        "schema": {
                            "$ref": "#/definitions/spider.VPCListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid query parameter",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new Virtual Private Cloud (VPC) with specified subnet configurations. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#3-vpcsubnet-%EC%83%9D%EC%84%B1-%EB%B0%8F-%EC%A0%9C%EC%96%B4)]",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VPC Management]"
                ],
                "summary": "Create VPC",
                "operationId": "create-vpc",
                "parameters": [
                    {
                        "description": "Request body for creating a VPC",
                        "name": "VPCCreateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.VPCCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the created VPC",
                        "schema": {
                            "$ref": "#/definitions/spider.VPCInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/vpc/{Name}": {
            "get": {
                "description": "Retrieve details of a specific Virtual Private Cloud (VPC).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VPC Management]"
                ],
                "summary": "Get VPC",
                "operationId": "get-vpc",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection to get a VPC for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The name of the VPC to retrieve",
                        "name": "Name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the VPC",
                        "schema": {
                            "$ref": "#/definitions/spider.VPCInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a specified Virtual Private Cloud (VPC).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VPC Management]"
                ],
                "summary": "Delete VPC",
                "operationId": "delete-vpc",
                "parameters": [
                    {
                        "description": "Request body for deleting a VPC",
                        "name": "ConnectionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.ConnectionRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "The name of the VPC to delete",
                        "name": "Name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Force delete the VPC. ex) true or false(default: false)",
                        "name": "force",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of the delete operation",
                        "schema": {
                            "$ref": "#/definitions/spider.BooleanInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/vpc/{VPCName}/cspsubnet/{Id}": {
            "delete": {
                "description": "Remove an existing CSP Subnet from a VPC.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VPC Management]"
                ],
                "summary": "Remove CSP Subnet",
                "operationId": "remove-csp-subnet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the VPC",
                        "name": "VPCName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The CSP Subnet ID to remove",
                        "name": "Id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body for removing a CSP Subnet",
                        "name": "ConnectionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.ConnectionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of the remove operation",
                        "schema": {
                            "$ref": "#/definitions/spider.BooleanInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/vpc/{VPCName}/subnet": {
            "post": {
                "description": "Add a new Subnet to an existing VPC.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VPC Management]"
                ],
                "summary": "Add Subnet",
                "operationId": "add-subnet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the VPC to add the Subnet to",
                        "name": "VPCName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body for adding a Subnet",
                        "name": "SubnetAddRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.SubnetAddRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the VPC including the added Subnet",
                        "schema": {
                            "$ref": "#/definitions/spider.VPCInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        },
        "/vpc/{VPCName}/subnet/{SubnetName}": {
            "get": {
                "description": "Retrieve a specific Subnet from a VPC.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VPC Management]"
                ],
                "summary": "Get Subnet",
                "operationId": "get-subnet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the Connection to get a Subnet for",
                        "name": "ConnectionName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The name of the VPC",
                        "name": "VPCName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The name of the Subnet to retrieve",
                        "name": "SubnetName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the requested Subnet",
                        "schema": {
                            "$ref": "#/definitions/spider.SubnetInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove an existing Subnet from a VPC.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VPC Management]"
                ],
                "summary": "Remove Subnet",
                "operationId": "remove-subnet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the VPC",
                        "name": "VPCName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The name of the Subnet to remove",
                        "name": "SubnetName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Force delete the VPC. ex) true or false(default: false)",
                        "name": "force",
                        "in": "query"
                    },
                    {
                        "description": "Request body for removing a Subnet",
                        "name": "ConnectionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/spider.ConnectionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result of the remove operation",
                        "schema": {
                            "$ref": "#/definitions/spider.BooleanInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request, possibly due to invalid JSON structure or missing fields",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/spider.SimpleMsg"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "spider.DeletedResourceInfoList": {
            "type": "object",
            "required": [
                "DeletedIIDList",
                "IsAllDeleted",
                "RemainedErrorInfoList",
                "ResourceType"
            ],
            "properties": {
                "DeletedIIDList": {
                    "description": "List of deleted resource IDs",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.IID"
                    }
                },
                "IsAllDeleted": {
                    "description": "true: all deleted, false: some remained",
                    "type": "boolean",
                    "example": true
                },
                "RemainedErrorInfoList": {
                    "description": "List of resources that failed to delete",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.RemainedErrorInfo"
                    }
                },
                "ResourceType": {
                    "description": "Resource type",
                    "type": "string",
                    "example": "VPC"
                }
            }
        },
        "spider.DestroyedInfo": {
            "type": "object",
            "required": [
                "DeletedAllListByResourceType",
                "IsAllDestroyed"
            ],
            "properties": {
                "DeletedAllListByResourceType": {
                    "description": "List of resources deleted by type",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.DeletedResourceInfoList"
                    }
                },
                "IsAllDestroyed": {
                    "description": "true: all destroyed, false: some remained",
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "spider.RemainedErrorInfo": {
            "type": "object",
            "required": [
                "ErrorMsg",
                "Name"
            ],
            "properties": {
                "ErrorMsg": {
                    "description": "Error message for the failed resource",
                    "type": "string",
                    "example": "delete error"
                },
                "Name": {
                    "description": "Resource name that failed to delete",
                    "type": "string",
                    "example": "vpc-01"
                }
            }
        },
        "spider.AccessInfo": {
            "description": "Access Information for a Kubernetes Cluster. \u003cbr\u003e Take some time to provide.",
            "type": "object",
            "properties": {
                "Endpoint": {
                    "type": "string",
                    "example": "https://1.2.3.4"
                },
                "Kubeconfig": {
                    "type": "string",
                    "example": "apiVersion: v1\nclusters:\n- cluster:\n ...."
                }
            }
        },
        "spider.AddonsInfo": {
            "description": "Addons Information for a Kubernetes Cluster",
            "type": "object",
            "properties": {
                "KeyValueList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.KeyValue"
                    }
                }
            }
        },
        "spider.AnyCallInfo": {
            "description": "This structure holds both the input and output parameters for the AnyCall API.",
            "type": "object",
            "required": [
                "FID",
                "IKeyValueList",
                "OKeyValueList"
            ],
            "properties": {
                "FID": {
                    "description": "Function ID, ex: countAll",
                    "type": "string",
                    "example": "countAll"
                },
                "IKeyValueList": {
                    "description": "Input Arguments List, ex:[{\"Key\": \"rsType\", \"Value\": \"vpc\"}]",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.KeyValue"
                    }
                },
                "OKeyValueList": {
                    "description": "Output Results List, ex:[{\"Key\": \"Count\", \"Value\": \"10\"}]\"",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.KeyValue"
                    }
                }
            }
        },
        "spider.CloudPrice": {
            "type": "object",
            "required": [
                "cloudName",
                "priceList"
            ],
            "properties": {
                "cloudName": {
                    "description": "Name of the cloud provider",
                    "type": "string",
                    "example": "AWS"
                },
                "priceList": {
                    "description": "List of prices for different services/products",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.Price"
                    }
                }
            }
        },
        "spider.ClusterInfo": {
            "description": "Kubernetes Cluster Information",
            "type": "object",
            "required": [
                "IId",
                "Network",
                "Status",
                "Version"
            ],
            "properties": {
                "AccessInfo": {
                    "$ref": "#/definitions/spider.AccessInfo"
                },
                "Addons": {
                    "$ref": "#/definitions/spider.AddonsInfo"
                },
                "CreatedTime": {
                    "type": "string",
                    "example": "2024-08-27T10:00:00Z"
                },
                "IId": {
                    "$ref": "#/definitions/spider.IID"
                },
                "KeyValueList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.KeyValue"
                    }
                },
                "Network": {
                    "$ref": "#/definitions/spider.NetworkInfo"
                },
                "NodeGroupList": {
                    "description": "---",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.NodeGroupInfo"
                    }
                },
                "Status": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/spider.ClusterStatus"
                        }
                    ],
                    "example": "Active"
                },
                "TagList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.KeyValue"
                    }
                },
                "Version": {
                    "description": "Kubernetes Version, ex) 1.30",
                    "type": "string",
                    "example": "1.30"
                }
            }
        },
        "spider.ClusterStatus": {
            "type": "string",
            "enum": [
                "Creating",
                "Active",
                "Inactive",
                "Updating",
                "Deleting"
            ],
            "x-enum-varnames": [
                "ClusterCreating",
                "ClusterActive",
                "ClusterInactive",
                "ClusterUpdating",
                "ClusterDeleting"
            ]
        },
        "spider.DiskInfo": {
            "type": "object",
            "required": [
                "CreatedTime",
                "DiskSize",
                "DiskType",
                "IId",
                "Status",
                "Zone"
            ],
            "properties": {
                "CreatedTime": {
                    "description": "The time when the disk was created",
                    "type": "string"
                },
                "DiskSize": {
                    "description": "\"default\", \"50\", \"1000\" (unit is GB)",
                    "type": "string",
                    "example": "100"
                },
                "DiskType": {
                    "description": "\"gp2\", \"Premium SSD\", ...",
                    "type": "string",
                    "example": "gp2"
                },
                "IId": {
                    "description": "{NameId, SystemId}",
                    "allOf": [
                        {
                            "$ref": "#/definitions/spider.IID"
                        }
                    ]
                },
                "KeyValueList": {
                    "description": "Additional key-value pairs associated with this disk",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.KeyValue"
                    }
                },
                "OwnerVM": {
                    "description": "When the Status is DiskAttached",
                    "allOf": [
                        {
                            "$ref": "#/definitions/spider.IID"
                        }
                    ]
                },
                "Status": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/spider.DiskStatus"
                        }
                    ],
                    "example": "Available"
                },
                "TagList": {
                    "description": "A list of tags associated with this disk",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.KeyValue"
                    }
                },
                "Zone": {
                    "description": "Target Zone Name",
                    "type": "string",
                    "example": "us-east-1a"
                }
            }
        },
        "spider.DiskStatus": {
            "type": "string",
            "enum": [
                "Creating",
                "Available",
                "Attached",
                "Deleting",
                "Error"
            ],
            "x-enum-varnames": [
                "DiskCreating",
                "DiskAvailable",
                "DiskAttached",
                "DiskDeleting",
                "DiskError"
            ]
        },
        "spider.GpuInfo": {
            "type": "object",
            "required": [
                "Count"
            ],
            "properties": {
                "Count": {
                    "description": "Number of GPUs, \"-1\" when not applicable",
                    "type": "string",
                    "example": "2"
                },
                "MemSizeGB": {
                    "description": "Memory size of the GPU in GB, \"-1\" when not applicable",
                    "type": "string",
                    "example": "12"
                },
                "Mfr": {
                    "description": "Manufacturer of the GPU, NA when not applicable",
                    "type": "string",
                    "example": "NVIDIA"
                },
                "Model": {
                    "description": "Model of the GPU, NA when not applicable",
                    "type": "string",
                    "example": "Tesla K80"
                },
                "TotalMemSizeGB": {
                    "description": "Total Memory size of the GPU in GB, \"-1\" when not applicable",
                    "type": "string",
                    "example": "24"
                }
            }
        },
        "spider.HealthCheckerInfo": {
            "description": "Health Checker Information for a Network Load Balancer (NLB)",
            "type": "object",
            "required": [
                "Interval",
                "Port",
                "Protocol",
                "Threshold",
                "Timeout"
            ],
            "properties": {
                "CspID": {
                    "type": "string"
                },
                "Interval": {
                    "description": "secs, Interval time between health checks.",
                    "type": "integer",
                    "example": 30
                },
                "KeyValueList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.KeyValue"
                    }
                },
                "Port": {
                    "description": "Listener Port or 1-65535",
                    "type": "string",
                    "example": "80"
                },
                "Protocol": {
                    "description": "TCP|HTTP",
                    "type": "string",
                    "example": "TCP"
                },
                "Threshold": {
                    "description": "num, The number of continuous health checks to change the VM status.",
                    "type": "integer",
                    "example": 3
                },
                "Timeout": {
                    "description": "secs, Waiting time to decide an unhealthy VM when no response.",
                    "type": "integer",
                    "example": 5
                }
            }
        },
        "spider.HealthInfo": {
            "description": "Health Information for a Network Load Balancer (NLB)",
            "type": "object",
            "required": [
                "AllVMs",
                "HealthyVMs",
                "UnHealthyVMs"
            ],
            "properties": {
                "AllVMs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.IID"
                    }
                },
                "HealthyVMs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.IID"
                    }
                },
                "UnHealthyVMs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.IID"
                    }
                }
            }
        },
        "spider.IID": {
            "type": "object",
            "required": [
                "NameId",
                "SystemId"
            ],
            "properties": {
                "NameId": {
                    "type": "string",
                    "example": "user-defined-name"
                },
                "SystemId": {
                    "type": "string",
                    "example": "csp-defined-id"
                }
            }
        },
        "spider.ImageInfo": {
            "type": "object",
            "required": [
                "IId",
                "ImageStatus",
                "Name",
                "OSArchitecture",
                "OSDiskSizeGB",
                "OSDiskType",
                "OSDistribution",
                "OSPlatform"
            ],
            "properties": {
                "IId": {
                    "description": "{NameId, SystemId}, {ami-00aa5a103ddf4509f, ami-00aa5a103ddf4509f}",
                    "allOf": [
                        {
                            "$ref": "#/definitions/spider.IID"
                        }
                    ]
                },
                "ImageStatus": {
                    "description": "Available, Unavailable",
                    "allOf": [
                        {
                            "$ref": "#/definitions/spider.ImageStatus"
                        }
                    ],
                    "example": "Available"
                },
                "KeyValueList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.KeyValue"
                    }
                },
                "Name": {
                    "description": "ami-00aa5a103ddf4509f",
                    "type": "string",
                    "example": "ami-00aa5a103ddf4509f"
                },
                "OSArchitecture": {
                    "description": "arm64, x86_64 etc.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/spider.OSArchitecture"
                        }
                    ],
                    "example": "x86_64"
                },
                "OSDiskSizeGB": {
                    "description": "10, 50, 100 etc.",
                    "type": "string",
                    "example": "50"
                },
                "OSDiskType": {
                    "description": "ebs, HDD, etc.",
                    "type": "string",
                    "example": "HDD"
                },
                "OSDistribution": {
                    "description": "Ubuntu 22.04~, CentOS 8 etc.",
                    "type": "string",
                    "example": "Ubuntu 22.04~"
                },
                "OSPlatform": {
                    "description": "Linux/UNIX, Windows, NA",
                    "allOf": [
                        {
                            "$ref": "#/definitions/spider.OSPlatform"
                        }
                    ],
                    "example": "Linux/UNIX"
                }
            }
        },
        "spider.ImageStatus": {
            "type": "string",
            "enum": [
                "Available",
                "Unavailable",
                "NA"
            ],
            "x-enum-varnames": [
                "ImageAvailable",
                "ImageUnavailable",
                "ImageNA"
            ]
        },
        "spider.ImageType": {
            "type": "string",
            "enum": [
                "PublicImage",
                "MyImage"
            ],
            "x-enum-varnames": [
                "PublicImage",
                "MyImage"
            ]
        },
        "spider.KeyPairInfo": {
            "type": "object",
            "required": [
                "IId"
            ],
            "properties": {
                "Fingerprint": {
                    "description": "Unique identifier for the public key",
                    "type": "string",
                    "example": "3b:16:bf:1b:13:4b:b3:58:97:dc:72:19:45:bb:2c:8f"
                },
                "IId": {
                    "description": "{NameId, SystemId}",
                    "allOf": [
                        {
                            "$ref": "#/definitions/spider.IID"
                        }
                    ]
                },
                "KeyValueList": {
                    "description": "Additional metadata as key-value pairs",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.KeyValue"
                    }
                },
                "PrivateKey": {
                    "description": "Private part of the KeyPair",
                    "type": "string",
                    "example": "-----BEGIN PRIVATE KEY-----..."
                },
                "PublicKey": {
                    "description": "Public part of the KeyPair",
                    "type": "string",
                    "example": "ssh-rsa AAAAB3..."
                },
                "TagList": {
                    "description": "List of tags associated with this KeyPair",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.KeyValue"
                    }
                },
                "VMUserID": {
                    "description": "cb-user or Administrator",
                    "type": "string",
                    "example": "cb-user"
                }
            }
        },
        "spider.KeyValue": {
            "type": "object",
            "required": [
                "Key"
            ],
            "properties": {
                "Key": {
                    "type": "string",
                    "example": "key1"
                },
                "Value": {
                    "type": "string",
                    "example": "value1"
                }
            }
        },
        "spider.ListenerInfo": {
            "description": "Listener Information for a Network Load Balancer (NLB)",
            "type": "object",
            "required": [
                "Port",
                "Protocol"
            ],
            "properties": {
                "CspID": {
                    "type": "string"
                },
                "DNSName": {
                    "type": "string",
                    "example": "nlb.example.com"
                },
                "IP": {
                    "type": "string",
                    "example": "192.168.0.1"
                },
                "KeyValueList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.KeyValue"
                    }
                },
                "Port": {
                    "description": "1-65535",
                    "type": "string",
                    "example": "80"
                },
                "Protocol": {
                    "description": "TCP|UDP",
                    "type": "string",
                    "example": "TCP"
                }
            }
        },
        "spider.Meta": {
            "type": "object",
            "required": [
                "version"
            ],
            "properties": {
                "description": {
                    "description": "Description of the pricing data",
                    "type": "string",
                    "example": "Cloud price data"
                },
                "version": {
                    "description": "Version of the pricing data",
                    "type": "string",
                    "example": "1.0"
                }
            }
        },
        "spider.MyImageInfo": {
            "type": "object",
            "required": [
                "CreatedTime",
                "IId",
                "Status"
            ],
            "properties": {
                "CreatedTime": {
                    "type": "string"
                },
                "IId": {
                    "description": "{NameId, SystemId}",
                    "allOf": [
                        {
                            "$ref": "#/definitions/spider.IID"
                        }
                    ]
                },
                "KeyValueList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.KeyValue"
                    }
                },
                "SourceVM": {
                    "$ref": "#/definitions/spider.IID"
                },
                "Status": {
                    "description": "Available | Unavailable",
                    "allOf": [
                        {
                            "$ref": "#/definitions/spider.MyImageStatus"
                        }
                    ],
                    "example": "Available"
                },
                "TagList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.KeyValue"
                    }
                }
            }
        },
        "spider.MyImageStatus": {
            "type": "string",
            "enum": [
                "Available",
                "Unavailable"
            ],
            "x-enum-varnames": [
                "MyImageAvailable",
                "MyImageUnavailable"
            ]
        },
        "spider.NLBInfo": {
            "description": "Network Load Balancer (NLB) Information",
            "type": "object",
            "required": [
                "CreatedTime",
                "HealthChecker",
                "IId",
                "Listener",
                "Scope",
                "Type",
                "VMGroup",
                "VpcIID"
            ],
            "properties": {
                "CreatedTime": {
                    "type": "string",
                    "example": "2024-08-27T10:00:00Z"
                },
                "HealthChecker": {
                    "$ref": "#/definitions/spider.HealthCheckerInfo"
                },
                "IId": {
                    "$ref": "#/definitions/spider.IID"
                },
                "KeyValueList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.KeyValue"
                    }
                },
                "Listener": {
                    "description": "------ Frontend",
                    "allOf": [
                        {
                            "$ref": "#/definitions/spider.ListenerInfo"
                        }
                    ]
                },
                "Scope": {
                    "description": "REGION(V) | GLOBAL",
                    "type": "string",
                    "example": "REGION"
                },
                "TagList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.KeyValue"
                    }
                },
                "Type": {
                    "description": "PUBLIC(V) | INTERNAL",
                    "type": "string",
                    "example": "PUBLIC"
                },
                "VMGroup": {
                    "description": "------ Backend",
                    "allOf": [
                        {
                            "$ref": "#/definitions/spider.VMGroupInfo"
                        }
                    ]
                },
                "VpcIID": {
                    "description": "Owner VPC IID",
                    "allOf": [
                        {
                            "$ref": "#/definitions/spider.IID"
                        }
                    ]
                }
            }
        },
        "spider.NetworkInfo": {
            "description": "Network Information for a Kubernetes Cluster",
            "type": "object",
            "required": [
                "SecurityGroupIIDs",
                "SubnetIIDs",
                "VpcIID"
            ],
            "properties": {
                "KeyValueList": {
                    "description": "---",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.KeyValue"
                    }
                },
                "SecurityGroupIIDs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.IID"
                    }
                },
                "SubnetIIDs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.IID"
                    }
                },
                "VpcIID": {
                    "$ref": "#/definitions/spider.IID"
                }
            }
        },
        "spider.NodeGroupInfo": {
            "description": "Node Group Information for a Kubernetes Cluster",
            "type": "object",
            "required": [
                "DesiredNodeSize",
                "IId",
                "ImageIID",
                "KeyPairIID",
                "MaxNodeSize",
                "MinNodeSize",
                "OnAutoScaling",
                "Status",
                "VMSpecName"
            ],
            "properties": {
                "DesiredNodeSize": {
                    "type": "integer",
                    "example": 2
                },
                "IId": {
                    "$ref": "#/definitions/spider.IID"
                },
                "ImageIID": {
                    "description": "VM config.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/spider.IID"
                        }
                    ]
                },
                "KeyPairIID": {
                    "$ref": "#/definitions/spider.IID"
                },
                "KeyValueList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.KeyValue"
                    }
                },
                "MaxNodeSize": {
                    "type": "integer",
                    "example": 3
                },
                "MinNodeSize": {
                    "type": "integer",
                    "example": 1
                },
                "Nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.IID"
                    }
                },
                "OnAutoScaling": {
                    "description": "Scaling config.",
                    "type": "boolean",
                    "example": true
                },
                "RootDiskSize": {
                    "description": "in GB",
                    "type": "string",
                    "example": "50"
                },
                "RootDiskType": {
                    "type": "string"
                },
                "Status": {
                    "description": "---",
                    "allOf": [
                        {
                            "$ref": "#/definitions/spider.NodeGroupStatus"
                        }
                    ],
                    "example": "Active"
                },
                "VMSpecName": {
                    "type": "string",
                    "example": "t3.medium"
                }
            }
        },
        "spider.NodeGroupStatus": {
            "type": "string",
            "enum": [
                "Creating",
                "Active",
                "Inactive",
                "Updating",
                "Deleting"
            ],
            "x-enum-varnames": [
                "NodeGroupCreating",
                "NodeGroupActive",
                "NodeGroupInactive",
                "NodeGroupUpdating",
                "NodeGroupDeleting"
            ]
        },
        "spider.OSArchitecture": {
            "type": "string",
            "enum": [
                "arm32",
                "arm64",
                "arm64_mac",
                "x86_32",
                "x86_64",
                "x86_32_mac",
                "x86_64_mac",
                "NA"
            ],
            "x-enum-varnames": [
                "ARM32",
                "ARM64",
                "ARM64_MAC",
                "X86_32",
                "X86_64",
                "X86_32_MAC",
                "X86_64_MAC",
                "ArchitectureNA"
            ]
        },
        "spider.OSPlatform": {
            "type": "string",
            "enum": [
                "Linux/UNIX",
                "Windows",
                "NA"
            ],
            "x-enum-varnames": [
                "Linux_UNIX",
                "Windows",
                "PlatformNA"
            ]
        },
        "spider.Platform": {
            "type": "string",
            "enum": [
                "LINUX/UNIX",
                "WINDOWS"
            ],
            "x-enum-varnames": [
                "LINUX_UNIX",
                "WINDOWS"
            ]
        },
        "spider.Price": {
            "type": "object",
            "required": [
                "priceInfo",
                "productInfo"
            ],
            "properties": {
                "priceInfo": {
                    "description": "Pricing details of the product",
                    "allOf": [
                        {
                            "$ref": "#/definitions/spider.PriceInfo"
                        }
                    ]
                },
                "productInfo": {
                    "description": "Information about the product",
                    "allOf": [
                        {
                            "$ref": "#/definitions/spider.ProductInfo"
                        }
                    ]
                }
            }
        },
        "spider.PriceInfo": {
            "type": "object",
            "required": [
                "cspPriceInfo",
                "pricingPolicies"
            ],
            "properties": {
                "cspPriceInfo": {
                    "description": "Additional price information specific to CSP"
                },
                "pricingPolicies": {
                    "description": "List of pricing policies",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.PricingPolicies"
                    }
                }
            }
        },
        "spider.PricingPolicies": {
            "type": "object",
            "required": [
                "currency",
                "price",
                "pricingId",
                "pricingPolicy",
                "unit"
            ],
            "properties": {
                "currency": {
                    "description": "Currency of the pricing",
                    "type": "string",
                    "example": "USD"
                },
                "description": {
                    "description": "Description of the pricing policy",
                    "type": "string",
                    "example": "Pricing for t2.micro"
                },
                "price": {
                    "description": "Price in the specified currency per unit",
                    "type": "string",
                    "example": "0.02"
                },
                "pricingId": {
                    "description": "ID of the pricing policy",
                    "type": "string",
                    "example": "price-123"
                },
                "pricingPolicy": {
                    "description": "Name of the pricing policy",
                    "type": "string",
                    "example": "On-Demand"
                },
                "pricingPolicyInfo": {
                    "description": "Detail information about the pricing policy",
                    "allOf": [
                        {
                            "$ref": "#/definitions/spider.PricingPolicyInfo"
                        }
                    ]
                },
                "unit": {
                    "description": "Unit of the pricing (e.g., per hour)",
                    "type": "string",
                    "example": "hour"
                }
            }
        },
        "spider.PricingPolicyInfo": {
            "type": "object",
            "properties": {
                "LeaseContractLength": {
                    "description": "Length of the lease contract",
                    "type": "string",
                    "example": "1 year"
                },
                "OfferingClass": {
                    "description": "Offering class (e.g., standard, convertible)",
                    "type": "string",
                    "example": "standard"
                },
                "PurchaseOption": {
                    "description": "Purchase option (e.g., no upfront, partial upfront)",
                    "type": "string",
                    "example": "No Upfront"
                }
            }
        },
        "spider.ProductInfo": {
            "type": "object",
            "required": [
                "cspProductInfo",
                "productId",
                "regionName"
            ],
            "properties": {
                "cspProductInfo": {
                    "description": "Additional product information specific to CSP"
                },
                "description": {
                    "description": "Description of the product",
                    "type": "string",
                    "example": "General purpose instance"
                },
                "gpu": {
                    "description": "Number of GPUs",
                    "type": "string",
                    "example": "1"
                },
                "gpuMemory": {
                    "description": "GPU memory size in MB",
                    "type": "string",
                    "example": "8192"
                },
                "instanceType": {
                    "description": "--------- Compute Instance Info",
                    "type": "string",
                    "example": "t2.micro"
                },
                "maxIopsvolume": {
                    "description": "Maximum IOPS for the volume",
                    "type": "string",
                    "example": "3000"
                },
                "maxThroughputvolume": {
                    "description": "Maximum throughput for the volume in MB/s",
                    "type": "string",
                    "example": "250"
                },
                "maxVolumeSize": {
                    "description": "Maximum volume size in GB",
                    "type": "string",
                    "example": "16384"
                },
                "memory": {
                    "description": "Amount of memory in MB",
                    "type": "string",
                    "example": "4096"
                },
                "operatingSystem": {
                    "description": "Operating system type",
                    "type": "string",
                    "example": "Linux"
                },
                "preInstalledSw": {
                    "description": "Pre-installed software",
                    "type": "string",
                    "example": "None"
                },
                "productId": {
                    "description": "ID of the product",
                    "type": "string",
                    "example": "prod-123"
                },
                "regionName": {
                    "description": "Name of the region",
                    "type": "string",
                    "example": "us-east-1"
                },
                "storage": {
                    "description": "Root-disk storage size in GB",
                    "type": "string",
                    "example": "100"
                },
                "storageMedia": {
                    "description": "Storage media type",
                    "type": "string",
                    "example": "SSD"
                },
                "vcpu": {
                    "description": "Number of vCPUs",
                    "type": "string",
                    "example": "2"
                },
                "volumeType": {
                    "description": "--------- Storage Info  // Data-Disk(AWS:EBS)",
                    "type": "string",
                    "example": "gp2"
                },
                "zoneName": {
                    "description": "Name of the zone",
                    "type": "string",
                    "example": "us-east-1a"
                }
            }
        },
        "spider.RSType": {
            "type": "string",
            "enum": [
                "all",
                "image",
                "vpc",
                "subnet",
                "sg",
                "keypair",
                "vm",
                "nlb",
                "disk",
                "myimage",
                "cluster",
                "nodegroup"
            ],
            "x-enum-varnames": [
                "ALL",
                "IMAGE",
                "VPC",
                "SUBNET",
                "SG",
                "KEY",
                "VM",
                "NLB",
                "DISK",
                "MYIMAGE",
                "CLUSTER",
                "NODEGROUP"
            ]
        },
        "spider.RegionInfo": {
            "type": "object",
            "required": [
                "Region"
            ],
            "properties": {
                "Region": {
                    "type": "string",
                    "example": "us-east-1"
                },
                "Zone": {
                    "type": "string",
                    "example": "us-east-1a"
                }
            }
        },
        "spider.RegionZoneInfo": {
            "type": "object",
            "required": [
                "CSPDisplayName",
                "DisplayName",
                "Name"
            ],
            "properties": {
                "CSPDisplayName": {
                    "type": "string",
                    "example": "US East (N. Virginia)"
                },
                "DisplayName": {
                    "type": "string",
                    "example": "United States, Ohio"
                },
                "KeyValueList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.KeyValue"
                    }
                },
                "Name": {
                    "type": "string",
                    "example": "us-east"
                },
                "ZoneList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.ZoneInfo"
                    }
                }
            }
        },
        "spider.SecurityInfo": {
            "type": "object",
            "required": [
                "IId",
                "SecurityRules",
                "VpcIID"
            ],
            "properties": {
                "IId": {
                    "description": "{NameId, SystemId}",
                    "allOf": [
                        {
                            "$ref": "#/definitions/spider.IID"
                        }
                    ]
                },
                "KeyValueList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.KeyValue"
                    }
                },
                "SecurityRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.SecurityRuleInfo"
                    }
                },
                "TagList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.KeyValue"
                    }
                },
                "VpcIID": {
                    "description": "{NameId, SystemId}",
                    "allOf": [
                        {
                            "$ref": "#/definitions/spider.IID"
                        }
                    ]
                }
            }
        },
        "spider.SecurityRuleInfo": {
            "type": "object",
            "required": [
                "Direction",
                "FromPort",
                "IPProtocol",
                "ToPort"
            ],
            "properties": {
                "CIDR": {
                    "description": "if not specified, defaults to 0.0.0.0/0",
                    "type": "string",
                    "example": "0.0.0.0/0"
                },
                "Direction": {
                    "description": "inbound or outbound",
                    "type": "string",
                    "example": "inbound"
                },
                "FromPort": {
                    "description": "TCP, UDP: 1~65535, ICMP, ALL: -1",
                    "type": "string",
                    "example": "22"
                },
                "IPProtocol": {
                    "description": "TCP, UDP, ICMP, ALL",
                    "type": "string",
                    "example": "TCP"
                },
                "ToPort": {
                    "description": "TCP, UDP: 1~65535, ICMP, ALL: -1",
                    "type": "string",
                    "example": "22"
                }
            }
        },
        "spider.SubnetInfo": {
            "type": "object",
            "required": [
                "IId",
                "IPv4_CIDR",
                "Zone"
            ],
            "properties": {
                "IId": {
                    "description": "{NameId, SystemId}",
                    "allOf": [
                        {
                            "$ref": "#/definitions/spider.IID"
                        }
                    ]
                },
                "IPv4_CIDR": {
                    "type": "string",
                    "example": "10.0.8.0/22"
                },
                "KeyValueList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.KeyValue"
                    }
                },
                "TagList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.KeyValue"
                    }
                },
                "Zone": {
                    "type": "string",
                    "example": "us-east-1a"
                }
            }
        },
        "spider.VCpuInfo": {
            "type": "object",
            "required": [
                "Count"
            ],
            "properties": {
                "ClockGHz": {
                    "description": "Clock speed in GHz, \"-1\" when not applicable",
                    "type": "string",
                    "example": "2.5"
                },
                "Count": {
                    "description": "Number of VCpu, \"-1\" when not applicable",
                    "type": "string",
                    "example": "2"
                }
            }
        },
        "spider.VMGroupInfo": {
            "description": "VM Group Information for a Network Load Balancer (NLB)",
            "type": "object",
            "required": [
                "Port",
                "Protocol",
                "VMs"
            ],
            "properties": {
                "CspID": {
                    "type": "string"
                },
                "KeyValueList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.KeyValue"
                    }
                },
                "Port": {
                    "description": "1-65535",
                    "type": "string",
                    "example": "8080"
                },
                "Protocol": {
                    "description": "TCP|UDP",
                    "type": "string",
                    "example": "TCP"
                },
                "VMs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.IID"
                    }
                }
            }
        },
        "spider.VMInfo": {
            "type": "object",
            "required": [
                "AccessPoint",
                "IId",
                "ImageIId",
                "ImageType",
                "KeyPairIId",
                "NetworkInterface",
                "Platform",
                "PrivateIP",
                "PublicIP",
                "Region",
                "RootDeviceName",
                "RootDiskSize",
                "RootDiskType",
                "SecurityGroupIIds",
                "StartTime",
                "SubnetIID",
                "VMSpecName",
                "VMUserId",
                "VpcIID"
            ],
            "properties": {
                "AccessPoint": {
                    "description": "10.2.3.2:22, 123.456.789.123:432",
                    "type": "string",
                    "example": "1.2.3.4:22"
                },
                "DataDiskIIDs": {
                    "description": "example:\"[{NameId: 'datadisk-01', SystemId: 'datadisk-12345678'}]\"",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.IID"
                    }
                },
                "IId": {
                    "description": "example:\"{NameId: 'vm-01', SystemId: 'i-12345678'}\"",
                    "allOf": [
                        {
                            "$ref": "#/definitions/spider.IID"
                        }
                    ]
                },
                "ImageIId": {
                    "description": "example:\"{NameId: 'ami-12345678', SystemId: 'ami-12345678'}\"",
                    "allOf": [
                        {
                            "$ref": "#/definitions/spider.IID"
                        }
                    ]
                },
                "ImageType": {
                    "description": "PublicImage | MyImage",
                    "allOf": [
                        {
                            "$ref": "#/definitions/spider.ImageType"
                        }
                    ],
                    "example": "PublicImage"
                },
                "KeyPairIId": {
                    "description": "example:\"{NameId: 'keypair-01', SystemId: 'keypair-12345678'}\"",
                    "allOf": [
                        {
                            "$ref": "#/definitions/spider.IID"
                        }
                    ]
                },
                "KeyValueList": {
                    "description": "example:\"[{Key: 'Architecture', Value: 'x86_64'}]\"",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.KeyValue"
                    }
                },
                "NetworkInterface": {
                    "type": "string",
                    "example": "eni-12345678"
                },
                "Platform": {
                    "description": "LINUX | WINDOWS",
                    "allOf": [
                        {
                            "$ref": "#/definitions/spider.Platform"
                        }
                    ],
                    "example": "LINUX"
                },
                "PrivateDNS": {
                    "type": "string",
                    "example": "ip-192-168-1-1.ec2.internal"
                },
                "PrivateIP": {
                    "type": "string",
                    "example": "192.168.1.1"
                },
                "PublicDNS": {
                    "type": "string",
                    "example": "ec2-1-2-3-4.compute-1.amazonaws.com"
                },
                "PublicIP": {
                    "type": "string",
                    "example": "1.2.3.4"
                },
                "Region": {
                    "description": "example:\"{Region: 'us-east-1', Zone: 'us-east-1a'}\"",
                    "allOf": [
                        {
                            "$ref": "#/definitions/spider.RegionInfo"
                        }
                    ]
                },
                "RootDeviceName": {
                    "description": "\"/dev/sda1\", ...",
                    "type": "string",
                    "example": "/dev/sda1"
                },
                "RootDiskSize": {
                    "description": "\"default\", \"50\", \"1000\" (unit is GB)",
                    "type": "string",
                    "example": "50"
                },
                "RootDiskType": {
                    "description": "\"gp2\", \"Premium SSD\", ...",
                    "type": "string",
                    "example": "gp2"
                },
                "SSHAccessPoint": {
                    "description": "Deprecated",
                    "type": "string",
                    "example": "10.2.3.2:22"
                },
                "SecurityGroupIIds": {
                    "description": "example:\"[{NameId: 'sg-01', SystemId: 'sg-12345678'}]\"",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.IID"
                    }
                },
                "StartTime": {
                    "description": "Timezone: based on cloud-barista server location.",
                    "type": "string",
                    "example": "2024-08-27T10:00:00Z"
                },
                "SubnetIID": {
                    "description": "example:\"{NameId: 'subnet-01', SystemId: 'subnet-12345678'}\"",
                    "allOf": [
                        {
                            "$ref": "#/definitions/spider.IID"
                        }
                    ]
                },
                "TagList": {
                    "description": "example:\"[{Key: 'Name', Value: 'MyVM'}]\"",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.KeyValue"
                    }
                },
                "VMBlockDisk": {
                    "description": "Deprecated soon",
                    "type": "string",
                    "example": "/dev/sda2"
                },
                "VMBootDisk": {
                    "description": "Deprecated soon",
                    "type": "string",
                    "example": "/dev/sda1"
                },
                "VMSpecName": {
                    "description": "instance type or flavour, etc... ex) t2.micro or f1.micro",
                    "type": "string",
                    "example": "t2.micro"
                },
                "VMUserId": {
                    "description": "cb-user or Administrator",
                    "type": "string",
                    "example": "cb-user"
                },
                "VMUserPasswd": {
                    "description": "Only for Windows",
                    "type": "string",
                    "example": "password1234"
                },
                "VpcIID": {
                    "description": "example:\"{NameId: 'vpc-01', SystemId: 'vpc-12345678'}\"",
                    "allOf": [
                        {
                            "$ref": "#/definitions/spider.IID"
                        }
                    ]
                }
            }
        },
        "spider.VMSpecInfo": {
            "type": "object",
            "required": [
                "DiskSizeGB",
                "MemSizeMib",
                "Name",
                "Region",
                "VCpu"
            ],
            "properties": {
                "DiskSizeGB": {
                    "description": "Disk size in GB, \"-1\" when not applicable",
                    "type": "string",
                    "example": "8"
                },
                "Gpu": {
                    "description": "GPU details if available",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.GpuInfo"
                    }
                },
                "KeyValueList": {
                    "description": "Additional key-value pairs for the VM spec",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.KeyValue"
                    }
                },
                "MemSizeMib": {
                    "description": "Memory size in MiB",
                    "type": "string",
                    "example": "1024"
                },
                "Name": {
                    "description": "Name of the VM spec",
                    "type": "string",
                    "example": "t2.micro"
                },
                "Region": {
                    "description": "Region where the VM spec is available",
                    "type": "string",
                    "example": "us-east-1"
                },
                "VCpu": {
                    "description": "CPU details of the VM spec",
                    "allOf": [
                        {
                            "$ref": "#/definitions/spider.VCpuInfo"
                        }
                    ]
                }
            }
        },
        "spider.VMStatus": {
            "description": "The status of a Virtual Machine (VM).",
            "type": "string",
            "enum": [
                "Creating",
                "Running",
                "Suspending",
                "Suspended",
                "Resuming",
                "Rebooting",
                "Terminating",
                "Terminated",
                "NotExist",
                "Failed"
            ],
            "x-enum-comments": {
                "Creating": "from launch to running",
                "NotExist": "VM does not exist",
                "Rebooting": "from running to running",
                "Resuming": "from suspended to running",
                "Suspending": "from running to suspended",
                "Terminating": "from running, suspended to terminated"
            },
            "x-enum-varnames": [
                "Creating",
                "Running",
                "Suspending",
                "Suspended",
                "Resuming",
                "Rebooting",
                "Terminating",
                "Terminated",
                "NotExist",
                "Failed"
            ]
        },
        "spider.VMStatusInfo": {
            "type": "object",
            "required": [
                "IId",
                "VmStatus"
            ],
            "properties": {
                "IId": {
                    "description": "{NameId: 'vm-01', SystemId: 'i-12345678'}\"",
                    "allOf": [
                        {
                            "$ref": "#/definitions/spider.IID"
                        }
                    ]
                },
                "VmStatus": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/spider.VMStatus"
                        }
                    ],
                    "example": "Running"
                }
            }
        },
        "spider.VPCInfo": {
            "type": "object",
            "required": [
                "IId",
                "IPv4_CIDR",
                "SubnetInfoList"
            ],
            "properties": {
                "IId": {
                    "description": "{NameId, SystemId}",
                    "allOf": [
                        {
                            "$ref": "#/definitions/spider.IID"
                        }
                    ]
                },
                "IPv4_CIDR": {
                    "type": "string",
                    "example": "10.0.0.0/16"
                },
                "KeyValueList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.KeyValue"
                    }
                },
                "SubnetInfoList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.SubnetInfo"
                    }
                },
                "TagList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.KeyValue"
                    }
                }
            }
        },
        "spider.ZoneInfo": {
            "type": "object",
            "required": [
                "CSPDisplayName",
                "DisplayName",
                "Name",
                "Status"
            ],
            "properties": {
                "CSPDisplayName": {
                    "type": "string",
                    "example": "US East (N. Virginia)"
                },
                "DisplayName": {
                    "type": "string",
                    "example": "United States, Ohio"
                },
                "KeyValueList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.KeyValue"
                    }
                },
                "Name": {
                    "type": "string",
                    "example": "us-east-1a"
                },
                "Status": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/spider.ZoneStatus"
                        }
                    ],
                    "example": "Available"
                }
            }
        },
        "spider.ZoneStatus": {
            "type": "string",
            "enum": [
                "Available",
                "Unavailable",
                "StatusNotSupported"
            ],
            "x-enum-varnames": [
                "ZoneAvailable",
                "ZoneUnavailable",
                "NotSupported"
            ]
        },
        "spider.cim.CloudOSMetaInfo": {
            "description": "Metadata information related to a Cloud OS, including supported regions, credentials, and disk configurations.",
            "type": "object",
            "required": [
                "Credential",
                "CredentialCSP",
                "DefaultRegionToQuery",
                "DiskSize",
                "DiskType",
                "IdMaxLength",
                "Region",
                "RootDiskSize",
                "RootDiskType"
            ],
            "properties": {
                "Credential": {
                    "description": "A list of required credential keys.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "CredentialCSP": {
                    "description": "A list of credentials required by the cloud service provider (CSP).",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "DefaultRegionToQuery": {
                    "description": "Default region to use if none is specified for a query.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "DiskSize": {
                    "description": "Supported additional disk sizes (in GB).",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "DiskType": {
                    "description": "Supported additional disk types.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "IdMaxLength": {
                    "description": "Maximum allowed length for IDs in the cloud provider.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Region": {
                    "description": "A list of supported regions by the Cloud OS.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "RootDiskSize": {
                    "description": "Supported root disk sizes (in GB).",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "RootDiskType": {
                    "description": "Supported root disk types (e.g., gp2, standard).",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "spider.cim.ConnectionConfigInfo": {
            "description": "Information about the connection configuration used to connect to a specific cloud provider.",
            "type": "object",
            "required": [
                "ConfigName",
                "CredentialName",
                "DriverName",
                "ProviderName",
                "RegionName"
            ],
            "properties": {
                "ConfigName": {
                    "description": "The name of the connection configuration, used as a unique identifier.",
                    "type": "string",
                    "example": "config01"
                },
                "CredentialName": {
                    "description": "The name of the credential used for cloud authentication.",
                    "type": "string",
                    "example": "credential01"
                },
                "DriverName": {
                    "description": "The name of the cloud driver associated with this configuration.",
                    "type": "string",
                    "example": "AWS-Test-Driver-V0.5"
                },
                "ProviderName": {
                    "description": "The name of the cloud provider (e.g., AWS, Azure, GCP).",
                    "type": "string",
                    "example": "AWS"
                },
                "RegionName": {
                    "description": "The name of the region for the cloud connection.",
                    "type": "string",
                    "example": "region01"
                }
            }
        },
        "spider.cim.CredentialInfo": {
            "description": "Information about a specific cloud credential used for authentication.",
            "type": "object",
            "required": [
                "CredentialName",
                "KeyValueInfoList",
                "ProviderName"
            ],
            "properties": {
                "CredentialName": {
                    "description": "The name of the credential, used as a unique identifier.",
                    "type": "string",
                    "example": "credential01"
                },
                "KeyValueInfoList": {
                    "description": "A list of key-value pairs, where each entry is a key and its associated value.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.KeyValue"
                    }
                },
                "ProviderName": {
                    "description": "The name of the cloud provider (e.g., AWS, Azure, GCP).",
                    "type": "string",
                    "example": "AWS"
                }
            }
        },
        "spider.cim.CloudDriverInfo": {
            "description": "Information about a specific cloud driver used in the system.",
            "type": "object",
            "required": [
                "DriverLibFileName",
                "DriverName",
                "ProviderName"
            ],
            "properties": {
                "DriverLibFileName": {
                    "description": "The filename of the driver library, already present in the cloud-driver/libs directory.",
                    "type": "string",
                    "example": "aws-test-driver-v0.5.so"
                },
                "DriverName": {
                    "description": "The name of the cloud driver, used as a unique identifier.",
                    "type": "string",
                    "example": "AWS-Test-Driver-V0.5"
                },
                "ProviderName": {
                    "description": "The name of the cloud provider (e.g., AWS, Azure, GCP).",
                    "type": "string",
                    "example": "AWS"
                }
            }
        },
        "spider.cim.RegionInfo": {
            "description": "Information about a specific cloud region and its associated zones.",
            "type": "object",
            "required": [
                "AvailableZoneList",
                "KeyValueInfoList",
                "ProviderName",
                "RegionName"
            ],
            "properties": {
                "AvailableZoneList": {
                    "description": "A list of availability zones within a region.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "KeyValueInfoList": {
                    "description": "A list of key-value pairs, where each entry is a key and its associated value.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.KeyValue"
                    }
                },
                "ProviderName": {
                    "description": "The name of the cloud provider (e.g., AWS, Azure, GCP).",
                    "type": "string",
                    "example": "GCP"
                },
                "RegionName": {
                    "description": "The name of the region, used as a unique identifier.",
                    "type": "string",
                    "example": "region01"
                }
            }
        },
        "spider.AllResourceInfoListResponse": {
            "type": "object",
            "required": [
                "AllListInfo",
                "ResourceType"
            ],
            "properties": {
                "AllListInfo": {
                    "type": "object",
                    "required": [
                        "MappedInfoList",
                        "OnlyCSPInfoList",
                        "OnlySpiderList"
                    ],
                    "properties": {
                        "MappedInfoList": {
                            "type": "array",
                            "items": {}
                        },
                        "OnlyCSPInfoList": {
                            "type": "array",
                            "items": {}
                        },
                        "OnlySpiderList": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/spider.IID"
                            }
                        }
                    }
                },
                "ResourceType": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/spider.RSType"
                        }
                    ],
                    "example": "vpc"
                }
            }
        },
        "spider.AllResourceListResponse": {
            "type": "object",
            "required": [
                "AllList"
            ],
            "properties": {
                "AllList": {
                    "type": "object",
                    "required": [
                        "MappedList",
                        "OnlyCSPList",
                        "OnlySpiderList"
                    ],
                    "properties": {
                        "MappedList": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/spider.IID"
                            }
                        },
                        "OnlyCSPList": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/spider.IID"
                            }
                        },
                        "OnlySpiderList": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/spider.IID"
                            }
                        }
                    }
                }
            }
        },
        "spider.AnyCallRequest": {
            "type": "object",
            "required": [
                "ConnectionName",
                "ReqInfo"
            ],
            "properties": {
                "ConnectionName": {
                    "type": "string",
                    "example": "mock-config01"
                },
                "ReqInfo": {
                    "type": "object",
                    "required": [
                        "FID"
                    ],
                    "properties": {
                        "FID": {
                            "description": "Function ID (FID) to call, ex: countAll",
                            "type": "string",
                            "example": "countAll"
                        },
                        "IKeyValueList": {
                            "description": "Input key-value pairs, ex:[{\"Key\": \"rsType\", \"Value\": \"vpc\"}]",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/spider.KeyValue"
                            }
                        }
                    }
                }
            }
        },
        "spider.BooleanInfo": {
            "type": "object",
            "required": [
                "Result"
            ],
            "properties": {
                "Result": {
                    "description": "true or false",
                    "type": "string",
                    "example": "true"
                }
            }
        },
        "spider.ClusterAddNodeGroupRequest": {
            "type": "object",
            "required": [
                "ConnectionName",
                "ReqInfo"
            ],
            "properties": {
                "ConnectionName": {
                    "type": "string",
                    "example": "aws-connection"
                },
                "IDTransformMode": {
                    "description": "ON: transform CSP ID, OFF: no-transform CSP ID",
                    "type": "string",
                    "example": "ON"
                },
                "ReqInfo": {
                    "$ref": "#/definitions/spider.ClusterNodeGroupRequest"
                }
            }
        },
        "spider.ClusterChangeNodeGroupScalingRequest": {
            "type": "object",
            "required": [
                "ConnectionName",
                "ReqInfo"
            ],
            "properties": {
                "ConnectionName": {
                    "type": "string",
                    "example": "aws-connection"
                },
                "ReqInfo": {
                    "type": "object",
                    "required": [
                        "DesiredNodeSize",
                        "MaxNodeSize",
                        "MinNodeSize"
                    ],
                    "properties": {
                        "DesiredNodeSize": {
                            "type": "string",
                            "example": "3"
                        },
                        "MaxNodeSize": {
                            "type": "string",
                            "example": "5"
                        },
                        "MinNodeSize": {
                            "type": "string",
                            "example": "1"
                        }
                    }
                }
            }
        },
        "spider.ClusterCreateRequest": {
            "type": "object",
            "required": [
                "ConnectionName",
                "ReqInfo"
            ],
            "properties": {
                "ConnectionName": {
                    "type": "string",
                    "example": "aws-connection"
                },
                "IDTransformMode": {
                    "description": "ON: transform CSP ID, OFF: no-transform CSP ID",
                    "type": "string",
                    "example": "ON"
                },
                "ReqInfo": {
                    "type": "object",
                    "required": [
                        "Name",
                        "SecurityGroupNames",
                        "SubnetNames",
                        "VPCName"
                    ],
                    "properties": {
                        "Name": {
                            "type": "string",
                            "example": "cluster-01"
                        },
                        "NodeGroupList": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/spider.ClusterNodeGroupRequest"
                            }
                        },
                        "SecurityGroupNames": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "sg-01",
                                "sg-02"
                            ]
                        },
                        "SubnetNames": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "subnet-01",
                                "subnet-02"
                            ]
                        },
                        "TagList": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/spider.KeyValue"
                            }
                        },
                        "VPCName": {
                            "type": "string",
                            "example": "vpc-01"
                        },
                        "Version": {
                            "description": "Some CSPs may not support or limit versions.",
                            "type": "string",
                            "example": "1.30"
                        }
                    }
                }
            }
        },
        "spider.ClusterGetOwnerVPCRequest": {
            "type": "object",
            "required": [
                "ConnectionName",
                "ReqInfo"
            ],
            "properties": {
                "ConnectionName": {
                    "type": "string",
                    "example": "aws-connection"
                },
                "ReqInfo": {
                    "type": "object",
                    "required": [
                        "CSPId"
                    ],
                    "properties": {
                        "CSPId": {
                            "type": "string",
                            "example": "csp-cluster-1234"
                        }
                    }
                }
            }
        },
        "spider.ClusterListResponse": {
            "type": "object",
            "required": [
                "cluster"
            ],
            "properties": {
                "cluster": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.ClusterInfo"
                    }
                }
            }
        },
        "spider.ClusterNodeGroupRequest": {
            "type": "object",
            "required": [
                "DesiredNodeSize",
                "KeyPairName",
                "MaxNodeSize",
                "MinNodeSize",
                "Name",
                "OnAutoScaling"
            ],
            "properties": {
                "DesiredNodeSize": {
                    "type": "string",
                    "example": "2"
                },
                "ImageName": {
                    "description": "Some CSPs may not support or limit images. [Ref](https://docs.google.com/spreadsheets/d/1mPmfnfmyszYimVzplZMzsqO3WsBmOdes/edit?usp=sharing\u0026ouid=108635813398159139552\u0026rtpof=true\u0026sd=true)",
                    "type": "string"
                },
                "KeyPairName": {
                    "type": "string",
                    "example": "keypair-01"
                },
                "MaxNodeSize": {
                    "type": "string",
                    "example": "3"
                },
                "MinNodeSize": {
                    "type": "string",
                    "example": "1"
                },
                "Name": {
                    "type": "string",
                    "example": "nodegroup-01"
                },
                "OnAutoScaling": {
                    "type": "string",
                    "example": "true"
                },
                "RootDiskSize": {
                    "description": "Some CSPs may not support or limit sizes. [Ref](https://docs.google.com/spreadsheets/d/1mPmfnfmyszYimVzplZMzsqO3WsBmOdes/edit?usp=sharing\u0026ouid=108635813398159139552\u0026rtpof=true\u0026sd=true)",
                    "type": "string"
                },
                "RootDiskType": {
                    "description": "Some CSPs may not support or limit types. [Ref](https://docs.google.com/spreadsheets/d/1mPmfnfmyszYimVzplZMzsqO3WsBmOdes/edit?usp=sharing\u0026ouid=108635813398159139552\u0026rtpof=true\u0026sd=true)",
                    "type": "string"
                },
                "VMSpecName": {
                    "description": "Some CSPs may not support or limit specs. [Ref](https://docs.google.com/spreadsheets/d/1mPmfnfmyszYimVzplZMzsqO3WsBmOdes/edit?usp=sharing\u0026ouid=108635813398159139552\u0026rtpof=true\u0026sd=true)",
                    "type": "string"
                }
            }
        },
        "spider.ClusterRegisterRequest": {
            "type": "object",
            "required": [
                "ConnectionName",
                "ReqInfo"
            ],
            "properties": {
                "ConnectionName": {
                    "type": "string",
                    "example": "aws-connection"
                },
                "ReqInfo": {
                    "type": "object",
                    "required": [
                        "CSPId",
                        "Name",
                        "VPCName"
                    ],
                    "properties": {
                        "CSPId": {
                            "type": "string",
                            "example": "csp-cluster-1234"
                        },
                        "Name": {
                            "type": "string",
                            "example": "cluster-01"
                        },
                        "VPCName": {
                            "type": "string",
                            "example": "vpc-01"
                        }
                    }
                }
            }
        },
        "spider.ClusterSetNodeGroupAutoScalingRequest": {
            "type": "object",
            "required": [
                "ConnectionName",
                "ReqInfo"
            ],
            "properties": {
                "ConnectionName": {
                    "type": "string",
                    "example": "aws-connection"
                },
                "ReqInfo": {
                    "type": "object",
                    "required": [
                        "OnAutoScaling"
                    ],
                    "properties": {
                        "OnAutoScaling": {
                            "type": "string",
                            "example": "true"
                        }
                    }
                }
            }
        },
        "spider.ClusterUpgradeRequest": {
            "type": "object",
            "required": [
                "ConnectionName",
                "ReqInfo"
            ],
            "properties": {
                "ConnectionName": {
                    "type": "string",
                    "example": "aws-connection"
                },
                "ReqInfo": {
                    "type": "object",
                    "required": [
                        "Version"
                    ],
                    "properties": {
                        "Version": {
                            "type": "string",
                            "example": "1.30"
                        }
                    }
                }
            }
        },
        "spider.ConnectionRequest": {
            "type": "object",
            "required": [
                "ConnectionName"
            ],
            "properties": {
                "ConnectionName": {
                    "type": "string",
                    "example": "aws-connection"
                }
            }
        },
        "spider.CountResponse": {
            "type": "object",
            "required": [
                "count"
            ],
            "properties": {
                "count": {
                    "type": "integer",
                    "example": 5
                }
            }
        },
        "spider.DiskAttachRequest": {
            "type": "object",
            "required": [
                "ConnectionName",
                "ReqInfo"
            ],
            "properties": {
                "ConnectionName": {
                    "type": "string",
                    "example": "aws-connection"
                },
                "ReqInfo": {
                    "type": "object",
                    "required": [
                        "VMName"
                    ],
                    "properties": {
                        "VMName": {
                            "type": "string",
                            "example": "vm-01"
                        }
                    }
                }
            }
        },
        "spider.DiskCreateRequest": {
            "type": "object",
            "required": [
                "ConnectionName",
                "ReqInfo"
            ],
            "properties": {
                "ConnectionName": {
                    "type": "string",
                    "example": "aws-connection"
                },
                "IDTransformMode": {
                    "description": "ON: transform CSP ID, OFF: no-transform CSP ID",
                    "type": "string",
                    "example": "ON"
                },
                "ReqInfo": {
                    "type": "object",
                    "required": [
                        "DiskSize",
                        "DiskType",
                        "Name"
                    ],
                    "properties": {
                        "DiskSize": {
                            "description": "100 or default, if not specified, default is used (unit is GB)",
                            "type": "string",
                            "example": "100"
                        },
                        "DiskType": {
                            "description": "gp2 or default, if not specified, default is used",
                            "type": "string",
                            "example": "gp2"
                        },
                        "Name": {
                            "type": "string",
                            "example": "disk-01"
                        },
                        "TagList": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/spider.KeyValue"
                            }
                        },
                        "Zone": {
                            "description": "target zone for the disk, if not specified, it will be created in the same zone as the Connection.",
                            "type": "string",
                            "example": "us-east-1b"
                        }
                    }
                }
            }
        },
        "spider.DiskDetachRequest": {
            "type": "object",
            "required": [
                "ConnectionName",
                "ReqInfo"
            ],
            "properties": {
                "ConnectionName": {
                    "type": "string",
                    "example": "aws-connection"
                },
                "ReqInfo": {
                    "type": "object",
                    "required": [
                        "VMName"
                    ],
                    "properties": {
                        "VMName": {
                            "type": "string",
                            "example": "vm-01"
                        }
                    }
                }
            }
        },
        "spider.DiskListResponse": {
            "type": "object",
            "required": [
                "disk"
            ],
            "properties": {
                "disk": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.DiskInfo"
                    }
                }
            }
        },
        "spider.DiskRegisterRequest": {
            "type": "object",
            "required": [
                "ConnectionName",
                "ReqInfo"
            ],
            "properties": {
                "ConnectionName": {
                    "type": "string",
                    "example": "aws-connection"
                },
                "ReqInfo": {
                    "type": "object",
                    "required": [
                        "CSPId",
                        "Name",
                        "Zone"
                    ],
                    "properties": {
                        "CSPId": {
                            "type": "string",
                            "example": "csp-disk-1234"
                        },
                        "Name": {
                            "type": "string",
                            "example": "disk-01"
                        },
                        "Zone": {
                            "description": "(default: defaultZone)",
                            "type": "string",
                            "example": "us-east-1b"
                        }
                    }
                }
            }
        },
        "spider.DiskSizeIncreaseRequest": {
            "type": "object",
            "required": [
                "ConnectionName",
                "ReqInfo"
            ],
            "properties": {
                "ConnectionName": {
                    "type": "string",
                    "example": "aws-connection"
                },
                "ReqInfo": {
                    "type": "object",
                    "required": [
                        "Size"
                    ],
                    "properties": {
                        "Size": {
                            "type": "string",
                            "example": "150"
                        }
                    }
                }
            }
        },
        "spider.DriverCapabilityResponse": {
            "type": "object",
            "properties": {
                "clusterHandler": {
                    "description": "support: true, do not support: false",
                    "type": "boolean"
                },
                "diskHandler": {
                    "description": "support: true, do not support: false",
                    "type": "boolean"
                },
                "emulated_VPC": {
                    "description": "support: true, do not support: false",
                    "type": "boolean"
                },
                "imageHandler": {
                    "description": "support: true, do not support: false",
                    "type": "boolean"
                },
                "keyPairHandler": {
                    "description": "support: true, do not support: false",
                    "type": "boolean"
                },
                "myImageHandler": {
                    "description": "support: true, do not support: false",
                    "type": "boolean"
                },
                "nlbhandler": {
                    "description": "support: true, do not support: false",
                    "type": "boolean"
                },
                "priceInfoHandler": {
                    "description": "support: true, do not support: false",
                    "type": "boolean"
                },
                "regionZoneHandler": {
                    "description": "Metadata Handler",
                    "type": "boolean"
                },
                "securityHandler": {
                    "description": "support: true, do not support: false",
                    "type": "boolean"
                },
                "single_VPC": {
                    "description": "support: true, do not support: false",
                    "type": "boolean"
                },
                "tagHandler": {
                    "description": "support: true, do not support: false",
                    "type": "boolean"
                },
                "tagSupportResourceType": {
                    "description": "ex) {ires.VPC, ires.SUBNET, ires.SG, ires.KEY, ires.VM, ires.NLB, ires.DISK, ires.MYIMAGE, ires.CLUSTER}",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.RSType"
                    }
                },
                "vmhandler": {
                    "description": "support: true, do not support: false",
                    "type": "boolean"
                },
                "vmspecHandler": {
                    "description": "support: true, do not support: false",
                    "type": "boolean"
                },
                "vpc_CIDR": {
                    "description": "etc.",
                    "type": "boolean"
                },
                "vpchandler": {
                    "description": "Resource Handler",
                    "type": "boolean"
                },
                "zoneBasedControl": {
                    "description": "Resource Control Scope",
                    "type": "boolean"
                }
            }
        },
        "spider.HealthCheckResponse": {
            "type": "object",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string",
                    "example": "CB-Spider is ready"
                }
            }
        },
        "spider.ImageListResponse": {
            "type": "object",
            "required": [
                "image"
            ],
            "properties": {
                "image": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.ImageInfo"
                    }
                }
            }
        },
        "spider.KeyPairCreateRequest": {
            "type": "object",
            "required": [
                "ConnectionName",
                "ReqInfo"
            ],
            "properties": {
                "ConnectionName": {
                    "type": "string",
                    "example": "aws-connection"
                },
                "IDTransformMode": {
                    "description": "ON: transform CSP ID, OFF: no-transform CSP ID",
                    "type": "string",
                    "example": "ON"
                },
                "ReqInfo": {
                    "type": "object",
                    "required": [
                        "Name"
                    ],
                    "properties": {
                        "Name": {
                            "type": "string",
                            "example": "keypair-01"
                        },
                        "TagList": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/spider.KeyValue"
                            }
                        }
                    }
                }
            }
        },
        "spider.KeyPairListResponse": {
            "type": "object",
            "properties": {
                "keypair": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.KeyPairInfo"
                    }
                }
            }
        },
        "spider.KeyPairRegisterRequest": {
            "type": "object",
            "required": [
                "ConnectionName",
                "ReqInfo"
            ],
            "properties": {
                "ConnectionName": {
                    "type": "string",
                    "example": "aws-connection"
                },
                "ReqInfo": {
                    "type": "object",
                    "required": [
                        "CSPId",
                        "Name"
                    ],
                    "properties": {
                        "CSPId": {
                            "type": "string",
                            "example": "csp-key-1234"
                        },
                        "Name": {
                            "type": "string",
                            "example": "keypair-01"
                        }
                    }
                }
            }
        },
        "spider.ListCloudDriverResponse": {
            "type": "object",
            "required": [
                "driver"
            ],
            "properties": {
                "driver": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.cim.CloudDriverInfo"
                    }
                }
            }
        },
        "spider.ListCloudOSResponse": {
            "type": "object",
            "required": [
                "cloudos"
            ],
            "properties": {
                "cloudos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"AWS\"",
                        " \"GCP\"]"
                    ]
                }
            }
        },
        "spider.ListConnectionConfigResponse": {
            "type": "object",
            "required": [
                "connectionconfig"
            ],
            "properties": {
                "connectionconfig": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.cim.ConnectionConfigInfo"
                    }
                }
            }
        },
        "spider.ListCredentialResponse": {
            "type": "object",
            "required": [
                "credential"
            ],
            "properties": {
                "credential": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.cim.CredentialInfo"
                    }
                }
            }
        },
        "spider.ListRegionResponse": {
            "type": "object",
            "required": [
                "region"
            ],
            "properties": {
                "region": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.cim.RegionInfo"
                    }
                }
            }
        },
        "spider.MyImageListResponse": {
            "type": "object",
            "required": [
                "myImage"
            ],
            "properties": {
                "myImage": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.MyImageInfo"
                    }
                }
            }
        },
        "spider.MyImageRegisterRequest": {
            "type": "object",
            "required": [
                "ConnectionName",
                "ReqInfo"
            ],
            "properties": {
                "ConnectionName": {
                    "type": "string",
                    "example": "aws-connection"
                },
                "ReqInfo": {
                    "type": "object",
                    "required": [
                        "CSPId",
                        "Name"
                    ],
                    "properties": {
                        "CSPId": {
                            "type": "string",
                            "example": "csp-myimage-1234"
                        },
                        "Name": {
                            "type": "string",
                            "example": "myimage-01"
                        }
                    }
                }
            }
        },
        "spider.MyImageSnapshotRequest": {
            "type": "object",
            "required": [
                "ConnectionName",
                "ReqInfo"
            ],
            "properties": {
                "ConnectionName": {
                    "type": "string",
                    "example": "aws-connection"
                },
                "IDTransformMode": {
                    "description": "ON: transform CSP ID, OFF: no-transform CSP ID",
                    "type": "string",
                    "example": "ON"
                },
                "ReqInfo": {
                    "type": "object",
                    "required": [
                        "Name",
                        "SourceVM"
                    ],
                    "properties": {
                        "Name": {
                            "type": "string",
                            "example": "myimage-01"
                        },
                        "SourceVM": {
                            "type": "string",
                            "example": "vm-01"
                        },
                        "TagList": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/spider.KeyValue"
                            }
                        }
                    }
                }
            }
        },
        "spider.NLBAddVMsRequest": {
            "type": "object",
            "required": [
                "ConnectionName",
                "ReqInfo"
            ],
            "properties": {
                "ConnectionName": {
                    "type": "string",
                    "example": "aws-connection"
                },
                "ReqInfo": {
                    "type": "object",
                    "required": [
                        "VMs"
                    ],
                    "properties": {
                        "VMs": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "vm-01"
                            ]
                        }
                    }
                }
            }
        },
        "spider.NLBCreateRequest": {
            "type": "object",
            "required": [
                "ConnectionName",
                "ReqInfo"
            ],
            "properties": {
                "ConnectionName": {
                    "type": "string",
                    "example": "aws-connection"
                },
                "IDTransformMode": {
                    "description": "ON: transform CSP ID, OFF: no-transform CSP ID",
                    "type": "string",
                    "example": "ON"
                },
                "ReqInfo": {
                    "type": "object",
                    "required": [
                        "HealthChecker",
                        "Listener",
                        "Name",
                        "Scope",
                        "Type",
                        "VMGroup",
                        "VPCName"
                    ],
                    "properties": {
                        "HealthChecker": {
                            "$ref": "#/definitions/spider.NLBHealthCheckerRequest"
                        },
                        "Listener": {
                            "$ref": "#/definitions/spider.NLBListenerCreateRequest"
                        },
                        "Name": {
                            "type": "string",
                            "example": "nlb-01"
                        },
                        "Scope": {
                            "description": "REGION(V) | GLOBAL",
                            "type": "string",
                            "example": "REGION"
                        },
                        "TagList": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/spider.KeyValue"
                            }
                        },
                        "Type": {
                            "description": "PUBLIC(V) | INTERNAL",
                            "type": "string",
                            "example": "PUBLIC"
                        },
                        "VMGroup": {
                            "$ref": "#/definitions/spider.NLBVMGroupRequest"
                        },
                        "VPCName": {
                            "type": "string",
                            "example": "vpc-01"
                        }
                    }
                }
            }
        },
        "spider.NLBGetOwnerVPCRequest": {
            "type": "object",
            "required": [
                "ConnectionName",
                "ReqInfo"
            ],
            "properties": {
                "ConnectionName": {
                    "type": "string",
                    "example": "aws-connection"
                },
                "ReqInfo": {
                    "type": "object",
                    "required": [
                        "CSPId"
                    ],
                    "properties": {
                        "CSPId": {
                            "type": "string",
                            "example": "csp-nlb-1234"
                        }
                    }
                }
            }
        },
        "spider.NLBGetVMGroupHealthInfoResponse": {
            "type": "object",
            "required": [
                "healthinfo"
            ],
            "properties": {
                "healthinfo": {
                    "$ref": "#/definitions/spider.HealthInfo"
                }
            }
        },
        "spider.NLBHealthCheckerRequest": {
            "type": "object",
            "required": [
                "Port",
                "Protocol"
            ],
            "properties": {
                "Interval": {
                    "description": "secs, if not specified, treated as \"default\", determined by CSP",
                    "type": "string",
                    "example": "default"
                },
                "Port": {
                    "description": "Listener Port or 1-65535",
                    "type": "string",
                    "example": "22"
                },
                "Protocol": {
                    "description": "TCP|HTTP",
                    "type": "string",
                    "example": "TCP"
                },
                "Threshold": {
                    "description": "num, if not specified, treated as \"default\", determined by CSP",
                    "type": "string",
                    "example": "default"
                },
                "Timeout": {
                    "description": "secs, if not specified, treated as \"default\", determined by CSP",
                    "type": "string",
                    "example": "default"
                }
            }
        },
        "spider.NLBListResponse": {
            "type": "object",
            "required": [
                "nlb"
            ],
            "properties": {
                "nlb": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.NLBInfo"
                    }
                }
            }
        },
        "spider.NLBListenerCreateRequest": {
            "type": "object",
            "required": [
                "Port",
                "Protocol"
            ],
            "properties": {
                "Port": {
                    "description": "1-65535",
                    "type": "string",
                    "example": "22"
                },
                "Protocol": {
                    "description": "TCP|UDP",
                    "type": "string",
                    "example": "TCP"
                }
            }
        },
        "spider.NLBRegisterRequest": {
            "type": "object",
            "required": [
                "ConnectionName",
                "ReqInfo"
            ],
            "properties": {
                "ConnectionName": {
                    "type": "string",
                    "example": "aws-connection"
                },
                "ReqInfo": {
                    "type": "object",
                    "required": [
                        "CSPId",
                        "Name",
                        "VPCName"
                    ],
                    "properties": {
                        "CSPId": {
                            "type": "string",
                            "example": "csp-nlb-1234"
                        },
                        "Name": {
                            "type": "string",
                            "example": "nlb-01"
                        },
                        "VPCName": {
                            "type": "string",
                            "example": "vpc-01"
                        }
                    }
                }
            }
        },
        "spider.NLBRemoveVMsRequest": {
            "type": "object",
            "required": [
                "ConnectionName",
                "ReqInfo"
            ],
            "properties": {
                "ConnectionName": {
                    "type": "string",
                    "example": "aws-connection"
                },
                "ReqInfo": {
                    "type": "object",
                    "required": [
                        "VMs"
                    ],
                    "properties": {
                        "VMs": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "vm-01"
                            ]
                        }
                    }
                }
            }
        },
        "spider.NLBVMGroupRequest": {
            "type": "object",
            "required": [
                "Port",
                "Protocol",
                "VMs"
            ],
            "properties": {
                "Port": {
                    "description": "Listener Port or 1-65535",
                    "type": "string",
                    "example": "22"
                },
                "Protocol": {
                    "description": "TCP|UDP",
                    "type": "string",
                    "example": "TCP"
                },
                "VMs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "vm-01"
                    ]
                }
            }
        },
        "spider.OriginalRegionListResponse": {
            "type": "object",
            "required": [
                "RegionInfo"
            ],
            "properties": {
                "RegionInfo": {
                    "description": "CSP-specific JSON format",
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "spider.OriginalVMSpecListResponse": {
            "type": "object",
            "required": [
                "VMSpecInfo"
            ],
            "properties": {
                "VMSpecInfo": {
                    "description": "CSP-specific JSON format",
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "spider.OriginalZoneListResponse": {
            "type": "object",
            "required": [
                "ZoneInfo"
            ],
            "properties": {
                "ZoneInfo": {
                    "description": "CSP-specific JSON format",
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "spider.PriceInfoRequest": {
            "type": "object",
            "required": [
                "connectionName"
            ],
            "properties": {
                "connectionName": {
                    "type": "string"
                },
                "filterList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.KeyValue"
                    }
                }
            }
        },
        "spider.PriceInfoResponse": {
            "type": "object",
            "required": [
                "cloudPriceList",
                "meta"
            ],
            "properties": {
                "cloudPriceList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.CloudPrice"
                    }
                },
                "meta": {
                    "$ref": "#/definitions/spider.Meta"
                }
            }
        },
        "spider.ProductFamilyListResponse": {
            "type": "object",
            "required": [
                "productfamily"
            ],
            "properties": {
                "productfamily": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "spider.RegionZoneListResponse": {
            "type": "object",
            "required": [
                "regionzone"
            ],
            "properties": {
                "regionzone": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.RegionZoneInfo"
                    }
                }
            }
        },
        "spider.RuleControlRequest": {
            "type": "object",
            "required": [
                "ConnectionName",
                "ReqInfo"
            ],
            "properties": {
                "ConnectionName": {
                    "type": "string",
                    "example": "aws-connection"
                },
                "ReqInfo": {
                    "type": "object",
                    "required": [
                        "RuleInfoList"
                    ],
                    "properties": {
                        "RuleInfoList": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "required": [
                                    "Direction",
                                    "FromPort",
                                    "IPProtocol",
                                    "ToPort"
                                ],
                                "properties": {
                                    "CIDR": {
                                        "type": "string",
                                        "example": "0.0.0.0/0(default)"
                                    },
                                    "Direction": {
                                        "type": "string",
                                        "example": "inbound"
                                    },
                                    "FromPort": {
                                        "type": "string",
                                        "example": "22"
                                    },
                                    "IPProtocol": {
                                        "type": "string",
                                        "example": "TCP"
                                    },
                                    "ToPort": {
                                        "type": "string",
                                        "example": "22"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "spider.SecurityGroupCreateRequest": {
            "type": "object",
            "required": [
                "ConnectionName",
                "ReqInfo"
            ],
            "properties": {
                "ConnectionName": {
                    "type": "string",
                    "example": "aws-connection"
                },
                "IDTransformMode": {
                    "description": "ON: transform CSP ID, OFF: no-transform CSP ID",
                    "type": "string",
                    "example": "ON"
                },
                "ReqInfo": {
                    "type": "object",
                    "required": [
                        "Name",
                        "SecurityRules",
                        "VPCName"
                    ],
                    "properties": {
                        "Name": {
                            "type": "string",
                            "example": "sg-01"
                        },
                        "SecurityRules": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/spider.SecurityRuleInfo"
                            }
                        },
                        "TagList": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/spider.KeyValue"
                            }
                        },
                        "VPCName": {
                            "type": "string",
                            "example": "vpc-01"
                        }
                    }
                }
            }
        },
        "spider.SecurityGroupListResponse": {
            "type": "object",
            "required": [
                "securitygroup"
            ],
            "properties": {
                "securitygroup": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.SecurityInfo"
                    }
                }
            }
        },
        "spider.SecurityGroupRegisterRequest": {
            "type": "object",
            "required": [
                "ConnectionName",
                "ReqInfo"
            ],
            "properties": {
                "ConnectionName": {
                    "type": "string",
                    "example": "aws-connection"
                },
                "ReqInfo": {
                    "type": "object",
                    "required": [
                        "CSPId",
                        "Name",
                        "VPCName"
                    ],
                    "properties": {
                        "CSPId": {
                            "type": "string",
                            "example": "csp-sg-1234"
                        },
                        "Name": {
                            "type": "string",
                            "example": "sg-01"
                        },
                        "VPCName": {
                            "type": "string",
                            "example": "vpc-01"
                        }
                    }
                }
            }
        },
        "spider.SimpleMsg": {
            "type": "object",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Any message"
                }
            }
        },
        "spider.SubnetAddRequest": {
            "type": "object",
            "required": [
                "ConnectionName",
                "ReqInfo"
            ],
            "properties": {
                "ConnectionName": {
                    "type": "string",
                    "example": "aws-connection"
                },
                "IDTransformMode": {
                    "description": "ON: transform CSP ID, OFF: no-transform CSP ID",
                    "type": "string",
                    "example": "ON"
                },
                "ReqInfo": {
                    "type": "object",
                    "required": [
                        "IPv4_CIDR",
                        "Name"
                    ],
                    "properties": {
                        "IPv4_CIDR": {
                            "type": "string",
                            "example": "10.0.12.0/22"
                        },
                        "Name": {
                            "type": "string",
                            "example": "subnet-01"
                        },
                        "TagList": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/spider.KeyValue"
                            }
                        },
                        "Zone": {
                            "description": "target zone for the subnet, if not specified, it will be created in the same zone as the Connection.",
                            "type": "string",
                            "example": "us-east-1b"
                        }
                    }
                }
            }
        },
        "spider.SubnetRegisterRequest": {
            "type": "object",
            "required": [
                "ConnectionName",
                "ReqInfo"
            ],
            "properties": {
                "ConnectionName": {
                    "type": "string",
                    "example": "aws-connection"
                },
                "ReqInfo": {
                    "type": "object",
                    "required": [
                        "CSPId",
                        "Name",
                        "VPCName"
                    ],
                    "properties": {
                        "CSPId": {
                            "type": "string",
                            "example": "csp-subnet-1234"
                        },
                        "Name": {
                            "type": "string",
                            "example": "subnet-01"
                        },
                        "VPCName": {
                            "type": "string",
                            "example": "vpc-01"
                        },
                        "Zone": {
                            "description": "(default: defaultZone)",
                            "type": "string",
                            "example": "us-east-1a"
                        }
                    }
                }
            }
        },
        "spider.SubnetUnregisterRequest": {
            "type": "object",
            "required": [
                "ConnectionName",
                "ReqInfo"
            ],
            "properties": {
                "ConnectionName": {
                    "type": "string",
                    "example": "aws-connection"
                },
                "ReqInfo": {
                    "type": "object",
                    "required": [
                        "VPCName"
                    ],
                    "properties": {
                        "VPCName": {
                            "type": "string",
                            "example": "vpc-01"
                        }
                    }
                }
            }
        },
        "spider.TagAddRequest": {
            "type": "object",
            "required": [
                "ConnectionName",
                "ReqInfo"
            ],
            "properties": {
                "ConnectionName": {
                    "type": "string",
                    "example": "aws-connection"
                },
                "ReqInfo": {
                    "type": "object",
                    "required": [
                        "ResourceName",
                        "ResourceType",
                        "Tag"
                    ],
                    "properties": {
                        "ResourceName": {
                            "type": "string",
                            "example": "vpc-01"
                        },
                        "ResourceType": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/spider.RSType"
                                }
                            ],
                            "example": "VPC"
                        },
                        "Tag": {
                            "$ref": "#/definitions/spider.KeyValue"
                        }
                    }
                }
            }
        },
        "spider.TagRemoveRequest": {
            "type": "object",
            "required": [
                "ConnectionName",
                "ReqInfo"
            ],
            "properties": {
                "ConnectionName": {
                    "type": "string",
                    "example": "aws-connection"
                },
                "ReqInfo": {
                    "type": "object",
                    "required": [
                        "ResourceName",
                        "ResourceType"
                    ],
                    "properties": {
                        "ResourceName": {
                            "type": "string",
                            "example": "vpc-01"
                        },
                        "ResourceType": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/spider.RSType"
                                }
                            ],
                            "example": "VPC"
                        }
                    }
                }
            }
        },
        "spider.VMListResponse": {
            "type": "object",
            "required": [
                "vm"
            ],
            "properties": {
                "vm": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.VMInfo"
                    }
                }
            }
        },
        "spider.VMListStatusResponse": {
            "type": "object",
            "required": [
                "vmstatus"
            ],
            "properties": {
                "vmstatus": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.VMStatusInfo"
                    }
                }
            }
        },
        "spider.VMRegisterRequest": {
            "type": "object",
            "required": [
                "ConnectionName",
                "ReqInfo"
            ],
            "properties": {
                "ConnectionName": {
                    "type": "string",
                    "example": "aws-connection"
                },
                "ReqInfo": {
                    "type": "object",
                    "required": [
                        "CSPId",
                        "Name"
                    ],
                    "properties": {
                        "CSPId": {
                            "type": "string",
                            "example": "csp-vm-1234"
                        },
                        "Name": {
                            "type": "string",
                            "example": "vm-01"
                        }
                    }
                }
            }
        },
        "spider.VMSpecListResponse": {
            "type": "object",
            "required": [
                "vmspec"
            ],
            "properties": {
                "vmspec": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.VMSpecInfo"
                    }
                }
            }
        },
        "spider.VMStartRequest": {
            "type": "object",
            "required": [
                "ConnectionName",
                "ReqInfo"
            ],
            "properties": {
                "ConnectionName": {
                    "type": "string",
                    "example": "aws-connection"
                },
                "IDTransformMode": {
                    "description": "ON: transform CSP ID, OFF: no-transform CSP ID",
                    "type": "string",
                    "example": "ON"
                },
                "ReqInfo": {
                    "type": "object",
                    "required": [
                        "ImageName",
                        "ImageType",
                        "KeyPairName",
                        "Name",
                        "SecurityGroupNames",
                        "SubnetName",
                        "VMSpecName",
                        "VPCName"
                    ],
                    "properties": {
                        "DataDiskNames": {
                            "description": "Data disks in the same zone as this VM",
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "data-disk-01",
                                " data-disk-02"
                            ]
                        },
                        "ImageName": {
                            "type": "string",
                            "example": "ami-12345678"
                        },
                        "ImageType": {
                            "description": "PublicImage or MyImage",
                            "type": "string",
                            "example": "PublicImage"
                        },
                        "KeyPairName": {
                            "type": "string",
                            "example": "keypair-01"
                        },
                        "Name": {
                            "type": "string",
                            "example": "vm-01"
                        },
                        "RootDiskSize": {
                            "description": "100 or default, if not specified, default is used (unit is GB)",
                            "type": "string",
                            "example": "30"
                        },
                        "RootDiskType": {
                            "description": "gp2 or default, if not specified, default is used",
                            "type": "string",
                            "example": "gp2"
                        },
                        "SecurityGroupNames": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "sg-01",
                                "sg-02"
                            ]
                        },
                        "SubnetName": {
                            "type": "string",
                            "example": "subnet-01"
                        },
                        "TagList": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/spider.KeyValue"
                            }
                        },
                        "VMSpecName": {
                            "type": "string",
                            "example": "t2.micro"
                        },
                        "VMUserId": {
                            "description": "Administrator, Windows Only",
                            "type": "string",
                            "example": "Administrator"
                        },
                        "VMUserPasswd": {
                            "description": "Windows Only",
                            "type": "string",
                            "example": "password1234"
                        },
                        "VPCName": {
                            "type": "string",
                            "example": "vpc-01"
                        }
                    }
                }
            }
        },
        "spider.VMStatusResponse": {
            "type": "object",
            "required": [
                "Status"
            ],
            "properties": {
                "Status": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/spider.VMStatus"
                        }
                    ],
                    "example": "Running"
                }
            }
        },
        "spider.VMUsingResources": {
            "type": "object",
            "required": [
                "Resources"
            ],
            "properties": {
                "Resources": {
                    "type": "object",
                    "required": [
                        "SGList",
                        "VPC"
                    ],
                    "properties": {
                        "SGList": {
                            "description": "example:\"[{NameId: 'sg-01', SystemId: 'sg-12345678'}]\"",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/spider.IID"
                            }
                        },
                        "VMKey": {
                            "description": "example:\"{NameId: 'keypair-01', SystemId: 'keypair-12345678'}\"",
                            "allOf": [
                                {
                                    "$ref": "#/definitions/spider.IID"
                                }
                            ]
                        },
                        "VPC": {
                            "description": "example:\"{NameId: 'vpc-01', SystemId: 'vpc-12345678'}\"",
                            "allOf": [
                                {
                                    "$ref": "#/definitions/spider.IID"
                                }
                            ]
                        }
                    }
                }
            }
        },
        "spider.VPCCreateRequest": {
            "type": "object",
            "required": [
                "ConnectionName",
                "ReqInfo"
            ],
            "properties": {
                "ConnectionName": {
                    "type": "string",
                    "example": "aws-connection"
                },
                "IDTransformMode": {
                    "description": "ON: transform CSP ID, OFF: no-transform CSP ID",
                    "type": "string",
                    "example": "ON"
                },
                "ReqInfo": {
                    "type": "object",
                    "required": [
                        "IPv4_CIDR",
                        "Name",
                        "SubnetInfoList"
                    ],
                    "properties": {
                        "IPv4_CIDR": {
                            "description": "Some CSPs unsupported VPC CIDR",
                            "type": "string",
                            "example": "10.0.0.0/16"
                        },
                        "Name": {
                            "type": "string",
                            "example": "vpc-01"
                        },
                        "SubnetInfoList": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "required": [
                                    "IPv4_CIDR",
                                    "Name"
                                ],
                                "properties": {
                                    "IPv4_CIDR": {
                                        "type": "string",
                                        "example": "10.0.8.0/22"
                                    },
                                    "Name": {
                                        "type": "string",
                                        "example": "subnet-01"
                                    },
                                    "TagList": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/definitions/spider.KeyValue"
                                        }
                                    },
                                    "Zone": {
                                        "description": "target zone for the subnet, if not specified, it will be created in the same zone as the Connection.",
                                        "type": "string",
                                        "example": "us-east-1b"
                                    }
                                }
                            }
                        },
                        "TagList": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/spider.KeyValue"
                            }
                        }
                    }
                }
            }
        },
        "spider.VPCGetSecurityGroupOwnerRequest": {
            "type": "object",
            "required": [
                "ConnectionName",
                "ReqInfo"
            ],
            "properties": {
                "ConnectionName": {
                    "type": "string",
                    "example": "aws-connection"
                },
                "ReqInfo": {
                    "type": "object",
                    "required": [
                        "CSPId"
                    ],
                    "properties": {
                        "CSPId": {
                            "type": "string",
                            "example": "csp-sg-1234"
                        }
                    }
                }
            }
        },
        "spider.VPCListResponse": {
            "type": "object",
            "required": [
                "vpc"
            ],
            "properties": {
                "vpc": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/spider.VPCInfo"
                    }
                }
            }
        },
        "spider.VPCRegisterRequest": {
            "type": "object",
            "required": [
                "ConnectionName",
                "ReqInfo"
            ],
            "properties": {
                "ConnectionName": {
                    "type": "string",
                    "example": "aws-connection"
                },
                "ReqInfo": {
                    "type": "object",
                    "required": [
                        "CSPId",
                        "Name"
                    ],
                    "properties": {
                        "CSPId": {
                            "type": "string",
                            "example": "csp-vpc-1234"
                        },
                        "Name": {
                            "type": "string",
                            "example": "vpc-01"
                        }
                    }
                }
            }
        },
        "spider.VersionInfoResponse": {
            "type": "object",
            "properties": {
                "Version": {
                    "type": "string",
                    "example": "CB-Spider v0.10.2-22"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}